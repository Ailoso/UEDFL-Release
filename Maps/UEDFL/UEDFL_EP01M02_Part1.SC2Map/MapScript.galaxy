//==================================================================================================
// 
// Generated Map Script
// 
// Name:   10-91 Echo
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/LibertyLib"
include "TriggerLibs/CampaignLib"
include "TriggerLibs/SwarmLib"
include "TriggerLibs/VoidCampaignLib"
include "TriggerLibs/VoidCampaignMissionLib"
include "TriggerLibs/VoidCampaignUILib"
include "LibAE8FC9D3"
include "Lib1926661B"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libLbty_InitLib();
    libCamp_InitLib();
    libHots_InitLib();
    libVoiC_InitLib();
    libVCMI_InitLib();
    libVCUI_InitLib();
    libAE8FC9D3_InitLib();
    lib1926661B_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_pLAYER_15_ROACHES_HOSTILE = 15;
const int gv_pLAYER_09_ROACHES = 9;
const int gv_pLAYER_06_ROACHES_NEUTRAL = 6;
const int gv_pLAYER_05_POLICE_NEUTRAL = 5;
const int gv_pLAYER_04_ROACHES = 4;
const int gv_pLAYER_03_CIVILIANS = 3;
const int gv_pLAYER_02_POLICE = 2;
const int gv_pLAYER_01_USER = 1;
const int gv_pLAYER_00_NEUTRAL = 0;
const int gv_bossUltralisk_Bossbar = 1;
const int gv_bossUltralisk_MaxLife = 2500;
const int gv_bossUltralisk_MaxLife2 = 1250;
const int gv_bossTunneler_Bossbar = 1;
const fixed gv_bossTunneler_MaxLife = 2750.0;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
bool gv_gameOver;
bool gv_inCinematic;
unit gv_myraDavis;
int gv_cruiserPing;
unit gv_davisCruiser;
unit gv_darren;
bool gv_midTransmission;
unitgroup gv_cinematicEnemiesUnitGroup;
int gv_stats_LorePickup;
fixed gv_davisKills;
unitgroup gv_parkEscapeRescueOfficerGroup;
unitgroup gv_connellyApartmentsFirstStopZergGroup;
int gv_connellyApartmentsObjective;
int gv_connellyApartmentsSectionActive;
fixed gv_davisLife;
int gv_davisMustSurvive;
int gv_parkEscapeFirstStopFightActive;
int gv_parkEscapeGasStationReveal;
unitgroup gv_parkEscapeRemoverCivs;
revealer gv_parkReveal;
unitgroup gv_parkEscapeZerglings;
unitgroup[11] gv_parkEscapeZgroup;
unitgroup gv_parkEscapeFollowgroup;
int gv_aUD109Section;
unit gv_aUD109CrashCar;
int gv_aUD109Protect;
int gv_aUD109;
unit gv_aUD24Copter;
unitgroup gv_aUD24HoldoutGroup;
int gv_aUD24Ping;
int gv_aUD24;
unitgroup gv_aUD24PlayerGroup;
unitgroup gv_aUD24HydraGroup;
int gv_aUD24Blockade;
int gv_aUD24Section;
unitgroup gv_aUD24AnnouncerGroup;
bool gv_aUD499CivilianTrigger;
unit gv_aUD499Civilian1;
unit gv_aUD499Civilian2;
unit gv_aUD499Civilian3;
unit gv_aUD499Civilian4;
unit gv_aUD499Civilian5;
unit gv_aUD499Civilian6;
unit gv_aUD499Civilian7;
unit gv_aUD499Civilian8;
unit gv_aUD499Civilian9;
unit gv_aUD499Civilian10;
int gv_aUD499RescuePing1;
int gv_aUD499RescuePing2;
int gv_aUD499RescuePing3;
int gv_aUD499RescuePing4;
int gv_aUD499RescuePing5;
int gv_aUD499RescuePing6;
int gv_aUD499RescuePing7;
int gv_aUD499RescuePing8;
int gv_aUD499RescuePing9;
int gv_aUD499RescuePing10;
int gv_aUD499BuildingAlarm;
int gv_aUD499DeadPresidents;
int gv_aUD499MoveTo;
int gv_aUD499RescueSectionBegins;
int gv_aUD499SectionBegins;
int gv_aUD499Ping;
int gv_aUD499;
int gv_aUD499Survives;
int gv_aUD499RescuedCivilians;
unitgroup gv_aUD499RescueGroup;
int gv_aUD499PDPing;
unit gv_aUD499Bomber;
unit gv_aUD499Officer;
bool gv_aUD499Rescue;
unit gv_aPC;
int gv_aUD36BuildingExplosionDoodad;
int gv_aUD36EscortActive;
int gv_aUD36FireSectionActive;
int gv_aUD36SectionActive;
int gv_aUD36;
int gv_aUD36Ping;
unitgroup gv_aUD36SectionEscort;
unit gv_aUD36Unit;
unitgroup gv_aUD36ZergGroup;
bool gv_riverWalkFlameGrenadesEnabled;
bool gv_riverWalkFlashBangsEnabled;
revealer gv_riverWalkRevealArea;
unit gv_riverWalkRexTheEngineer;
revealer gv_riverWalkSewerRevealer;
int gv_riverWalkReticleText1;
actor gv_riverWalkReticle1;
int gv_riverWalkReticleText2;
actor gv_riverWalkReticle2;
revealer gv_riverWalkRevealer;
unitgroup gv_riverWalkDavisUnit;
int gv_riverWalkTimerWindow;
timer gv_riverWalkTimer;
int gv_riverWalkSectionActive;
int gv_riverWalkPing;
int gv_riverWalkCityEngineer;
int gv_riverWalkClearThreats;
unitgroup gv_riverWalkSpawns;
unitgroup gv_riverWalkAggroSpawns;
bool gv_swatVanRemoveJourney;
int gv_swatVanSectionActive;
unitgroup gv_swatVanSectionZergGroup;
unit gv_swatVanSectionGuard3;
unit gv_swatVanSectionGuard2;
unit gv_swatVanSectionGuard1;
unit gv_swatVanSectionVanUnit;
unit gv_swatVanSectionCivilianLoadingUnit;
int gv_swatVanSectionObjective;
int gv_swatVanSectionMovingPing;
int gv_constructionYardEscortOfficers;
int gv_constructionYardOfficersRescued;
int gv_constructionYardOfficersLive;
unitgroup gv_constructionYardOfficerGroup;
int gv_constructionYardUPLArrives;
int gv_constructionYardSectionActive;
int gv_constructionYardPing;
int gv_constructionYardMoveToOfficers;
unitgroup gv_constructionYardZergGroup;
actor gv_ultraliskTruckReticle1;
actor gv_ultraliskTruckReticle2;
actor gv_ultraliskTruckReticle3;
actor gv_ultraliskTruckReticle4;
int gv_ultraliskTruckReticleTextTag1;
int gv_ultraliskTruckReticleTextTag2;
int gv_ultraliskTruckReticleTextTag3;
int gv_ultraliskTruckReticleTextTag4;
int gv_ultraliskSectionActive;
int gv_ultraliskMaximumSupportZerg;
int gv_ultraliskMaximumSupportZerg2;
unitgroup gv_ultraliskZergSupportGroup1;
unitgroup gv_ultraliskZergSupportGroup2;
unitgroup gv_ultraliskZergSupportGroup3;
int gv_ultraliskPing;
int gv_ultraliskObjective;
int gv_ultraliskGasTruckPing1;
int gv_ultraliskGasTruckPing2;
int gv_ultraliskGasTruckPing3;
int gv_ultraliskGasTruckPing4;
unit gv_ultraliskUnit;
unit[3] gv_ultraliskPathBlockers;
unitgroup gv_uPLSectionIncineratorGroup;
int gv_uPLSectionBasePing;
unitgroup gv_uPLSectionBaseGroup;
int gv_uPLSectionBaseObjective;
int gv_uPLSectionActive;
unit gv_womenandChildrenHoldoutBeacon;
unitgroup gv_womenandChildrenHoldoutZergUnitGroup;
bool gv_womenandChildrenHoldoutSection;
unitgroup gv_womenandChildrenOverlordGroup;
int gv_womenandChildrenOverlordPortion;
int gv_womenandChildrenOverlordMob;
int gv_womenandChildrenOverlordMayor;
int gv_womenandChildrenOverlordRout;
int gv_womenandChildrenRunning;
int gv_womenandChildrenDarrenAliveObjective;
int gv_womenandChildrenRedZoneBullies1;
int gv_womenandChildrenRedZoneBullies2;
unitgroup gv_womenandChildrenRedZoneZerg1;
unitgroup gv_womenandChildrenRedZoneZerg2;
int gv_womenandChildrenSWATVan;
unitgroup gv_womenandChildrenTroopGroup;
unitgroup gv_womenandChildrenZerglingSpawnGroup;
int gv_womenandChildrenActive;
int gv_womenandChildrenSwatVanObjective;
int gv_womenandChildrenRCObjective;
unit gv_womenandChildrenSWATVan1;
unit gv_womenandChildrenSWATVan2;
int gv_womenandChildrenPing;
bool gv_womenandChildrenDone;
unit gv_overlord1;
unit gv_overlord2;
unit gv_overlord3;
unit gv_overlord4;
unit gv_overlord5;
unit gv_overlord6;
unit gv_overlord7;
int gv_overlordPing1;
int gv_overlordPing2;
int gv_overlordPing3;
int gv_overlordPing4;
int gv_overlordPing5;
int gv_overlordPing6;
int gv_overlordPing7;
int gv_hysonTowerHiddenDoodads;
sound gv_hysonFireAlarm;
int gv_hysonTowerUpstairsAccessible;
int gv_hysonTowerRoachPart;
unitgroup gv_hysonTowerRoachGroup;
int gv_hysonTowerSectionObjective;
unit gv_mayor;
unit gv_hyson_Sergeant;
unit gv_hyson_Riot;
unit[3] gv_hyson_Gunner;
unit gv_hyson_Incinerator;
int gv_bossTunnelerKillObjective;
int gv_bossTunnelerSectionActive;
unit gv_bossTunnelerUnit;
unitgroup gv_riotTunnelGroup;
int gv_riotFrancinePing;
unit gv_riotTunnelCorporal;
unit gv_riotTunnelSergeant;
int gv_riotTunnelSection;
int gv_riotTunnelObjective;
int gv_riotTunnelSergeantLives;
unit gv_bossEgg;
revealer gv_bossValveRevealer;
int gv_bossObjectiveValveStatus;
unit gv_bossHKUnit;
int gv_bossHKSplitCount;
timer gv_bossValveTimer3;
timer gv_bossValveTimer2;
timer gv_bossValveTimer;
int gv_bossValveTimerWindow;
int gv_bossValveTimerWindow2;
int gv_bossValveTimerWindow3;
int gv_bossObjectiveWheel1;
int gv_bossObjectiveWheel2;
int gv_bossObjectiveWheel3;
int gv_bossFrancineSectionActive;
int gv_stat_CiviliansLost;
int gv_stat_CiviliansLostDeniseSection;
bool gv_stat_DeniseSectionActive;
int gv_stat_DavisFireKills;
int gv_stat_DavisFireTemp;
int gv_stat_PickupsUsed;
unitgroup gv_cinematicHiddenUnits;
unitgroup gv_cinematicPausedUnits;
unitgroup gv_cinematicTempUnits;
bool gv_cinematicCompleted;
unitgroup gv_introCinematicDavisCruiserGroup;
unit gv_introCine_Davis;
unit gv_introCine_DavisCruiser;
unit gv_introCine_NewsHelo;
unit[3] gv_introCine_TrafficCruisers;
unit gv_introCine_FastCruiser;
unit[4] gv_introCine_AccidentOfficers;
unit[3] gv_introCine_AccidentCivilians;
unit[32] gv_introCine_Civilians;
unit gv_introCine_BigRig;
unit gv_introCine_FinalTruck;
unit gv_introCine_TicketCivilian;
unit gv_introCine_AnimalControl;
unit gv_introCine_OfficerApartments;
unit gv_introCine_Trucks;
int gv_titleCardDialog;
int gv_titleCardLabel;
unit gv_ultraCine_Routhe;
unit gv_ultraCine_Ultralisk;
unitgroup gv_ultralisk_Infantry;
int gv_uPLCine_OverlordCorpse;
unit gv_uPLCine_Sergeant;
unitgroup gv_uPLCine_DavisChopperGroup;
unit gv_uPLCine_DavisChopper;
unit gv_uPLCine_Osprey;
unit[4] gv_uPLCine_Routhes;
unitgroup gv_uPLCine_Civilians;
bool gv_uPLCine_TransmissionCompleted;
revealer gv_mayorSectionRevealer;
unitgroup gv_mayorCine_DavisGroup;
unitgroup gv_hysonCine_HysonUnits;
unit gv_hysonCine_Davis;
unit gv_hysonCine_Mayor;
unit gv_riotCine_Sergeant;
unit gv_riotCine_Mayor;
unit gv_riotCine_Davis;
unit gv_riotCine_Darren;
bool gv_riotCine_Part1Finished;
unitgroup gv_riotCine_Marchers;
unitgroup gv_riotCine_DavisGroup;
revealer gv_mapRevealer;

void InitGlobals () {
    int init_i;

    gv_cruiserPing = c_invalidPingId;
    gv_cinematicEnemiesUnitGroup = UnitGroupEmpty();
    gv_parkEscapeRescueOfficerGroup = UnitGroupEmpty();
    gv_connellyApartmentsFirstStopZergGroup = UnitGroupEmpty();
    gv_connellyApartmentsObjective = c_invalidObjectiveId;
    gv_davisMustSurvive = c_invalidObjectiveId;
    gv_parkEscapeGasStationReveal = c_invalidPingId;
    gv_parkEscapeRemoverCivs = UnitGroupEmpty();
    gv_parkEscapeZerglings = UnitGroupEmpty();
    for (init_i = 0; init_i <= 10; init_i += 1) {
        gv_parkEscapeZgroup[init_i] = UnitGroupEmpty();
    }
    gv_parkEscapeFollowgroup = UnitGroupEmpty();
    gv_aUD109Protect = c_invalidObjectiveId;
    gv_aUD109 = c_invalidObjectiveId;
    gv_aUD24HoldoutGroup = UnitGroupEmpty();
    gv_aUD24Ping = c_invalidPingId;
    gv_aUD24 = c_invalidObjectiveId;
    gv_aUD24PlayerGroup = UnitGroupEmpty();
    gv_aUD24HydraGroup = UnitGroupEmpty();
    gv_aUD24AnnouncerGroup = UnitGroupEmpty();
    gv_aUD499RescuePing1 = c_invalidPingId;
    gv_aUD499RescuePing2 = c_invalidPingId;
    gv_aUD499RescuePing3 = c_invalidPingId;
    gv_aUD499RescuePing4 = c_invalidPingId;
    gv_aUD499RescuePing5 = c_invalidPingId;
    gv_aUD499RescuePing6 = c_invalidPingId;
    gv_aUD499RescuePing7 = c_invalidPingId;
    gv_aUD499RescuePing8 = c_invalidPingId;
    gv_aUD499RescuePing9 = c_invalidPingId;
    gv_aUD499RescuePing10 = c_invalidPingId;
    gv_aUD499MoveTo = c_invalidObjectiveId;
    gv_aUD499Ping = c_invalidPingId;
    gv_aUD499 = c_invalidObjectiveId;
    gv_aUD499Survives = c_invalidObjectiveId;
    gv_aUD499RescueGroup = UnitGroupEmpty();
    gv_aUD499PDPing = c_invalidPingId;
    gv_aUD36 = c_invalidObjectiveId;
    gv_aUD36Ping = c_invalidPingId;
    gv_aUD36SectionEscort = UnitGroupEmpty();
    gv_aUD36Unit = UnitFromId(980281084);
    gv_aUD36ZergGroup = UnitGroupEmpty();
    gv_riverWalkReticleText1 = c_textTagNone;
    gv_riverWalkReticleText2 = c_textTagNone;
    gv_riverWalkDavisUnit = UnitGroupEmpty();
    gv_riverWalkTimerWindow = c_timerWindowNone;
    gv_riverWalkTimer = TimerCreate();
    gv_riverWalkPing = c_invalidPingId;
    gv_riverWalkCityEngineer = c_invalidObjectiveId;
    gv_riverWalkClearThreats = c_invalidObjectiveId;
    gv_riverWalkSpawns = UnitGroupEmpty();
    gv_riverWalkAggroSpawns = UnitGroupEmpty();
    gv_swatVanSectionZergGroup = UnitGroupEmpty();
    gv_swatVanSectionObjective = c_invalidObjectiveId;
    gv_swatVanSectionMovingPing = c_invalidPingId;
    gv_constructionYardEscortOfficers = c_invalidObjectiveId;
    gv_constructionYardOfficersLive = c_invalidObjectiveId;
    gv_constructionYardOfficerGroup = UnitGroupEmpty();
    gv_constructionYardPing = c_invalidPingId;
    gv_constructionYardMoveToOfficers = c_invalidObjectiveId;
    gv_constructionYardZergGroup = UnitGroupEmpty();
    gv_ultraliskTruckReticleTextTag1 = c_textTagNone;
    gv_ultraliskTruckReticleTextTag2 = c_textTagNone;
    gv_ultraliskTruckReticleTextTag3 = c_textTagNone;
    gv_ultraliskTruckReticleTextTag4 = c_textTagNone;
    gv_ultraliskMaximumSupportZerg = 100;
    gv_ultraliskMaximumSupportZerg2 = 40;
    gv_ultraliskZergSupportGroup1 = UnitGroupEmpty();
    gv_ultraliskZergSupportGroup2 = UnitGroupEmpty();
    gv_ultraliskZergSupportGroup3 = UnitGroupEmpty();
    gv_ultraliskPing = c_invalidPingId;
    gv_ultraliskObjective = c_invalidObjectiveId;
    gv_ultraliskGasTruckPing1 = c_invalidPingId;
    gv_ultraliskGasTruckPing2 = c_invalidPingId;
    gv_ultraliskGasTruckPing3 = c_invalidPingId;
    gv_ultraliskGasTruckPing4 = c_invalidPingId;
    gv_uPLSectionIncineratorGroup = UnitGroupEmpty();
    gv_uPLSectionBasePing = c_invalidPingId;
    gv_uPLSectionBaseGroup = UnitGroupEmpty();
    gv_uPLSectionBaseObjective = c_invalidObjectiveId;
    gv_womenandChildrenHoldoutZergUnitGroup = UnitGroupEmpty();
    gv_womenandChildrenOverlordGroup = UnitGroupEmpty();
    gv_womenandChildrenOverlordMob = c_invalidObjectiveId;
    gv_womenandChildrenDarrenAliveObjective = c_invalidObjectiveId;
    gv_womenandChildrenRedZoneZerg1 = UnitGroupEmpty();
    gv_womenandChildrenRedZoneZerg2 = UnitGroupEmpty();
    gv_womenandChildrenTroopGroup = UnitGroupEmpty();
    gv_womenandChildrenZerglingSpawnGroup = UnitGroupEmpty();
    gv_womenandChildrenSwatVanObjective = c_invalidObjectiveId;
    gv_womenandChildrenRCObjective = c_invalidObjectiveId;
    gv_womenandChildrenPing = c_invalidPingId;
    gv_overlordPing1 = c_invalidPingId;
    gv_overlordPing2 = c_invalidPingId;
    gv_overlordPing3 = c_invalidPingId;
    gv_overlordPing4 = c_invalidPingId;
    gv_overlordPing5 = c_invalidPingId;
    gv_overlordPing6 = c_invalidPingId;
    gv_overlordPing7 = c_invalidPingId;
    gv_hysonTowerRoachGroup = UnitGroupEmpty();
    gv_hysonTowerSectionObjective = c_invalidObjectiveId;
    gv_bossTunnelerKillObjective = c_invalidObjectiveId;
    gv_riotTunnelGroup = UnitGroupEmpty();
    gv_riotFrancinePing = c_invalidPingId;
    gv_riotTunnelObjective = c_invalidObjectiveId;
    gv_riotTunnelSergeantLives = c_invalidObjectiveId;
    gv_bossValveTimer3 = TimerCreate();
    gv_bossValveTimer2 = TimerCreate();
    gv_bossValveTimer = TimerCreate();
    gv_bossValveTimerWindow = c_timerWindowNone;
    gv_bossValveTimerWindow2 = c_timerWindowNone;
    gv_bossValveTimerWindow3 = c_timerWindowNone;
    gv_bossObjectiveWheel1 = c_invalidObjectiveId;
    gv_bossObjectiveWheel2 = c_invalidObjectiveId;
    gv_bossObjectiveWheel3 = c_invalidObjectiveId;
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicPausedUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    gv_introCinematicDavisCruiserGroup = UnitGroupEmpty();
    gv_titleCardDialog = c_invalidDialogId;
    gv_titleCardLabel = c_invalidDialogControlId;
    gv_ultralisk_Infantry = UnitGroupEmpty();
    gv_uPLCine_DavisChopperGroup = UnitGroupEmpty();
    gv_uPLCine_Civilians = UnitGroupEmpty();
    gv_mayorCine_DavisGroup = UnitGroupEmpty();
    gv_hysonCine_HysonUnits = UnitGroupEmpty();
    gv_riotCine_Marchers = UnitGroupEmpty();
    gv_riotCine_DavisGroup = UnitGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_SendTransmissionNoPortrait (text lp_text, soundlink lp_speech);
void gf_SendTransmissionFromUnit (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue);
void gf_SendTransmissionFromUnitCombat (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue);
void gf_CinematicBurrowedZergAttack (string lp_unitType, int lp_numberofUnitsNormal, int lp_player, region lp_spawnRegion);
void gf_ZerglingReplenisher (int lp__23232323, region lp_creatorregion, region lp_bullyregion, unitgroup lp_unitGroup);
void gf_ParkEscapeCivilianCreator (int lp__23232323, region lp_creator, region lp_deleter);
void gf_CinematicCivilianCreator (int lp__23232323, region lp_spawner, region lp_remover);
void gf_CivilianCreatorCinematic (int lp__23232323, region lp_spawner, region lp_remover);
void gf_DisplayTitleCard ();

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Initialization;
trigger gt_Init01Technology;
trigger gt_Init02Players;
trigger gt_Init03Units;
trigger gt_Init04MusicSound;
trigger gt_Init05Environment;
trigger gt_StreetRiverwalk;
trigger gt_StreetConnellyApartments;
trigger gt_StreetPoliceHQ;
trigger gt_DavisCruiserStunned;
trigger gt_DavisCruiserActive;
trigger gt_DavisCruiserDies;
trigger gt_NoZergorCivilianSelectable;
trigger gt_ArtifactDavis;
trigger gt_ArtifactSurplus;
trigger gt_ArtifactDenise;
trigger gt_ArtifactBoomBoom;
trigger gt_ArtifactIncinerator;
trigger gt_ArtifactFrancine;
trigger gt_TipMyraDavis;
trigger gt_TipProtectandServe;
trigger gt_TipPoliceCruiser;
trigger gt_TipHealingPatch;
trigger gt_TipFlashBangGrenade;
trigger gt_TipHeadshot;
trigger gt_TipIncendiaryGrenade;
trigger gt_TipHelpAUD499;
trigger gt_TipSavetheDay;
trigger gt_TipPowerGrid;
trigger gt_TipLoadingVan;
trigger gt_TipBoomBoom;
trigger gt_TipGasTrucks;
trigger gt_TipIncineratorUnit;
trigger gt_TipCoolantCloseoff;
trigger gt_TipSergeantPeters;
trigger gt_TipRifleSwitch;
trigger gt_TipAPC;
trigger gt_DEBUG_Vic;
trigger gt_ParkEscapeZergling1;
trigger gt_ParkEscapeZergling2;
trigger gt_ParkEscapeZergling3;
trigger gt_ParkEscapeZergling4;
trigger gt_ParkEscapeZergling5;
trigger gt_ParkEscapeZergling6;
trigger gt_ParkEscapeBloodshed1;
trigger gt_ParkEscapeBloodshed2;
trigger gt_ParkEscapeBloodshed2FastCops;
trigger gt_ParkEscapeBloodshed3;
trigger gt_ParkEscapeBloodshed4;
trigger gt_ParkEscapeBloodshed5;
trigger gt_ParkEscapeBloodshed6;
trigger gt_ParkEscapeBloodshed7;
trigger gt_ParkSectionBegins;
trigger gt_ParkEscapeFastCopDespawn;
trigger gt_ParkZerglingMaker;
trigger gt_ParkEscapeSection;
trigger gt_ParkEscapeInitializeBullies;
trigger gt_ParkEscapePoliceTransmissions;
trigger gt_ParkEscapeSirenLoop;
trigger gt_ParkEscapeFirstStopCivilianDespawn;
trigger gt_ParkEscapeFirstStop;
trigger gt_ParkEscapeFirstStopArrive;
trigger gt_ParkEscapeFirstZergSpawn1;
trigger gt_ParkEscapeFirstZergSpawn2;
trigger gt_ParkEscapeCompletion;
trigger gt_ParkEscapeOfficersRescued;
trigger gt_AUD109Setup;
trigger gt_AUD109CrashStart;
trigger gt_AUD109CrashStart2;
trigger gt_AUD109CrashStart3;
trigger gt_AUD109AccidentScene;
trigger gt_AUD109SpawnsStart;
trigger gt_AUD109Begins;
trigger gt_AUD109Completed;
trigger gt_AUD24HydraSpawns;
trigger gt_AUD24BlockadeTripwire;
trigger gt_AUD24BlockadeZergSpawn;
trigger gt_AUD24BlockadeZergDespawn;
trigger gt_AUD24Unburrow1;
trigger gt_AUD24Unburrow2;
trigger gt_AUD24CruiserExplosionSFX;
trigger gt_AUD24PoliceAnnouncementTripwire;
trigger gt_AUD24HoldoutSetup;
trigger gt_AUD24HoldoutStart;
trigger gt_AUD24HoldoutPoliceFallBack;
trigger gt_AUD24HoldoutBackupSpawns;
trigger gt_AUD24HoldoutBackupDeploys;
trigger gt_AUD24KillCruiser;
trigger gt_AUD24DavisCruiserDies;
trigger gt_AUD24HoldoutVictory;
trigger gt_AUD499CivilianGone1;
trigger gt_AUD499CivilianGone2;
trigger gt_AUD499CivilianGone3;
trigger gt_AUD499CivilianGone4;
trigger gt_AUD499CivilianGone5;
trigger gt_AUD499CivilianGone6;
trigger gt_AUD499CivilianGone7;
trigger gt_AUD499CivilianGone8;
trigger gt_AUD499CivilianGone9;
trigger gt_AUD499CivilianGone10;
trigger gt_AUD499CivilianRuns110;
trigger gt_AUD499CivilianRuns98;
trigger gt_AUD499CivilianRuns67;
trigger gt_AUD499CivilianRuns45;
trigger gt_AUD499CivilianRuns23;
trigger gt_AUD499RescueCivilian1;
trigger gt_AUD499RescueCivilian2;
trigger gt_AUD499RescueCivilian3;
trigger gt_AUD499RescueCivilian4;
trigger gt_AUD499RescueCivilian5;
trigger gt_AUD499RescueCivilian6;
trigger gt_AUD499RescueCivilian7;
trigger gt_AUD499RescueCivilian8;
trigger gt_AUD499RescueCivilian9;
trigger gt_AUD499RescueCivilian10;
trigger gt_AUD499RescueCiviliansArriveAtHQ;
trigger gt_AUD499Dialogue4Rescued;
trigger gt_AUD499Dialogue6Rescued;
trigger gt_AUD499Dialogue8Rescued;
trigger gt_AUD499RescueOfficersEarly;
trigger gt_AUD499SectionSetup;
trigger gt_AUD499SectionStart;
trigger gt_AUD499RescueCopsontheWay;
trigger gt_AUD499CivilianInRescueGroupDies;
trigger gt_AUD499BuildingFireSilencedNotYet499;
trigger gt_AUD499BuildingAlarmPlays;
trigger gt_AUD499BuildingAlarmStops;
trigger gt_AUD499SectionDavisGetsClose;
trigger gt_AUD499SWATVanMoves;
trigger gt_AUD499SWATVanBoom;
trigger gt_AUD499ScreamingCiviliansTripwire;
trigger gt_AUD499ScreamingCiviliansDespawn;
trigger gt_AUD499APCTrigger;
trigger gt_AUD499APCRescue;
trigger gt_AUD499ZergSpawnTripwire;
trigger gt_AUD499ZergSpawnTripwire2;
trigger gt_AUD499ZergSpawnTripwire3;
trigger gt_AUD499ZergSpawnTripwire4;
trigger gt_AUD499Victory;
trigger gt_AUD499End;
trigger gt_AUD36SectionUnits;
trigger gt_AUD36SectionSetup;
trigger gt_AUD36SectionEAS;
trigger gt_AUD36SectionStart;
trigger gt_AUD36ZergSpawn1;
trigger gt_AUD36ZergSpawn2;
trigger gt_AUD36ZergSpawn3;
trigger gt_AUD36ZergSpawn4;
trigger gt_AUD36PreventZergWanderingAway;
trigger gt_AUD36BuildingFireHeard;
trigger gt_AUD36BuildingFireLeave;
trigger gt_AUD36BuildingExplosion;
trigger gt_AUD36AirRaidSiren;
trigger gt_AUD36Victory;
trigger gt_AUD36DavisSwapstoRiotGear;
trigger gt_RiverWalkSectionSetup;
trigger gt_RiverWalkSectionSetup2;
trigger gt_RiverWalkSectionUnits;
trigger gt_RiverWalkSectionSetup3;
trigger gt_RiverWalkSectionSetup4;
trigger gt_RiverWalkSectionZergSpawn1;
trigger gt_RiverWalkSectionZergSpawn2;
trigger gt_RiverWalkSectionZergAttackDavis;
trigger gt_RiverWalkSectionZergSpawns;
trigger gt_RiverWalkSectionReadytoDescend;
trigger gt_RiverWalkSectionDescend;
trigger gt_RiverWalkSectionDescend2;
trigger gt_RiverWalkSectionDescend3;
trigger gt_RiverWalkSectionDescend4;
trigger gt_RiverWalkSectionDescend5;
trigger gt_RiverWalkSectionRandomZergSpawns;
trigger gt_RiverWalkSectionRandomZergSpawns2;
trigger gt_RiverWalkSectionRandomZergSpawns3;
trigger gt_RiverWalkSectionRandomZergSpawns4;
trigger gt_RiverWalkSectionTimerStarts;
trigger gt_RiverWalkSectionFirstZergUnburrow;
trigger gt_RiverWalkSectionFirstPowerOutage;
trigger gt_RiverWalkSectionZergDoorSpawnSewer;
trigger gt_RiverWalkSectionSecondPowerOutage;
trigger gt_RiverWalkSectionZergDoorSpawnSewer2;
trigger gt_RiverWalkSectionFinalPowerOutage;
trigger gt_RiverWalkSectionZergDoorSpawnSewer3;
trigger gt_RiverWalkSectionVictory;
trigger gt_SWATVanSectionUnits;
trigger gt_SWATVanSectionSetup;
trigger gt_SWATVanEAS;
trigger gt_SWATVanMoveOut;
trigger gt_SWATVanArrives;
trigger gt_SWATVanEnRouteTripwire;
trigger gt_SWATVanSectionZergSpawns;
trigger gt_SWATVanReturnstoHQ;
trigger gt_SWATVanRemoval;
trigger gt_SWATVanSectionGuard1LoadsUp;
trigger gt_SWATVanSectionGuard2LoadsUp;
trigger gt_SWATVanSectionGuard3LoadsUp;
trigger gt_SWATVanSectionCiviliansRunningtoVan;
trigger gt_SWATVanSectionCiviliansLoadingtoVan;
trigger gt_SWATVanDavisSaysMove;
trigger gt_SWATVanSectionZergAttackVan;
trigger gt_SWATVanSectionVictory;
trigger gt_ConstructionYardSectionSetup;
trigger gt_ConstructionYardArrive;
trigger gt_ConstructionYardUnits;
trigger gt_ConstructionYardMoveToUnburrow;
trigger gt_ConstructionYardMoveToUnburrow2;
trigger gt_ConstructionYardAttackWaves;
trigger gt_ConstructionYardMoveToOsprey;
trigger gt_ConstructionYardOspreyDespawn;
trigger gt_ConstructionYardUPLArrives;
trigger gt_ConstructionYardZergTargetOfficers;
trigger gt_ConstructionYardZergTargetUPL;
trigger gt_ConstructionYardEscorttoStation;
trigger gt_ConstructionYardRemoveOfficersatStation;
trigger gt_ConstructionYardVictory;
trigger gt_UltraliskPreCinematic;
trigger gt_BossUltraliskBossbarShow;
trigger gt_BossUltraliskBossbarUpdate;
trigger gt_UltraliskSectionBegins;
trigger gt_UltraliskReinforcementsHard;
trigger gt_UltraliskReinforcementsNormal;
trigger gt_UltraliskReinforcements2;
trigger gt_TruckPingDeath1;
trigger gt_TruckPingDeath2;
trigger gt_TruckPingDeath3;
trigger gt_TruckPingDeath4;
trigger gt_UltraliskDamagedByGasTruck;
trigger gt_UltraliskDamagedByGasTruckQuote;
trigger gt_UltraliskDespawn;
trigger gt_UltraliskUltraliskDies;
trigger gt_UltraliskVictoryRuns;
trigger gt_UltraliskVictoryRuns2;
trigger gt_UPLSectionBegins;
trigger gt_UPLSectionReload;
trigger gt_UPLSectionZerglingSpawn;
trigger gt_UPLSectionIncineratorSpawn;
trigger gt_UPLSectionIncineratorFace;
trigger gt_UPLSectionUnburrow;
trigger gt_UPLSectionVictory;
trigger gt_MayorOverlordBreaksThrough;
trigger gt_MayorOverlordGetsToRoof;
trigger gt_MayorOverlord1;
trigger gt_MayorOverlord2;
trigger gt_MayorOverlord3;
trigger gt_MayorOverlord4;
trigger gt_MayorOverlord5;
trigger gt_MayorOverlord6;
trigger gt_MayorOverlord7;
trigger gt_MayorOverlordDies1;
trigger gt_MayorOverlordDies2;
trigger gt_MayorOverlordDies3;
trigger gt_MayorOverlordDies4;
trigger gt_MayorOverlordDies5;
trigger gt_MayorOverlordDies6;
trigger gt_MayorOverlordDies7;
trigger gt_WomenandChildrenBegins;
trigger gt_WomenandChildrenUnits;
trigger gt_WomenandChildrenTroopSpawn;
trigger gt_WomenandChildrenSWATVanPath1;
trigger gt_WomenandChildrenSWATVanStop;
trigger gt_WomenandChildrenSWATVanPath2;
trigger gt_WomenandChildrenTroopDespawn;
trigger gt_WomenandChildrenBullies1;
trigger gt_WomenandChildrenBullies2;
trigger gt_WomenandChildrenOverlordsSpawn;
trigger gt_WomenandChildrenOverlordDespawn;
trigger gt_WomenandChildrenDarrenDies;
trigger gt_WomenandChildrenHoldoutOverlordsSpawn;
trigger gt_WomenandChildrenPart2Start;
trigger gt_WomenandChildrenAllOverlordsDie;
trigger gt_WomenandChildrenSomeOverlordsDie;
trigger gt_HysonTowerSectionLobbyFightEnds;
trigger gt_HysonTowerBeginUpstairsSection;
trigger gt_HysonTowerFloor2;
trigger gt_BossTunnelerStart;
trigger gt_BossTunnelerWin;
trigger gt_BossTunnelerBossbarShow;
trigger gt_BossTunnelerBossbarUpdate;
trigger gt_BossTunnelerConstantAggression;
trigger gt_BossTunnelerSpawnPointStart;
trigger gt_BossTunnelerSpawnPoint1;
trigger gt_BossTunnelerSpawnPoint2;
trigger gt_BossTunnelerSpawnPoint3;
trigger gt_BossTunnelerSpawnPoint4;
trigger gt_BossTunnelerSpawnPoint5;
trigger gt_BossTunnelerSpawnPoint6;
trigger gt_BossTunnelerSpawnPoint7;
trigger gt_BossTunnelerDealDamage;
trigger gt_HysonTunnelerBossVictory;
trigger gt_RiotTunnelSectionStart;
trigger gt_RiotTunnelAmbient;
trigger gt_RiotTunnelUnburrow1;
trigger gt_RiotTunnelUnburrow2;
trigger gt_RiotTunnelUnburrow3;
trigger gt_RiotTunnelUnburrow4;
trigger gt_RiotTunnelSectionAttack;
trigger gt_RiotTunnelSectionReveal;
trigger gt_RiotTunnelBeacon;
trigger gt_BossHKEggs;
trigger gt_BossHKConstantAggression;
trigger gt_BossHKDeathSplitCount1;
trigger gt_BossHKDeathSplitCount2;
trigger gt_BossHKDeathSplitCount3;
trigger gt_BossHKDeathSplitCount4;
trigger gt_BossHKDeathSplitCount5;
trigger gt_BossHKDeathSplitCount6;
trigger gt_BossHKDeathSplitCount7;
trigger gt_BossHKDeathSplitCount8;
trigger gt_BossHKValve1TimerAppear;
trigger gt_BossHKValve1TimerStop;
trigger gt_BossHKValve1TimerStart;
trigger gt_BossHKValve1Closed;
trigger gt_BossHKValve2TimerAppear;
trigger gt_BossHKValve2TimerStop;
trigger gt_BossHKValve2TimerStart;
trigger gt_BossHKValve2Closed;
trigger gt_BossHKValve3TimeAppear;
trigger gt_BossHKValve3TimerStop;
trigger gt_BossHKValve3TimerStart;
trigger gt_BossHKValve3Closed;
trigger gt_FrancineBossSetup;
trigger gt_FrancineBossAppearsandTip;
trigger gt_FrancineBossVictory;
trigger gt_StatCiviliansLost;
trigger gt_Stat_FirenadeKillWindow;
trigger gt_Stat_FirenadeLaunch;
trigger gt_Stat_GrenadesUsed;
trigger gt_DefeatAUD36Dies;
trigger gt_DefeatAUD109Dies;
trigger gt_DefeatAUD499Dies;
trigger gt_DefeatAUD499CiviliansDie;
trigger gt_DefeatConstructionOfficersDead;
trigger gt_DefeatDavisDead;
trigger gt_DefeatRexDead;
trigger gt_DefeatDarrenDead;
trigger gt_DefeatRiotTunnelSergeantDead;
trigger gt_DefeatSWATVanDead;
trigger gt_DefeatSWATVanWomenandChildrenDead;
trigger gt_VictorySequence;
trigger gt_Victory;
trigger gt_Defeat;
trigger gt_VictoryCheat;
trigger gt_DefeatCheat;
trigger gt_IntroQ;
trigger gt_IntroSetup;
trigger gt_IntroCinematic;
trigger gt_IntroCinematicEnd;
trigger gt_IntroCleanup;
trigger gt_IntroCinematicAnimalControlDelayedPan;
trigger gt_IntroCinematicAccidentAmbience;
trigger gt_IntroCinematicAccidentStop;
trigger gt_IntroCinematicFinalTruckMove;
trigger gt_IntroCinematicRunningCivilianScreams;
trigger gt_IntroCinematicTrafficCopsFace1;
trigger gt_IntroCinematicCivilianRedirect;
trigger gt_IntroCinematicDavisRodentTransmission;
trigger gt_IntroCinematicDespawnNewsCopter;
trigger gt_IntroCinematicFountainPlays;
trigger gt_IntroCinematicFountainStops;
trigger gt_UltraliskQ;
trigger gt_UltraliskSetup;
trigger gt_UltraliskCinematic;
trigger gt_UltraliskCinematicEnd;
trigger gt_UltraliskCleanup;
trigger gt_UltraliskCinematicRoutheDies;
trigger gt_UPLQ;
trigger gt_UPLSetup;
trigger gt_UPLCinematic;
trigger gt_UPLCinematicEnd;
trigger gt_UPLCleanup;
trigger gt_UPLCinematicTransmissions;
trigger gt_UPLCinematicOspreyLandingSite;
trigger gt_UPLCinematicDavisLands;
trigger gt_UPLCinematicDespawn;
trigger gt_UPLCinematicCivilianDespawn;
trigger gt_UPLCinematicOspreyDespawn;
trigger gt_MayorQ;
trigger gt_MayorSetup;
trigger gt_MayorCinematic;
trigger gt_MayorCinematicEnd;
trigger gt_MayorCleanup;
trigger gt_MayorCinematicAttackWavesStart;
trigger gt_HysonQ;
trigger gt_HysonSetup;
trigger gt_HysonCinematic;
trigger gt_HysonCinematicEnd;
trigger gt_HysonCleanup;
trigger gt_RiotQ;
trigger gt_RiotSetup;
trigger gt_RiotCinematic;
trigger gt_RiotCinematicDavisRedirects;
trigger gt_RiotCinematicDavisRedirects2;
trigger gt_RiotCinematicEnd;
trigger gt_RiotCleanup;
trigger gt_RiotCinematicGunShopLooters;
trigger gt_RiotCinematicMarchers;
trigger gt_RiotCinematicNydusWorms1;
trigger gt_RiotCinematicNydusWorms2;
trigger gt_RiotCinematicNydusWorms3;
trigger gt_RiotCinematicRunners;
trigger gt_RiotCinematicAttack;
trigger gt_RiotCinematicHydraAppears;
trigger gt_RiotCinematicTunnelCarDialogue;
trigger gt_FrancineQ;
trigger gt_FrancineSetup;
trigger gt_FrancineCinematic;
trigger gt_FrancineCinematicEnd;
trigger gt_FrancineCleanup;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_SendTransmissionNoPortrait (text lp_text, soundlink lp_speech) {
    // Variable Declarations
    int lv_var;
    timer lv_timer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_timer = TimerCreate();

    // Implementation
    while (!((gv_midTransmission == false))) {
        Wait(0.25, c_timeGame);
    }
    gv_midTransmission = true;
    SoundPlayForPlayer(lp_speech, c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    TransmissionSend(PlayerGroupAll(), TransmissionSource(), c_invalidPortraitId, "", null, StringToText(""), lp_text, 60.0, c_transmissionDurationAdd, false);
    PortraitSetVisible(libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_TopLeft), PlayerGroupAll(), false, false);
    SoundWait(SoundLastPlayed(), 0.0, c_soundOffsetEnd);
    Wait(0.3, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
    TransmissionClearAll();
    gv_midTransmission = false;
}

void gf_SendTransmissionFromUnit (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitIsAlive(lp_unit) == true)) {
        libNtve_gf_AttachActorToUnit(lp_unit, "TalkIcon", "Ref_Origin");
        if ((gv_inCinematic == false)) {
            if ((lp_playCue == true)) {
                libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
            }

            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Speech);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 30.0, 0.0);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Game);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 0.0);
        }
        else {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        ActorScopeKill(libNtve_gf_ActorScopeLastCreated());
    }

}

void gf_SendTransmissionFromUnitCombat (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitIsAlive(lp_unit) == true)) {
        libNtve_gf_AttachActorToUnit(lp_unit, "TalkIcon", "Ref_Origin");
        if ((gv_inCinematic == false)) {
            if ((lp_playCue == true)) {
                libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
            }

            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Speech);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 30.0, 0.0);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Game);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 0.0);
        }
        else {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        ActorScopeKill(libNtve_gf_ActorScopeLastCreated());
    }

}

trigger auto_gf_CinematicBurrowedZergAttack_Trigger = null;
string auto_gf_CinematicBurrowedZergAttack_lp_unitType;
int auto_gf_CinematicBurrowedZergAttack_lp_numberofUnitsNormal;
int auto_gf_CinematicBurrowedZergAttack_lp_player;
region auto_gf_CinematicBurrowedZergAttack_lp_spawnRegion;

void gf_CinematicBurrowedZergAttack (string lp_unitType, int lp_numberofUnitsNormal, int lp_player, region lp_spawnRegion) {
    auto_gf_CinematicBurrowedZergAttack_lp_unitType = lp_unitType;
    auto_gf_CinematicBurrowedZergAttack_lp_numberofUnitsNormal = lp_numberofUnitsNormal;
    auto_gf_CinematicBurrowedZergAttack_lp_player = lp_player;
    auto_gf_CinematicBurrowedZergAttack_lp_spawnRegion = lp_spawnRegion;

    if (auto_gf_CinematicBurrowedZergAttack_Trigger == null) {
        auto_gf_CinematicBurrowedZergAttack_Trigger = TriggerCreate("auto_gf_CinematicBurrowedZergAttack_TriggerFunc");
    }

    TriggerExecute(auto_gf_CinematicBurrowedZergAttack_Trigger, false, false);
}

bool auto_gf_CinematicBurrowedZergAttack_TriggerFunc (bool testConds, bool runActions) {
    string lp_unitType = auto_gf_CinematicBurrowedZergAttack_lp_unitType;
    int lp_numberofUnitsNormal = auto_gf_CinematicBurrowedZergAttack_lp_numberofUnitsNormal;
    int lp_player = auto_gf_CinematicBurrowedZergAttack_lp_player;
    region lp_spawnRegion = auto_gf_CinematicBurrowedZergAttack_lp_spawnRegion;

    // Automatic Variable Declarations
    int auto841120C8_n;
    int auto841120C8_i;
    unitgroup auto38995088_g;
    int auto38995088_u;
    unit auto38995088_var;

    // Implementation
    auto841120C8_n = lp_numberofUnitsNormal;
    for (auto841120C8_i = 1; auto841120C8_i <= auto841120C8_n; auto841120C8_i += 1) {
        UnitCreate(1, lp_unitType, 0, lp_player, RegionRandomPoint(lp_spawnRegion), libNtve_gf_RandomAngle());
        UnitGroupAdd(gv_cinematicEnemiesUnitGroup, UnitLastCreated());
    }
    auto38995088_g = UnitGroup(null, lp_player, lp_spawnRegion, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto38995088_u = UnitGroupCount(auto38995088_g, c_unitCountAll);
    for (;; auto38995088_u -= 1) {
        auto38995088_var = UnitGroupUnitFromEnd(auto38995088_g, auto38995088_u);
        if (auto38995088_var == null) { break; }
        UnitIssueOrder(auto38995088_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    }
    return true;
}

void gf_ZerglingReplenisher (int lp__23232323, region lp_creatorregion, region lp_bullyregion, unitgroup lp_unitGroup) {
    // Automatic Variable Declarations
    // Implementation
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(lp_creatorregion));
    UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(lp_bullyregion)), c_orderQueueReplace);
}

void gf_ParkEscapeCivilianCreator (int lp__23232323, region lp_creator, region lp_deleter) {
    // Automatic Variable Declarations
    int autoE0C677F8_n;
    int autoE0C677F8_i;

    // Implementation
    autoE0C677F8_n = lp__23232323;
    for (autoE0C677F8_i = 1; autoE0C677F8_i <= autoE0C677F8_n; autoE0C677F8_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, RegionRandomPoint(lp_creator));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(lp_deleter)), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.1, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, RegionRandomPoint(RegionFromId(10)));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(lp_deleter)), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.1, c_timeGame);
    }
}

void gf_CinematicCivilianCreator (int lp__23232323, region lp_spawner, region lp_remover) {
    // Automatic Variable Declarations
    int auto583817CD_n;
    int auto583817CD_i;

    // Implementation
    auto583817CD_n = lp__23232323;
    for (auto583817CD_i = 1; auto583817CD_i <= auto583817CD_n; auto583817CD_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, RegionRandomPoint(lp_spawner));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(lp_remover)), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.1, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, RegionRandomPoint(RegionFromId(10)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(lp_remover)), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.1, c_timeGame);
    }
}

void gf_CivilianCreatorCinematic (int lp__23232323, region lp_spawner, region lp_remover) {
    // Automatic Variable Declarations
    int auto2D9EF504_n;
    int auto2D9EF504_i;

    // Implementation
    auto2D9EF504_n = lp__23232323;
    for (auto2D9EF504_i = 1; auto2D9EF504_i <= auto2D9EF504_n; auto2D9EF504_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, RegionRandomPoint(lp_spawner));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(lp_remover)), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        if ((gv_inCinematic == true)) {
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        }
        Wait(0.1, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, RegionRandomPoint(RegionFromId(10)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(lp_remover)), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        if ((gv_inCinematic == true)) {
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        }
        Wait(0.1, c_timeGame);
    }
}

trigger auto_gf_DisplayTitleCard_Trigger = null;

void gf_DisplayTitleCard () {
    if (auto_gf_DisplayTitleCard_Trigger == null) {
        auto_gf_DisplayTitleCard_Trigger = TriggerCreate("auto_gf_DisplayTitleCard_TriggerFunc");
    }

    TriggerExecute(auto_gf_DisplayTitleCard_Trigger, false, false);
}

bool auto_gf_DisplayTitleCard_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    DialogCreate(1000, 500, c_anchorCenter, 0, -170, true);
    gv_titleCardDialog = DialogLastCreated();
    DialogSetImageVisible(gv_titleCardDialog, false);
    libNtve_gf_CreateDialogItemLabel(gv_titleCardDialog, 900, 400, c_anchorCenter, 0, 0, StringExternal("Param/Value/18813F20"), ColorWithAlpha(0,0,0,0), true, 1.75);
    gv_titleCardLabel = DialogControlLastCreated();
    DialogSetVisible(gv_titleCardDialog, PlayerGroupAll(), true);
    Wait(4.2, c_timeGame);
    DialogControlFadeTransparency(gv_titleCardLabel, PlayerGroupAll(), 5.0, 100.0);
    Wait(5.0, c_timeGame);
    DialogDestroy(gv_titleCardDialog);
    return true;
}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialization
//--------------------------------------------------------------------------------------------------
bool gt_Initialization_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_ULoadCampaignData("UEDFL_EP01M02_1");
    TriggerExecute(gt_Init01Technology, false, true);
    TriggerExecute(gt_Init02Players, false, true);
    TriggerExecute(gt_Init03Units, false, true);
    TriggerExecute(gt_Init04MusicSound, false, true);
    TriggerExecute(gt_Init05Environment, false, true);
    TriggerExecute(gt_IntroQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initialization_Init () {
    gt_Initialization = TriggerCreate("gt_Initialization_Func");
    TriggerAddEventMapInit(gt_Initialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Technology
//--------------------------------------------------------------------------------------------------
bool gt_Init01Technology_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerOptionOverride(gv_pLAYER_01_USER, "simplecommandcard", "0");
    PlayerOptionOverride(gv_pLAYER_01_USER, "gametooltips", "1");
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "RenameZerg", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_06_ROACHES_NEUTRAL, "RenameZerg", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_04_ROACHES, "RenameZerg", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_04_ROACHES, "Burrow", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_06_ROACHES_NEUTRAL, "Burrow", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_04_ROACHES, "overlordtransport", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_04_ROACHES, "overlordspeed", 1);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLHeadquarters", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLHeadquarters", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLGenerator", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLExhumer", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLBillet", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLManufacturingFacility", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLElectrostaticDefenseTower", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLCommStation", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLRnDFacility", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLAirstrip", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLForwardOperatingBase", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLSolitaire", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLNightjar", false);
    TechTreeUnitHelp(1, "UPLGenerator", false);
    TechTreeUnitHelp(1, "UPLBillet", false);
    TechTreeUnitHelp(1, "LillyRollins", false);
    TechTreeUnitHelp(1, "TrevorRand", false);
    TechTreeUnitHelp(1, "AltonPeters", false);
    TechTreeUnitHelp(1, "AltonPetersZ1", false);
    TechTreeUnitHelp(1, "HazmatTechnician", false);
    TechTreeUnitHelp(1, "CARR", false);
    TechTreeUnitHelp(1, "UPLPoliceCruiser", true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01Technology_Init () {
    gt_Init01Technology = TriggerCreate("gt_Init01Technology_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Players
//--------------------------------------------------------------------------------------------------
bool gt_Init02Players_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_riverWalkFlashBangsEnabled = false;
    gv_riverWalkFlameGrenadesEnabled = false;
    libNtve_gf_PlayerApplySkinReplacingExistingUnit(gv_pLAYER_01_USER, "UPLInfantryEarlyMissionsVO", true);
    libNtve_gf_PlayerApplySkinReplacingExistingUnit(gv_pLAYER_02_POLICE, "UPLInfantryEarlyMissionsVO", true);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_02_POLICE, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_03_CIVILIANS, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_04_ROACHES, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_05_POLICE_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_06_ROACHES_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_09_ROACHES, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_15_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_02_POLICE, gv_pLAYER_03_CIVILIANS, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libNtve_gf_SetAlliance(gv_pLAYER_02_POLICE, gv_pLAYER_04_ROACHES, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_02_POLICE, gv_pLAYER_05_POLICE_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_02_POLICE, gv_pLAYER_06_ROACHES_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_02_POLICE, gv_pLAYER_15_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_03_CIVILIANS, gv_pLAYER_04_ROACHES, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_03_CIVILIANS, gv_pLAYER_05_POLICE_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_03_CIVILIANS, gv_pLAYER_06_ROACHES_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_03_CIVILIANS, gv_pLAYER_15_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_04_ROACHES, gv_pLAYER_05_POLICE_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_04_ROACHES, gv_pLAYER_06_ROACHES_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_04_ROACHES, gv_pLAYER_15_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libNtve_gf_SetAlliance(gv_pLAYER_05_POLICE_NEUTRAL, gv_pLAYER_06_ROACHES_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_05_POLICE_NEUTRAL, gv_pLAYER_15_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_06_ROACHES_NEUTRAL, gv_pLAYER_15_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_Neutral);
    PlayerSetAlliance(gv_pLAYER_01_USER, c_allianceIdPushable, gv_pLAYER_03_CIVILIANS, true);
    PlayerSetAlliance(gv_pLAYER_02_POLICE, c_allianceIdPushable, gv_pLAYER_01_USER, true);
    PlayerSetAlliance(gv_pLAYER_03_CIVILIANS, c_allianceIdPushable, gv_pLAYER_01_USER, false);
    PlayerSetAlliance(gv_pLAYER_05_POLICE_NEUTRAL, c_allianceIdPushable, gv_pLAYER_01_USER, true);
    PlayerSetState(gv_pLAYER_00_NEUTRAL, c_playerStateFidgetingEnabled, false);
    PlayerSetState(gv_pLAYER_03_CIVILIANS, c_playerStateFidgetingEnabled, false);
    PlayerSetState(gv_pLAYER_02_POLICE, c_playerStateFidgetingEnabled, false);
    CameraSetBounds(PlayerGroupActive(), RegionRect(0.0, 0.0, 255.0, 138.0), true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    PlayerOptionOverride(gv_pLAYER_01_USER, "selectuncontrolable", "1");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Players_Init () {
    gt_Init02Players = TriggerCreate("gt_Init02Players_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Units
//--------------------------------------------------------------------------------------------------
bool gt_Init03Units_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto240856FE_g;
    int auto240856FE_u;
    unit auto240856FE_var;
    unitgroup auto06F23342_g;
    int auto06F23342_u;
    unit auto06F23342_var;
    unitgroup autoAFC8BAF3_g;
    int autoAFC8BAF3_u;
    unit autoAFC8BAF3_var;
    unitgroup auto6AE711BD_g;
    int auto6AE711BD_u;
    unit auto6AE711BD_var;
    unitgroup auto7DD94E9B_g;
    int auto7DD94E9B_u;
    unit auto7DD94E9B_var;
    unitgroup auto7A9C8C95_g;
    int auto7A9C8C95_u;
    unit auto7A9C8C95_var;
    unitgroup auto54A39965_g;
    int auto54A39965_u;
    unit auto54A39965_var;
    unitgroup auto2C2CAE7C_g;
    int auto2C2CAE7C_u;
    unit auto2C2CAE7C_var;
    unitgroup auto1E604FD5_g;
    int auto1E604FD5_u;
    unit auto1E604FD5_var;
    unitgroup autoC697C524_g;
    int autoC697C524_u;
    unit autoC697C524_var;
    unitgroup auto9E3ED3D3_g;
    int auto9E3ED3D3_u;
    unit auto9E3ED3D3_var;
    unitgroup auto9166483C_g;
    int auto9166483C_u;
    unit auto9166483C_var;
    unitgroup autoEEDEB3DB_g;
    int autoEEDEB3DB_u;
    unit autoEEDEB3DB_var;
    unitgroup autoE916BBB9_g;
    int autoE916BBB9_u;
    unit autoE916BBB9_var;
    unitgroup auto48ABDC4C_g;
    int auto48ABDC4C_u;
    unit auto48ABDC4C_var;
    unitgroup auto064EF15C_g;
    int auto064EF15C_u;
    unit auto064EF15C_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == false)) {
        auto240856FE_g = UnitGroup(null, c_playerAny, RegionFromId(295), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        auto240856FE_u = UnitGroupCount(auto240856FE_g, c_unitCountAll);
        for (;; auto240856FE_u -= 1) {
            auto240856FE_var = UnitGroupUnitFromEnd(auto240856FE_g, auto240856FE_u);
            if (auto240856FE_var == null) { break; }
            UnitRemove(auto240856FE_var);
        }
        auto06F23342_g = UnitGroup(null, c_playerAny, RegionFromId(296), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        auto06F23342_u = UnitGroupCount(auto06F23342_g, c_unitCountAll);
        for (;; auto06F23342_u -= 1) {
            auto06F23342_var = UnitGroupUnitFromEnd(auto06F23342_g, auto06F23342_u);
            if (auto06F23342_var == null) { break; }
            UnitRemove(auto06F23342_var);
        }
    }

    UnitSetState(UnitFromId(1512054248), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1512054248), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1512054248), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(1512054248), c_unitStateMoveSuppressed, false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1512054248), true);
    UnitSetInfoTip(UnitFromId(912599620), StringExternal("Param/Value/4B4749F8"));
    UnitSetInfoTip(UnitFromId(1033119260), StringExternal("Param/Value/E97DFA22"));
    UnitSetInfoTip(UnitFromId(2107825102), StringExternal("Param/Value/6C92C922"));
    UnitSetState(UnitFromId(598198931), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(598198931), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(598198931), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(598198931), c_unitStateMoveSuppressed, false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(598198931), true);
    UnitSetState(UnitFromId(1192053833), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(105532826), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(105532826), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(105532826), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(105532826), c_unitStateMoveSuppressed, false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(105532826), true);
    gv_myraDavis = UnitFromId(1828237455);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    UnitBehaviorAdd(gv_myraDavis, "MyraDavisPistol", gv_myraDavis, 1);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisRifle", 1);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisShotgun", 1);
    UnitSetState(gv_myraDavis, c_unitStateInvulnerable, true);
    UnitSetState(gv_myraDavis, c_unitStateFidget, false);
    UnitSetPosition(gv_myraDavis, PointFromId(690), false);
    UnitResetSpeed(gv_myraDavis);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropLifeMax, 50.0);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropLife, 50.0);
    UnitAbilityRemove(gv_myraDavis, "MyraDavisFlashBangGrenade");
    UnitAbilityRemove(gv_myraDavis, "InfestedHeal2");
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, PointFromId(190));
    gv_davisCruiser = UnitLastCreated();
    UnitSetState(gv_davisCruiser, c_unitStateStunned, true);
    UnitSetState(gv_davisCruiser, c_unitStateInvulnerable, true);
    UnitBehaviorAdd(gv_davisCruiser, "UPLPoliceCruiserSirenLights", gv_davisCruiser, 1);
    UnitBehaviorAdd(gv_davisCruiser, "UPLPoliceCruiserOpenLeft", gv_davisCruiser, 1);
    UnitSetState(UnitFromId(430773638), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(1098813165), c_unitStateMoveSuppressed, false);
    autoAFC8BAF3_g = UnitGroup(null, c_playerAny, RegionFromId(97), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoAFC8BAF3_u = UnitGroupCount(autoAFC8BAF3_g, c_unitCountAll);
    for (;; autoAFC8BAF3_u -= 1) {
        autoAFC8BAF3_var = UnitGroupUnitFromEnd(autoAFC8BAF3_g, autoAFC8BAF3_u);
        if (autoAFC8BAF3_var == null) { break; }
        libNtve_gf_PauseUnit(autoAFC8BAF3_var, true);
    }
    auto6AE711BD_g = UnitGroup(null, 0, RegionFromId(85), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6AE711BD_u = UnitGroupCount(auto6AE711BD_g, c_unitCountAll);
    for (;; auto6AE711BD_u -= 1) {
        auto6AE711BD_var = UnitGroupUnitFromEnd(auto6AE711BD_g, auto6AE711BD_u);
        if (auto6AE711BD_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto6AE711BD_var, true);
    }
    auto7DD94E9B_g = UnitGroup("FlameGrenadePickup", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7DD94E9B_u = UnitGroupCount(auto7DD94E9B_g, c_unitCountAll);
    for (;; auto7DD94E9B_u -= 1) {
        auto7DD94E9B_var = UnitGroupUnitFromEnd(auto7DD94E9B_g, auto7DD94E9B_u);
        if (auto7DD94E9B_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto7DD94E9B_var, true);
        UnitSetState(auto7DD94E9B_var, c_unitStateHighlightable, false);
        UnitSetState(auto7DD94E9B_var, c_unitStateTargetable, false);
        UnitSetState(auto7DD94E9B_var, c_unitStateSelectable, false);
    }
    auto7A9C8C95_g = UnitGroup("FlashbangGrenadePickup", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7A9C8C95_u = UnitGroupCount(auto7A9C8C95_g, c_unitCountAll);
    for (;; auto7A9C8C95_u -= 1) {
        auto7A9C8C95_var = UnitGroupUnitFromEnd(auto7A9C8C95_g, auto7A9C8C95_u);
        if (auto7A9C8C95_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto7A9C8C95_var, true);
        UnitSetState(auto7A9C8C95_var, c_unitStateHighlightable, false);
        UnitSetState(auto7A9C8C95_var, c_unitStateTargetable, false);
        UnitSetState(auto7A9C8C95_var, c_unitStateSelectable, false);
    }
    auto54A39965_g = UnitGroup("GuideArrowUnit", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto54A39965_u = UnitGroupCount(auto54A39965_g, c_unitCountAll);
    for (;; auto54A39965_u -= 1) {
        auto54A39965_var = UnitGroupUnitFromEnd(auto54A39965_g, auto54A39965_u);
        if (auto54A39965_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto54A39965_var, true);
        UnitSetState(auto54A39965_var, c_unitStateHighlightable, false);
        UnitSetState(auto54A39965_var, c_unitStateTargetable, false);
        UnitSetState(auto54A39965_var, c_unitStateSelectable, false);
    }
    auto2C2CAE7C_g = UnitGroup("Beacon_UPL", 0, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2C2CAE7C_u = UnitGroupCount(auto2C2CAE7C_g, c_unitCountAll);
    for (;; auto2C2CAE7C_u -= 1) {
        auto2C2CAE7C_var = UnitGroupUnitFromEnd(auto2C2CAE7C_g, auto2C2CAE7C_u);
        if (auto2C2CAE7C_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto2C2CAE7C_var, true);
        UnitSetState(auto2C2CAE7C_var, c_unitStateHighlightable, false);
        UnitSetState(auto2C2CAE7C_var, c_unitStateTargetable, false);
        UnitSetState(auto2C2CAE7C_var, c_unitStateSelectable, false);
    }
    auto1E604FD5_g = UnitGroup("PickupNovaGadgetCharges", 0, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1E604FD5_u = UnitGroupCount(auto1E604FD5_g, c_unitCountAll);
    for (;; auto1E604FD5_u -= 1) {
        auto1E604FD5_var = UnitGroupUnitFromEnd(auto1E604FD5_g, auto1E604FD5_u);
        if (auto1E604FD5_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto1E604FD5_var, false);
        libNtve_gf_MakeUnitInvulnerable(auto1E604FD5_var, true);
        UnitSetState(auto1E604FD5_var, c_unitStateHighlightable, false);
        UnitSetState(auto1E604FD5_var, c_unitStateTargetable, false);
        UnitSetState(auto1E604FD5_var, c_unitStateSelectable, false);
    }
    autoC697C524_g = UnitGroup("SecretDocuments", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoC697C524_u = UnitGroupCount(autoC697C524_g, c_unitCountAll);
    for (;; autoC697C524_u -= 1) {
        autoC697C524_var = UnitGroupUnitFromEnd(autoC697C524_g, autoC697C524_u);
        if (autoC697C524_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoC697C524_var, true);
        UnitSetState(autoC697C524_var, c_unitStateHighlightable, false);
        UnitSetState(autoC697C524_var, c_unitStateTargetable, false);
        UnitSetState(autoC697C524_var, c_unitStateSelectable, false);
    }
    UnitSetInfoTip(UnitFromId(930332417), StringExternal("Param/Value/DEFA0A48"));
    UnitSetInfoTip(UnitFromId(1516123329), StringExternal("Param/Value/A2B90424"));
    UnitSetInfoTip(UnitFromId(1469531919), StringExternal("Param/Value/DA370090"));
    UnitSetInfoTip(UnitFromId(399483068), StringExternal("Param/Value/04EA77A9"));
    libNtve_gf_ShowHideUnit(UnitFromId(1518130534), false);
    libNtve_gf_ShowHideUnit(UnitFromId(471247181), false);
    libNtve_gf_ShowHideUnit(UnitFromId(295891017), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1796183197), false);
    libNtve_gf_ShowHideUnit(UnitFromId(2140304394), false);
    UnitSetPropertyFixed(UnitFromId(295891017), c_unitPropLifeMax, 125.0);
    UnitSetPropertyFixed(UnitFromId(2140304394), c_unitPropLifeMax, 125.0);
    UnitSetPropertyFixed(UnitFromId(471247181), c_unitPropLifeMax, 125.0);
    UnitSetPropertyFixed(UnitFromId(1796183197), c_unitPropLifeMax, 125.0);
    libNtve_gf_SetCinematicTransitionStyle(libNtve_ge_CinematicTransitionStyle_Story);
    UnitSetState(UnitFromId(991392342), c_unitStateStunned, true);
    UnitBehaviorAdd(UnitFromId(991392342), "UPLPoliceCruiserSirenLights", UnitFromId(991392342), 1);
    UnitSetState(UnitFromId(559084893), c_unitStateStunned, true);
    PlayerOptionOverride(1, "simplecommandcard", "0");
    PlayerOptionOverride(1, "selectuncontrolable", "1");
    libNtve_gf_ShowHideUnit(UnitFromId(930332417), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1516123329), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1469531919), false);
    libNtve_gf_ShowHideUnit(UnitFromId(399483068), false);
    auto9E3ED3D3_g = UnitGroup(null, c_playerAny, RegionFromId(195), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9E3ED3D3_u = UnitGroupCount(auto9E3ED3D3_g, c_unitCountAll);
    for (;; auto9E3ED3D3_u -= 1) {
        auto9E3ED3D3_var = UnitGroupUnitFromEnd(auto9E3ED3D3_g, auto9E3ED3D3_u);
        if (auto9E3ED3D3_var == null) { break; }
        UnitSetState(auto9E3ED3D3_var, c_unitStateFidget, false);
    }
    UnitSetState(UnitFromId(334945370), c_unitStateFidget, false);
    libNtve_gf_ChangeUnitDamage(UnitFromId(334945370), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1029858056), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(UnitFromId(967068166), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1122683588), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitBehaviorAdd(UnitFromId(1461898363), "UPLPoliceCruiserOpenLeft", UnitFromId(1461898363), 1);
    UnitBehaviorAdd(UnitFromId(24966858), "UPLPoliceCruiserOpenLeft", UnitFromId(24966858), 1);
    UnitBehaviorAdd(UnitFromId(24966858), "UPLPoliceCruiserOpenRight", UnitFromId(24966858), 1);
    UnitBehaviorAdd(UnitFromId(24966858), "UPLPoliceCruiserSirenLights", UnitFromId(24966858), 1);
    UnitBehaviorAdd(UnitFromId(1461898363), "UPLPoliceCruiserSirenLights", UnitFromId(1461898363), 1);
    UnitSetState(UnitFromId(1461898363), c_unitStateStunned, true);
    UnitSetState(UnitFromId(24966858), c_unitStateStunned, true);
    TriggerExecute(gt_AUD24HoldoutSetup, true, false);
    UnitSetState(UnitFromId(420143744), c_unitStateStunned, true);
    UnitSetState(UnitFromId(1122683588), c_unitStateStunned, true);
    auto9166483C_g = UnitGroup("ExplodingBarrelLarge", c_playerAny, RegionFromId(1), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9166483C_u = UnitGroupCount(auto9166483C_g, c_unitCountAll);
    for (;; auto9166483C_u -= 1) {
        auto9166483C_var = UnitGroupUnitFromEnd(auto9166483C_g, auto9166483C_u);
        if (auto9166483C_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto9166483C_var, false);
        libNtve_gf_ChangeUnitDamage(auto9166483C_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    UnitSetState(UnitFromId(1721063265), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(1721063265), c_unitStateFidget, false);
    UnitBehaviorRemove(UnitFromId(471247181), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(471247181), "UPLPoliceOfficerPistol", UnitFromId(471247181), 1);
    UnitBehaviorRemove(UnitFromId(295891017), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(295891017), "UPLPoliceOfficerPistol", UnitFromId(295891017), 1);
    UnitBehaviorRemove(UnitFromId(1796183197), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(1796183197), "UPLRiotOfficerRifle", UnitFromId(1796183197), 1);
    UnitBehaviorRemove(UnitFromId(2140304394), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(2140304394), "UPLRiotOfficerShotgun", UnitFromId(2140304394), 1);
    UnitBehaviorRemove(UnitFromId(334945370), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(334945370), "UPLRiotOfficerRifle", UnitFromId(334945370), 1);
    UnitSetState(UnitFromId(538414580), c_unitStateFidget, false);
    UnitSetState(UnitFromId(1772965271), c_unitStateFidget, false);
    UnitSetState(UnitFromId(467262289), c_unitStateFidget, false);
    UnitSetState(UnitFromId(930627035), c_unitStateFidget, false);
    UnitSetState(UnitFromId(991159140), c_unitStateFidget, false);
    UnitSetState(UnitFromId(1024580069), c_unitStateFidget, false);
    UnitSetState(UnitFromId(763524611), c_unitStateFidget, false);
    UnitSetState(UnitFromId(2019934579), c_unitStateFidget, false);
    UnitSetState(UnitFromId(506162642), c_unitStateFidget, false);
    UnitSetState(UnitFromId(90815536), c_unitStateFidget, false);
    UnitSetState(UnitFromId(1057326080), c_unitStateFidget, false);
    UnitSetState(UnitFromId(863703010), c_unitStateFidget, false);
    UnitSetState(UnitFromId(1772965271), c_unitStateStunned, true);
    UnitSetState(UnitFromId(930627035), c_unitStateStunned, true);
    UnitSetState(UnitFromId(1024580069), c_unitStateStunned, true);
    UnitSetState(UnitFromId(2019934579), c_unitStateStunned, true);
    UnitSetState(UnitFromId(90815536), c_unitStateStunned, true);
    UnitSetState(UnitFromId(863703010), c_unitStateStunned, true);
    UnitSetState(UnitFromId(538414580), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(467262289), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(991159140), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(763524611), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(506162642), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(1057326080), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(912599620), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(912599620), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(912599620), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1033119260), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1033119260), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(1033119260), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(2107825102), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(2107825102), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(2107825102), c_unitStateHighlightable, false);
    libNtve_gf_ChangeUnitDamage(UnitFromId(912599620), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1033119260), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(UnitFromId(2107825102), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitBehaviorRemove(UnitFromId(1772965271), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(930627035), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(1024580069), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(2019934579), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(90815536), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(863703010), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(1772965271), "UPLPoliceOfficerShield", UnitFromId(1772965271), 1);
    UnitBehaviorAdd(UnitFromId(930627035), "UPLPoliceOfficerShield", UnitFromId(930627035), 1);
    UnitBehaviorAdd(UnitFromId(1024580069), "UPLPoliceOfficerShield", UnitFromId(1024580069), 1);
    UnitBehaviorAdd(UnitFromId(2019934579), "UPLPoliceOfficerShield", UnitFromId(2019934579), 1);
    UnitBehaviorAdd(UnitFromId(90815536), "UPLPoliceOfficerShield", UnitFromId(90815536), 1);
    UnitBehaviorAdd(UnitFromId(863703010), "UPLPoliceOfficerShield", UnitFromId(863703010), 1);
    UnitBehaviorAdd(UnitFromId(178000436), "UPLPoliceCruiserSirenLights", UnitFromId(24966858), 1);
    UnitBehaviorRemove(UnitFromId(506162642), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(1057326080), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(506162642), "UPLRiotOfficerRifle", UnitFromId(1772965271), 1);
    UnitBehaviorAdd(UnitFromId(1057326080), "UPLRiotOfficerRifle", UnitFromId(1772965271), 1);
    autoEEDEB3DB_g = UnitGroup(null, c_playerAny, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoEEDEB3DB_u = UnitGroupCount(autoEEDEB3DB_g, c_unitCountAll);
    for (;; autoEEDEB3DB_u -= 1) {
        autoEEDEB3DB_var = UnitGroupUnitFromEnd(autoEEDEB3DB_g, autoEEDEB3DB_u);
        if (autoEEDEB3DB_var == null) { break; }
        UnitSetState(autoEEDEB3DB_var, c_unitStateFidget, false);
    }
    UnitSetPropertyFixed(UnitFromId(1199587030), c_unitPropHeight, 6.0);
    UnitBehaviorAdd(UnitFromId(1199587030), "NewsHelicopterSpotlight", UnitFromId(1199587030), 1);
    UnitBehaviorRemove(UnitFromId(772559141), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(222979243), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(1947020934), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(2001868954), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(277528433), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorRemove(UnitFromId(1756121924), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(772559141), "UPLPoliceOfficerShield", UnitFromId(1772965271), 1);
    UnitBehaviorAdd(UnitFromId(222979243), "UPLPoliceOfficerShield", UnitFromId(930627035), 1);
    UnitBehaviorAdd(UnitFromId(1947020934), "UPLPoliceOfficerShield", UnitFromId(1024580069), 1);
    UnitBehaviorAdd(UnitFromId(2001868954), "UPLPoliceOfficerShield", UnitFromId(2019934579), 1);
    UnitBehaviorAdd(UnitFromId(277528433), "UPLPoliceOfficerShield", UnitFromId(90815536), 1);
    UnitBehaviorAdd(UnitFromId(1756121924), "UPLPoliceOfficerShield", UnitFromId(863703010), 1);
    UnitSetState(UnitFromId(2081692704), c_unitStateMoveSuppressed, false);
    UnitBehaviorAdd(UnitFromId(1861456444), "UPLPoliceOfficerPistol", UnitFromId(1861456444), 1);
    autoE916BBB9_g = UnitGroup("UPLCivilianFemale", gv_pLAYER_03_CIVILIANS, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE916BBB9_u = UnitGroupCount(autoE916BBB9_g, c_unitCountAll);
    for (;; autoE916BBB9_u -= 1) {
        autoE916BBB9_var = UnitGroupUnitFromEnd(autoE916BBB9_g, autoE916BBB9_u);
        if (autoE916BBB9_var == null) { break; }
        UnitSetTeamColorIndex(autoE916BBB9_var, PlayerGetColorIndex(RandomInt(1, 15), false));
    }
    auto48ABDC4C_g = UnitGroup("UPLCivilianMale", gv_pLAYER_03_CIVILIANS, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto48ABDC4C_u = UnitGroupCount(auto48ABDC4C_g, c_unitCountAll);
    for (;; auto48ABDC4C_u -= 1) {
        auto48ABDC4C_var = UnitGroupUnitFromEnd(auto48ABDC4C_g, auto48ABDC4C_u);
        if (auto48ABDC4C_var == null) { break; }
        UnitSetTeamColorIndex(auto48ABDC4C_var, PlayerGetColorIndex(RandomInt(1, 15), true));
    }
    auto064EF15C_g = UnitGroup(null, c_playerAny, RegionFromId(32), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto064EF15C_u = UnitGroupCount(auto064EF15C_g, c_unitCountAll);
    for (;; auto064EF15C_u -= 1) {
        auto064EF15C_var = UnitGroupUnitFromEnd(auto064EF15C_g, auto064EF15C_u);
        if (auto064EF15C_var == null) { break; }
        libNtve_gf_PauseUnit(auto064EF15C_var, true);
        libNtve_gf_ShowHideUnit(auto064EF15C_var, false);
    }
    UnitSetState(UnitFromId(1336856623), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1336856623), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(1336856623), c_unitStateTargetable, false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1336856623), true);
    UnitSetInfoTip(UnitFromId(1336856623), StringExternal("Param/Value/1949E032"));
    UnitSetState(UnitFromId(885484556), c_unitStateInvulnerable, true);
    UnitSetState(UnitFromId(885484556), c_unitStateStunned, true);
    UnitSetState(UnitFromId(885484556), c_unitStateFidget, false);
    UnitSetState(UnitFromId(1122683588), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1122683588), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1122683588), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(1122683588), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(1810553586), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1810553586), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1810553586), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(1810553586), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(420143744), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(420143744), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(420143744), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(420143744), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(1029858056), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1029858056), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1029858056), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(1029858056), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(967068166), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(967068166), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(967068166), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(967068166), c_unitStateMoveSuppressed, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03Units_Init () {
    gt_Init03Units = TriggerCreate("gt_Init03Units_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 04 Music/Sound
//--------------------------------------------------------------------------------------------------
bool gt_Init04MusicSound_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init04MusicSound_Init () {
    gt_Init04MusicSound = TriggerCreate("gt_Init04MusicSound_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 05 Environment
//--------------------------------------------------------------------------------------------------
bool gt_Init05Environment_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameSetLighting("MeinhoffCampaignNight", 0.0);
    FogSetStartHeightOverTime(-2.0, 0.0);
    GameTimeOfDaySet("00");
    GameTimeOfDayPause(true);
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "GenericFire_Large");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(23), "GenericFire_Medium");
    ActorSend(ActorFromDoodad(DoodadFromId(1213839139)), "SetOpacity");
    ActorSend(ActorFromDoodad(DoodadFromId(1978995409)), "SetOpacity");
    ActorSend(ActorFromDoodad(DoodadFromId(1712522682)), "SetOpacity");
    ActorSend(ActorFromDoodad(DoodadFromId(707187509)), "SetOpacity");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(23), "Korhal_Residential_Building_Destroyed");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(201), null);
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "CaveEntrance");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(201), "TheVoid_RubblePile");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(201), "UPLPoliceCruiserDoodad");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(141), "TruckSemi");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init05Environment_Init () {
    gt_Init05Environment = TriggerCreate("gt_Init05Environment_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Street - Riverwalk
//--------------------------------------------------------------------------------------------------
bool gt_StreetRiverwalk_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/AD7B09FD"));
    Wait(7.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StreetRiverwalk_Init () {
    gt_StreetRiverwalk = TriggerCreate("gt_StreetRiverwalk_Func");
    TriggerAddEventUnitRegion(gt_StreetRiverwalk, null, RegionFromId(173), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Street - Connelly Apartments
//--------------------------------------------------------------------------------------------------
bool gt_StreetConnellyApartments_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive < 2))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/F71B4D82"));
    Wait(7.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StreetConnellyApartments_Init () {
    gt_StreetConnellyApartments = TriggerCreate("gt_StreetConnellyApartments_Func");
    TriggerAddEventUnitRegion(gt_StreetConnellyApartments, null, RegionFromId(3), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Street - Police HQ
//--------------------------------------------------------------------------------------------------
bool gt_StreetPoliceHQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/3EB9C004"));
    Wait(7.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StreetPoliceHQ_Init () {
    gt_StreetPoliceHQ = TriggerCreate("gt_StreetPoliceHQ_Func");
    TriggerAddEventUnitRegion(gt_StreetPoliceHQ, null, RegionFromId(174), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DavisCruiserStunned
//--------------------------------------------------------------------------------------------------
bool gt_DavisCruiserStunned_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_parkEscapeFirstStopFightActive == 1))) {
            return false;
        }

        if (!((libNtve_gf_UnitIsInsideUnitTransport(gv_myraDavis) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetState(gv_davisCruiser, c_unitStateMoveSuppressed, false);
    UnitSetState(gv_davisCruiser, c_unitStateTurnSuppressed, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DavisCruiserStunned_Init () {
    gt_DavisCruiserStunned = TriggerCreate("gt_DavisCruiserStunned_Func");
    TriggerAddEventTimePeriodic(gt_DavisCruiserStunned, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DavisCruiserActive
//--------------------------------------------------------------------------------------------------
bool gt_DavisCruiserActive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_parkEscapeFirstStopFightActive == 1))) {
            return false;
        }

        if (!((libNtve_gf_UnitIsInsideUnitTransport(gv_myraDavis) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetState(gv_davisCruiser, c_unitStateMoveSuppressed, true);
    UnitSetState(gv_davisCruiser, c_unitStateTurnSuppressed, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DavisCruiserActive_Init () {
    gt_DavisCruiserActive = TriggerCreate("gt_DavisCruiserActive_Func");
    TriggerAddEventTimePeriodic(gt_DavisCruiserActive, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Davis Cruiser Dies
//--------------------------------------------------------------------------------------------------
bool gt_DavisCruiserDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_davisCruiser))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_cruiserPing);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DavisCruiserDies_Init () {
    gt_DavisCruiserDies = TriggerCreate("gt_DavisCruiserDies_Func");
    TriggerAddEventUnitDied(gt_DavisCruiserDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: No Zerg or Civilian Selectable
//--------------------------------------------------------------------------------------------------
bool gt_NoZergorCivilianSelectable_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7A51EC4D_g;
    int auto7A51EC4D_u;
    unit auto7A51EC4D_var;
    unitgroup autoB559F31B_g;
    int autoB559F31B_u;
    unit autoB559F31B_var;
    unitgroup auto2DFAFDD4_g;
    int auto2DFAFDD4_u;
    unit auto2DFAFDD4_var;
    unitgroup autoDE08F7AD_g;
    int autoDE08F7AD_u;
    unit autoDE08F7AD_var;
    unitgroup autoF5462D7F_g;
    int autoF5462D7F_u;
    unit autoF5462D7F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto7A51EC4D_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7A51EC4D_u = UnitGroupCount(auto7A51EC4D_g, c_unitCountAll);
    for (;; auto7A51EC4D_u -= 1) {
        auto7A51EC4D_var = UnitGroupUnitFromEnd(auto7A51EC4D_g, auto7A51EC4D_u);
        if (auto7A51EC4D_var == null) { break; }
        UnitSetState(auto7A51EC4D_var, c_unitStateSelectable, false);
    }
    autoB559F31B_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB559F31B_u = UnitGroupCount(autoB559F31B_g, c_unitCountAll);
    for (;; autoB559F31B_u -= 1) {
        autoB559F31B_var = UnitGroupUnitFromEnd(autoB559F31B_g, autoB559F31B_u);
        if (autoB559F31B_var == null) { break; }
        UnitSetState(autoB559F31B_var, c_unitStateSelectable, false);
    }
    auto2DFAFDD4_g = UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2DFAFDD4_u = UnitGroupCount(auto2DFAFDD4_g, c_unitCountAll);
    for (;; auto2DFAFDD4_u -= 1) {
        auto2DFAFDD4_var = UnitGroupUnitFromEnd(auto2DFAFDD4_g, auto2DFAFDD4_u);
        if (auto2DFAFDD4_var == null) { break; }
        UnitSetState(auto2DFAFDD4_var, c_unitStateSelectable, false);
    }
    autoDE08F7AD_g = UnitGroup("UPLDetectiveFemale", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDE08F7AD_u = UnitGroupCount(autoDE08F7AD_g, c_unitCountAll);
    for (;; autoDE08F7AD_u -= 1) {
        autoDE08F7AD_var = UnitGroupUnitFromEnd(autoDE08F7AD_g, autoDE08F7AD_u);
        if (autoDE08F7AD_var == null) { break; }
        UnitSetState(autoDE08F7AD_var, c_unitStateSelectable, false);
    }
    autoF5462D7F_g = UnitGroup("UPLDetectiveMale", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF5462D7F_u = UnitGroupCount(autoF5462D7F_g, c_unitCountAll);
    for (;; autoF5462D7F_u -= 1) {
        autoF5462D7F_var = UnitGroupUnitFromEnd(autoF5462D7F_g, autoF5462D7F_u);
        if (autoF5462D7F_var == null) { break; }
        UnitSetState(autoF5462D7F_var, c_unitStateSelectable, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_NoZergorCivilianSelectable_Init () {
    gt_NoZergorCivilianSelectable = TriggerCreate("gt_NoZergorCivilianSelectable_Func");
    TriggerAddEventTimePeriodic(gt_NoZergorCivilianSelectable, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Artifact - Davis
//--------------------------------------------------------------------------------------------------
bool gt_ArtifactDavis_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(449246417));
    gv_stats_LorePickup += 1;
    lib1926661B_gf_DisplayLoreWindow("M02P1-MyraDavis");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArtifactDavis_Init () {
    gt_ArtifactDavis = TriggerCreate("gt_ArtifactDavis_Func");
    TriggerAddEventUnitRegion(gt_ArtifactDavis, UnitRefFromVariable("gv_myraDavis"), RegionFromId(246), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Artifact - Surplus
//--------------------------------------------------------------------------------------------------
bool gt_ArtifactSurplus_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(666733651));
    gv_stats_LorePickup += 1;
    lib1926661B_gf_DisplayLoreWindow("M02P1-Surplus");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArtifactSurplus_Init () {
    gt_ArtifactSurplus = TriggerCreate("gt_ArtifactSurplus_Func");
    TriggerEnable(gt_ArtifactSurplus, false);
    TriggerAddEventUnitRegion(gt_ArtifactSurplus, UnitRefFromVariable("gv_myraDavis"), RegionFromId(281), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Artifact - Denise
//--------------------------------------------------------------------------------------------------
bool gt_ArtifactDenise_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(228498443));
    gv_stats_LorePickup += 1;
    lib1926661B_gf_DisplayLoreWindow("M02P1-DeniseAlistair");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArtifactDenise_Init () {
    gt_ArtifactDenise = TriggerCreate("gt_ArtifactDenise_Func");
    TriggerEnable(gt_ArtifactDenise, false);
    TriggerAddEventUnitRegion(gt_ArtifactDenise, UnitRefFromVariable("gv_myraDavis"), RegionFromId(282), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Artifact - BoomBoom
//--------------------------------------------------------------------------------------------------
bool gt_ArtifactBoomBoom_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(856538293));
    gv_stats_LorePickup += 1;
    lib1926661B_gf_DisplayLoreWindow("M02P1-Boom");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArtifactBoomBoom_Init () {
    gt_ArtifactBoomBoom = TriggerCreate("gt_ArtifactBoomBoom_Func");
    TriggerEnable(gt_ArtifactBoomBoom, false);
    TriggerAddEventUnitRegion(gt_ArtifactBoomBoom, UnitRefFromVariable("gv_myraDavis"), RegionFromId(283), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Artifact - Incinerator
//--------------------------------------------------------------------------------------------------
bool gt_ArtifactIncinerator_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(289073661));
    gv_stats_LorePickup += 1;
    lib1926661B_gf_DisplayLoreWindow("M02P1-Incinerators");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArtifactIncinerator_Init () {
    gt_ArtifactIncinerator = TriggerCreate("gt_ArtifactIncinerator_Func");
    TriggerEnable(gt_ArtifactIncinerator, false);
    TriggerAddEventUnitRegion(gt_ArtifactIncinerator, UnitRefFromVariable("gv_myraDavis"), RegionFromId(284), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Artifact - Francine
//--------------------------------------------------------------------------------------------------
bool gt_ArtifactFrancine_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(1630771552));
    gv_stats_LorePickup += 1;
    lib1926661B_gf_DisplayLoreWindow("M02P1-Francine");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ArtifactFrancine_Init () {
    gt_ArtifactFrancine = TriggerCreate("gt_ArtifactFrancine_Func");
    TriggerEnable(gt_ArtifactFrancine, false);
    TriggerAddEventUnitRegion(gt_ArtifactFrancine, UnitRefFromVariable("gv_myraDavis"), RegionFromId(285), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Myra Davis
//--------------------------------------------------------------------------------------------------
bool gt_TipMyraDavis_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/D2A188CC"), libNtve_ge_TipType_NewUnit), StringExternal("Param/Value/CBA6B784"), StringExternal("Param/Value/99196E36"), "Assets\\Textures\\ui-heroicon-myradavisofficer.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipMyraDavis_Init () {
    gt_TipMyraDavis = TriggerCreate("gt_TipMyraDavis_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Protect and Serve
//--------------------------------------------------------------------------------------------------
bool gt_TipProtectandServe_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/3B84794E"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/E3A38AB9"), StringExternal("Param/Value/2ADA34F3"), "Assets\\Textures\\Protect&Serve.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipProtectandServe_Init () {
    gt_TipProtectandServe = TriggerCreate("gt_TipProtectandServe_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Police Cruiser
//--------------------------------------------------------------------------------------------------
bool gt_TipPoliceCruiser_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/68F670FF"), libNtve_ge_TipType_NewUnit), StringExternal("Param/Value/8DCAA570"), StringExternal("Param/Value/B2F5A3C8"), "Assets\\Textures\\Police Cruiser.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "UPLPoliceCruiser", true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipPoliceCruiser_Init () {
    gt_TipPoliceCruiser = TriggerCreate("gt_TipPoliceCruiser_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Healing Patch
//--------------------------------------------------------------------------------------------------
bool gt_TipHealingPatch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/0BFA8EEE"), libNtve_ge_TipType_NewAbility), StringExternal("Param/Value/63581AE5"), StringExternal("Param/Value/4891E980"), "Assets\\Textures\\btn-ability-UPL-FirstAid.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipHealingPatch_Init () {
    gt_TipHealingPatch = TriggerCreate("gt_TipHealingPatch_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Flash Bang Grenade
//--------------------------------------------------------------------------------------------------
bool gt_TipFlashBangGrenade_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/54FD42A1"), libNtve_ge_TipType_NewAbility), StringExternal("Param/Value/6DA539ED"), StringExternal("Param/Value/3A27245E"), "Assets\\Textures\\btn-ability-UPL-FlashGrenade.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipFlashBangGrenade_Init () {
    gt_TipFlashBangGrenade = TriggerCreate("gt_TipFlashBangGrenade_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Headshot
//--------------------------------------------------------------------------------------------------
bool gt_TipHeadshot_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/3E99A0EE"), libNtve_ge_TipType_NewAbility), StringExternal("Param/Value/DC73475E"), StringExternal("Param/Value/DEB6A830"), "Assets\\Textures\\btn-ability-upl-headshot-zergling.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipHeadshot_Init () {
    gt_TipHeadshot = TriggerCreate("gt_TipHeadshot_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Incendiary Grenade
//--------------------------------------------------------------------------------------------------
bool gt_TipIncendiaryGrenade_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/D9943B4E"), libNtve_ge_TipType_NewAbility), StringExternal("Param/Value/47A88679"), StringExternal("Param/Value/F76E29E5"), "Assets\\Textures\\btn-ability-upl-firebomb.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipIncendiaryGrenade_Init () {
    gt_TipIncendiaryGrenade = TriggerCreate("gt_TipIncendiaryGrenade_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Help AUD 499
//--------------------------------------------------------------------------------------------------
bool gt_TipHelpAUD499_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/0391A09E"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/885A11DD"), StringExternal("Param/Value/76134404"), "Assets\\Textures\\ui-hericon-davisofficer1.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipHelpAUD499_Init () {
    gt_TipHelpAUD499 = TriggerCreate("gt_TipHelpAUD499_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Save the Day
//--------------------------------------------------------------------------------------------------
bool gt_TipSavetheDay_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/36AAC5B7"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/61E343F9"), StringExternal("Param/Value/95023AF0"), "Assets\\Textures\\btn-ability-UPL-Sprint.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipSavetheDay_Init () {
    gt_TipSavetheDay = TriggerCreate("gt_TipSavetheDay_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Power Grid
//--------------------------------------------------------------------------------------------------
bool gt_TipPowerGrid_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/9EB9C996"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/D9B1ECC6"), StringExternal("Param/Value/93C85DA0"), "Assets\\Textures\\PowerGrid.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipPowerGrid_Init () {
    gt_TipPowerGrid = TriggerCreate("gt_TipPowerGrid_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Loading Van
//--------------------------------------------------------------------------------------------------
bool gt_TipLoadingVan_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/3E3DB760"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/E3975110"), StringExternal("Param/Value/D6EAC1BD"), "Assets\\Textures\\btn-ability-terran-load.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipLoadingVan_Init () {
    gt_TipLoadingVan = TriggerCreate("gt_TipLoadingVan_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Boom Boom
//--------------------------------------------------------------------------------------------------
bool gt_TipBoomBoom_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/FA960BC3"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/5D3A9A9D"), StringExternal("Param/Value/E3862A20"), "Assets\\icons\\Button_Raptor Fighter Jet\\btn-ability-UPL-ScatterShotBomb.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipBoomBoom_Init () {
    gt_TipBoomBoom = TriggerCreate("gt_TipBoomBoom_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Gas Trucks
//--------------------------------------------------------------------------------------------------
bool gt_TipGasTrucks_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/F30C023A"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/625472B3"), StringExternal("Param/Value/8462313F"), "Assets\\Textures\\btn-ability-terran-nuclearstrike-color.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipGasTrucks_Init () {
    gt_TipGasTrucks = TriggerCreate("gt_TipGasTrucks_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Incinerator Unit
//--------------------------------------------------------------------------------------------------
bool gt_TipIncineratorUnit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/347046C9"), libNtve_ge_TipType_NewUnit), StringExternal("Param/Value/CF1C9C9F"), StringExternal("Param/Value/CA1B609D"), "Assets\\icons\\Button_InfantryFlameThrower\\btn-unit-UPL-InfantryFlameThrower.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipIncineratorUnit_Init () {
    gt_TipIncineratorUnit = TriggerCreate("gt_TipIncineratorUnit_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Coolant Closeoff
//--------------------------------------------------------------------------------------------------
bool gt_TipCoolantCloseoff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/E9ABB144"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/F26801DF"), StringExternal("Param/Value/A37445AE"), "Assets\\Textures\\btn-ability-UPL-LiquidNitrogenCanister.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipCoolantCloseoff_Init () {
    gt_TipCoolantCloseoff = TriggerCreate("gt_TipCoolantCloseoff_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Sergeant Peters
//--------------------------------------------------------------------------------------------------
bool gt_TipSergeantPeters_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/0B5E981D"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/28B70833"), StringExternal("Param/Value/E5A33F8D"), "Assets\\Textures\\btn-unit-upl-uplriotofficer.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipSergeantPeters_Init () {
    gt_TipSergeantPeters = TriggerCreate("gt_TipSergeantPeters_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Rifle Switch
//--------------------------------------------------------------------------------------------------
bool gt_TipRifleSwitch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/412C6553"), libNtve_ge_TipType_NewAbility), StringExternal("Param/Value/ED18819F"), StringExternal("Param/Value/C5F5702A"), "Assets\\Textures\\btn-ability-UPL-ShotgunSwitch.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipRifleSwitch_Init () {
    gt_TipRifleSwitch = TriggerCreate("gt_TipRifleSwitch_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - APC
//--------------------------------------------------------------------------------------------------
bool gt_TipAPC_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/DBD16EDE"), libNtve_ge_TipType_NewUnit), StringExternal("Param/Value/9524D2D5"), StringExternal("Param/Value/83F4ADC7"), "Assets\\Textures\\btn-unit-upl-apc.dds");
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipAPC_Init () {
    gt_TipAPC = TriggerCreate("gt_TipAPC_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DEBUG_Vic
//--------------------------------------------------------------------------------------------------
bool gt_DEBUG_Vic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_VictorySequence, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DEBUG_Vic_Init () {
    gt_DEBUG_Vic = TriggerCreate("gt_DEBUG_Vic_Func");
    TriggerAddEventChatMessage(gt_DEBUG_Vic, c_playerAny, "victest", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Zergling1
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeZergling1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_parkEscapeZgroup[0], c_unitCountAlive) < 3)) {
        TriggerEnable(TriggerGetCurrent(), false);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(4)));
        UnitGroupAdd(gv_parkEscapeZgroup[0], UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(5))), c_orderQueueReplace);
        Wait(RandomFixed(3.0, 9.0), c_timeGame);
        TriggerEnable(TriggerGetCurrent(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeZergling1_Init () {
    gt_ParkEscapeZergling1 = TriggerCreate("gt_ParkEscapeZergling1_Func");
    TriggerEnable(gt_ParkEscapeZergling1, false);
    TriggerAddEventTimePeriodic(gt_ParkEscapeZergling1, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Zergling2
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeZergling2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_parkEscapeZgroup[1], c_unitCountAlive) < 4)) {
        TriggerEnable(TriggerGetCurrent(), false);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(4)));
        UnitGroupAdd(gv_parkEscapeZgroup[1], UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(29))), c_orderQueueReplace);
        Wait(RandomFixed(3.0, 9.0), c_timeGame);
        TriggerEnable(TriggerGetCurrent(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeZergling2_Init () {
    gt_ParkEscapeZergling2 = TriggerCreate("gt_ParkEscapeZergling2_Func");
    TriggerEnable(gt_ParkEscapeZergling2, false);
    TriggerAddEventTimePeriodic(gt_ParkEscapeZergling2, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Zergling3
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeZergling3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_parkEscapeZgroup[2], c_unitCountAlive) < 4)) {
        TriggerEnable(TriggerGetCurrent(), false);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(60)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_parkEscapeZgroup[2], UnitLastCreated());
        Wait(2.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(58))), c_orderQueueAddToEnd);
        Wait(RandomFixed(3.0, 9.0), c_timeGame);
        TriggerEnable(TriggerGetCurrent(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeZergling3_Init () {
    gt_ParkEscapeZergling3 = TriggerCreate("gt_ParkEscapeZergling3_Func");
    TriggerEnable(gt_ParkEscapeZergling3, false);
    TriggerAddEventTimePeriodic(gt_ParkEscapeZergling3, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Zergling4
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeZergling4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_parkEscapeZgroup[3], c_unitCountAlive) < 4)) {
        TriggerEnable(TriggerGetCurrent(), false);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(60)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_parkEscapeZgroup[3], UnitLastCreated());
        Wait(2.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(59))), c_orderQueueAddToEnd);
        Wait(RandomFixed(3.0, 9.0), c_timeGame);
        TriggerEnable(TriggerGetCurrent(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeZergling4_Init () {
    gt_ParkEscapeZergling4 = TriggerCreate("gt_ParkEscapeZergling4_Func");
    TriggerEnable(gt_ParkEscapeZergling4, false);
    TriggerAddEventTimePeriodic(gt_ParkEscapeZergling4, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Zergling5
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeZergling5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_parkEscapeZgroup[5], c_unitCountAlive) < 6)) {
        TriggerEnable(TriggerGetCurrent(), false);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(60)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_parkEscapeZgroup[5], UnitLastCreated());
        Wait(2.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(61))), c_orderQueueAddToEnd);
        Wait(RandomFixed(3.0, 9.0), c_timeGame);
        TriggerEnable(TriggerGetCurrent(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeZergling5_Init () {
    gt_ParkEscapeZergling5 = TriggerCreate("gt_ParkEscapeZergling5_Func");
    TriggerEnable(gt_ParkEscapeZergling5, false);
    TriggerAddEventTimePeriodic(gt_ParkEscapeZergling5, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Zergling6
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeZergling6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGroupCount(gv_parkEscapeZgroup[6], c_unitCountAlive) < 10)) {
        TriggerEnable(TriggerGetCurrent(), false);
        libNtve_gf_CreateUnitsWithDefaultFacing(2, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(60)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_parkEscapeZgroup[6], UnitLastCreated());
        Wait(2.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(101))), c_orderQueueAddToEnd);
        Wait(RandomFixed(3.0, 9.0), c_timeGame);
        TriggerEnable(TriggerGetCurrent(), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeZergling6_Init () {
    gt_ParkEscapeZergling6 = TriggerCreate("gt_ParkEscapeZergling6_Func");
    TriggerEnable(gt_ParkEscapeZergling6, false);
    TriggerAddEventTimePeriodic(gt_ParkEscapeZergling6, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed1
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianFemale", c_unitCreateIgnorePlacement, 3, PointFromId(763), PointFromId(764));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(196)), c_orderQueueReplace);
    libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianFemale", c_unitCreateIgnorePlacement, 3, PointFromId(763), PointFromId(764));
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(196)), c_orderQueueReplace);
    libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianMale", c_unitCreateIgnorePlacement, 3, PointFromId(763), PointFromId(765));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(196)), c_orderQueueReplace);
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    Wait(0.2, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", c_unitCreateIgnorePlacement, 4, PointFromId(764), PointFromId(765));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(763)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(187)), c_orderQueueAddToEnd);
    UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "CritterWander", gv_myraDavis, 1);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", c_unitCreateIgnorePlacement, 4, PointFromId(764), PointFromId(765));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(763)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(187)), c_orderQueueAddToEnd);
    UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "CritterWander", gv_myraDavis, 1);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", c_unitCreateIgnorePlacement, 4, PointFromId(765), PointFromId(765));
    UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "CritterWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(763)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(60327518)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed1_Init () {
    gt_ParkEscapeBloodshed1 = TriggerCreate("gt_ParkEscapeBloodshed1_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed1, null, RegionFromId(133), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed2
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_untitledVariable001;

    // Automatic Variable Declarations
    const int autoA553761D_n = 3;
    int autoA553761D_i;
    const int auto6A5887C0_n = 4;
    int auto6A5887C0_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(771), PointFromId(764));
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    for (autoA553761D_i = 1; autoA553761D_i <= autoA553761D_n; autoA553761D_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianFemale", 0, 3, RegionRandomPoint(RegionFromId(21)), PointFromId(764));
        lv_untitledVariable001 = UnitLastCreated();
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(188)), c_orderQueueReplace);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
    }
    Wait(0.2, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(22)), PointFromId(765));
    UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), lv_untitledVariable001), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(188)), c_orderQueueAddToEnd);
    for (auto6A5887C0_i = 1; auto6A5887C0_i <= auto6A5887C0_n; auto6A5887C0_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianMale", 0, 3, RegionRandomPoint(RegionFromId(21)), PointFromId(764));
        lv_untitledVariable001 = UnitLastCreated();
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(188)), c_orderQueueReplace);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.2, c_timeGame);
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(22)), PointFromId(765));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(188)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(674292937)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed2_Init () {
    gt_ParkEscapeBloodshed2 = TriggerCreate("gt_ParkEscapeBloodshed2_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed2, null, RegionFromId(133), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed2 Fast Cops
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed2FastCops_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(226516852), true);
    UnitBehaviorAdd(UnitFromId(226516852), "UPLPoliceCruiserSirenLights", UnitFromId(226516852), 1);
    libNtve_gf_ShowHideUnit(UnitFromId(497656355), true);
    UnitBehaviorAdd(UnitFromId(497656355), "UPLPoliceCruiserSirenLights", UnitFromId(497656355), 1);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(226516852), true);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(497656355), true);
    UnitSetPropertyFixed(UnitFromId(226516852), c_unitPropBaseMovementSpeed, 12.0);
    UnitSetPropertyFixed(UnitFromId(497656355), c_unitPropBaseMovementSpeed, 12.0);
    SoundPlayForPlayer(SoundLink("M2IntroFastCopDriveBy", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2IntroFastCopDriveBy2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(7.5, c_timeReal);
    UnitIssueOrder(UnitFromId(497656355), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(674292937)), c_orderQueueReplace);
    Wait(1.0, c_timeReal);
    UnitIssueOrder(UnitFromId(226516852), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(674292937)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed2FastCops_Init () {
    gt_ParkEscapeBloodshed2FastCops = TriggerCreate("gt_ParkEscapeBloodshed2FastCops_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed2FastCops, null, RegionFromId(133), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed3
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_untitledVariable001;

    // Automatic Variable Declarations
    const int autoFA1EF844_n = 2;
    int autoFA1EF844_i;
    const int auto7098F3B7_n = 7;
    int auto7098F3B7_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(767), PointFromId(765));
    for (autoFA1EF844_i = 1; autoFA1EF844_i <= autoFA1EF844_n; autoFA1EF844_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(768), PointFromId(764));
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
        UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
        lv_untitledVariable001 = UnitLastCreated();
        Wait(0.2, c_timeGame);
    }
    for (auto7098F3B7_i = 1; auto7098F3B7_i <= auto7098F3B7_n; auto7098F3B7_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(766), PointFromId(765));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(767)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(758)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.66), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed3_Init () {
    gt_ParkEscapeBloodshed3 = TriggerCreate("gt_ParkEscapeBloodshed3_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed3, null, RegionFromId(131), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed4
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_untitledVariable001;

    // Automatic Variable Declarations
    const int auto71A862CF_n = 3;
    int auto71A862CF_i;
    const int auto2B66B8CF_n = 9;
    int auto2B66B8CF_i;

    // Variable Initialization
    lv_untitledVariable001 = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto71A862CF_i = 1; auto71A862CF_i <= auto71A862CF_n; auto71A862CF_i += 1) {
        UnitSetState(UnitFromId(885484556), c_unitStateInvulnerable, false);
        libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianMale", 0, 2, PointFromId(770), RegionRandomPoint(RegionEntireMap()));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitGroupAdd(lv_untitledVariable001, UnitLastCreated());
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianFemale", 0, 2, PointFromId(770), RegionRandomPoint(RegionEntireMap()));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitGroupAdd(lv_untitledVariable001, UnitLastCreated());
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 1.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.1, c_timeGame);
    }
    for (auto2B66B8CF_i = 1; auto2B66B8CF_i <= auto2B66B8CF_n; auto2B66B8CF_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(768), PointFromId(765));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 4.4);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(770)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(674292937)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.3), c_timeGame);
    }
    Wait(0.7, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed4_Init () {
    gt_ParkEscapeBloodshed4 = TriggerCreate("gt_ParkEscapeBloodshed4_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed4, null, RegionFromId(134), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed5
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_untitledVariable001;

    // Automatic Variable Declarations
    const int auto48C0CA71_n = 2;
    int auto48C0CA71_i;
    const int autoC82FC883_n = 7;
    int autoC82FC883_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto48C0CA71_i = 1; auto48C0CA71_i <= auto48C0CA71_n; auto48C0CA71_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(767), PointFromId(764));
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
        UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
        lv_untitledVariable001 = UnitLastCreated();
        Wait(0.2, c_timeGame);
    }
    for (autoC82FC883_i = 1; autoC82FC883_i <= autoC82FC883_n; autoC82FC883_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(766), PointFromId(1260569829));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(132))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(60327518)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 1.2), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed5_Init () {
    gt_ParkEscapeBloodshed5 = TriggerCreate("gt_ParkEscapeBloodshed5_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed5, null, RegionFromId(138), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed6
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto4B3E5158_n = 2;
    int auto4B3E5158_i;
    const int autoD3D2ED3F_n = 3;
    int autoD3D2ED3F_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianFemale", 0, 3, PointFromId(772), PointFromId(764));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 10.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(774)), c_orderQueueReplace);
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    libNtve_gf_UnitCreateFacingPoint(1, "UPLCivilianMale", 0, 3, PointFromId(772), PointFromId(765));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 10.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(773)), c_orderQueueReplace);
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    for (auto4B3E5158_i = 1; auto4B3E5158_i <= auto4B3E5158_n; auto4B3E5158_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(775), PointFromId(765));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(760)), c_orderQueueReplace);
    }
    Wait(1.5, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(774), PointFromId(765));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(767)), c_orderQueueReplace);
    Wait(1.5, c_timeGame);
    for (autoD3D2ED3F_i = 1; autoD3D2ED3F_i <= autoD3D2ED3F_n; autoD3D2ED3F_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(775), PointFromId(765));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(759)), c_orderQueueReplace);
        Wait(0.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed6_Init () {
    gt_ParkEscapeBloodshed6 = TriggerCreate("gt_ParkEscapeBloodshed6_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed6, null, RegionFromId(25), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Bloodshed7
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeBloodshed7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_untitledVariable001;

    // Automatic Variable Declarations
    const int auto279E7476_n = 3;
    int auto279E7476_i;
    const int autoE979A69B_n = 14;
    int autoE979A69B_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gf_CivilianCreatorCinematic(5, RegionFromId(130), RegionFromId(131));
    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(885484556));
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(UnitFromId(885484556)), PointFromId(765));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1583709265)), c_orderQueueReplace);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(UnitFromId(885484556)), PointFromId(765));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(813747887)), c_orderQueueReplace);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(775), PointFromId(765));
    libNtve_gf_UnitCreateFacingPoint(1, "UPLDetectiveMale", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(130)), PointFromId(766));
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    Wait(0.2, c_timeGame);
    libNtve_gf_ShowHideUnit(UnitFromId(497473386), true);
    UnitSetState(UnitFromId(497473386), c_unitStateStunned, true);
    UnitBehaviorAdd(UnitFromId(497473386), "UPLPoliceCruiserSirenLights", UnitFromId(497473386), 1);
    for (auto279E7476_i = 1; auto279E7476_i <= auto279E7476_n; auto279E7476_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(130)), PointFromId(764));
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
        UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
        Wait(0.2, c_timeGame);
    }
    for (autoE979A69B_i = 1; autoE979A69B_i <= autoE979A69B_n; autoE979A69B_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(775), PointFromId(766));
        UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1464291580)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(674292937)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.66), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeBloodshed7_Init () {
    gt_ParkEscapeBloodshed7 = TriggerCreate("gt_ParkEscapeBloodshed7_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeBloodshed7, null, RegionFromId(129), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Section Begins
//--------------------------------------------------------------------------------------------------
bool gt_ParkSectionBegins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_connellyApartmentsSectionActive = 2;
    TriggerEnable(gt_IntroCinematicTrafficCopsFace1, false);
    if ((UnitIsAlive(gv_davisCruiser) == false)) {
        libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_01_USER, PointFromId(190));
        gv_davisCruiser = UnitLastCreated();
        UnitSetState(gv_davisCruiser, c_unitStateStunned, true);
        UnitSetState(gv_davisCruiser, c_unitStateInvulnerable, true);
    }

    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(57));
    CameraSetBounds(PlayerGroupAll(), RegionFromId(292), true);
    gv_parkReveal = VisRevealerLastCreated();
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2Part1", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    CameraPan(gv_pLAYER_01_USER, PointFromId(704), 3.2, -1, 10.0, false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(1.2, c_timeGame);
    UnitIssueOrder(gv_myraDavis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(704)), c_orderQueueReplace);
    UnitAbilityRemove(gv_myraDavis, "MyraDavisHeadshot");
    UnitAbilityRemove(gv_myraDavis, "MyraDavisHealingPatch");
    UnitAbilityRemove(gv_myraDavis, "MyraDavisFlashBangGrenade");
    UnitAbilityRemove(gv_myraDavis, "MyraDavisFlameGrenade");
    Wait(1.5, c_timeGame);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(702), 2.0, -1, 10.0, true);
    Wait(2.0, c_timeReal);
    CameraLockInput(gv_pLAYER_01_USER, true);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(false, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00023", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    TriggerExecute(gt_ParkZerglingMaker, true, false);
    Wait(1.0, c_timeGame);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(false, c_invalidPortraitId, "EP01M02_1|Line00024", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00025", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    libNtve_gf_GlobalCinematicSetting(false);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    VisExploreArea(gv_pLAYER_01_USER, RegionEntireMap(), false, false);
    UnitSetState(gv_myraDavis, c_unitStateInvulnerable, false);
    UnitSetState(gv_myraDavis, c_unitStateFidget, true);
    TriggerQueueExit();
    UISetResourceVisible(PlayerGroupAll(), c_resourceTypeMinerals, false);
    UISetResourceVisible(PlayerGroupAll(), c_resourceTypeVespene, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTeamResourceButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeAllianceButton, false);
    SoundPlayForPlayer(SoundLink("M2DistantSirens1", -1), c_maxPlayers, PlayerGroupAll(), 75.0, 0.0);
    TriggerExecute(gt_ParkEscapeSirenLoop, true, false);
    Wait(1.25, c_timeGame);
    Wait(1.25, c_timeGame);
    Wait(1.0, c_timeGame);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00026", null, true, null, false);
    Wait(0.2, c_timeGame);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00027", null, true, null, false);
    Wait(0.2, c_timeGame);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00028", null, true, null, false);
    Wait(0.2, c_timeGame);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00029", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00030", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00031", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkSectionBegins_Init () {
    gt_ParkSectionBegins = TriggerCreate("gt_ParkSectionBegins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Fast Cop Despawn
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeFastCopDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "CruiserBike"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeFastCopDespawn_Init () {
    gt_ParkEscapeFastCopDespawn = TriggerCreate("gt_ParkEscapeFastCopDespawn_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeFastCopDespawn, null, RegionFromId(147), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Zergling Maker
//--------------------------------------------------------------------------------------------------
bool gt_ParkZerglingMaker_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_untitledVariable001;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_untitledVariable001 = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(708), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    ObjectiveCreate(StringExternal("Param/Value/37D808AB"), StringToText(""), c_objectiveStateActive, true);
    gv_connellyApartmentsObjective = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(781246337)), c_orderQueueReplace);
    Wait(1.0, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(693), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(716)), c_orderQueueReplace);
    Wait(1.0, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(715), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(541)), c_orderQueueReplace);
    Wait(0.15, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(694), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(695)), c_orderQueueReplace);
    Wait(1.2, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "ZerglingBurrowed", 0, 4, PointFromId(858), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    Wait(1.0, c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "ZerglingBurrowed", 0, 4, PointFromId(717), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(187), UnitGetPosition(gv_myraDavis));
    UnitGroupAdd(gv_parkEscapeZerglings, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_myraDavis, 1);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(714)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkZerglingMaker_Init () {
    gt_ParkZerglingMaker = TriggerCreate("gt_ParkZerglingMaker_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Section
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeSection_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_connellyApartmentsSectionActive == 2))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_connellyApartmentsObjective, c_objectiveStateCompleted);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(true);
    VisRevealerDestroy(gv_parkReveal);
    UnitSetOwner(gv_davisCruiser, gv_pLAYER_02_POLICE, true);
    libNtve_gf_ShareVisionofUnit(gv_davisCruiser, true, gv_pLAYER_01_USER);
    libNtve_gf_ChangeUnitDamage(gv_myraDavis, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(gv_myraDavis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(190)), c_orderQueueReplace);
    UnitSetPropertyFixed(gv_davisCruiser, c_unitPropMovementSpeed, 2.5);
    UnitSelect(gv_myraDavis, 1, false);
    Wait(0.15, c_timeGame);
    gv_davisKills = libNtve_gf_UnitGetPropertyKills(EventUnit(), c_unitPropCurrent);
    CameraApplyInfo(1, CameraInfoFromId(755), 2.0, -1, 10.0, true);
    Wait(3.0, c_timeGame);
    gv_davisKills = libNtve_gf_UnitGetPropertyKills(gv_myraDavis, c_unitPropCurrent);
    gv_davisLife = UnitGetPropertyFixed(gv_myraDavis, c_unitPropLife, c_unitPropCurrent);
    UnitRemove(gv_myraDavis);
    UnitSetState(gv_davisCruiser, c_unitStateStunned, false);
    SoundPlayAtPointForPlayer(SoundLink("SpecialOpsDropship_Load", -1), c_maxPlayers, PlayerGroupAll(), PointFromId(27), 0.0, 75.0, 0.0);
    UnitBehaviorRemove(gv_davisCruiser, "UPLPoliceCruiserOpenLeft", 1);
    UnitSetState(gv_davisCruiser, c_unitStateInvulnerable, false);
    UnitSetState(gv_davisCruiser, c_unitStateStunned, false);
    libNtve_gf_ChangeUnitDamage(gv_davisCruiser, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    Wait(0.4, c_timeGame);
    UnitGroupAdd(gv_parkEscapeFollowgroup, gv_davisCruiser);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(756)), c_orderQueueReplace);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(758)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(759)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(760)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(761)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(762)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(798)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(799)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_davisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(800)), c_orderQueueAddToEnd);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_parkEscapeFollowgroup, true, false);
    Wait(1.25, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(757), 2.0, -1, 10.0, false);
    Wait(0.5, c_timeReal);
    UnitSetState(gv_davisCruiser, c_unitStateInvulnerable, true);
    TriggerExecute(gt_ParkEscapeInitializeBullies, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeSection_Init () {
    gt_ParkEscapeSection = TriggerCreate("gt_ParkEscapeSection_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeSection, null, RegionFromId(19), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Initialize Bullies
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeInitializeBullies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto822CFA2B_n = 3;
    int auto822CFA2B_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto822CFA2B_i = 1; auto822CFA2B_i <= auto822CFA2B_n; auto822CFA2B_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(106)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_myraDavis, 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeInitializeBullies_Init () {
    gt_ParkEscapeInitializeBullies = TriggerCreate("gt_ParkEscapeInitializeBullies_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Police Transmissions
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapePoliceTransmissions_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00032", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00033", null, true, null, false);
    Wait(1.0, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00034", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00035", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00036", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapePoliceTransmissions_Init () {
    gt_ParkEscapePoliceTransmissions = TriggerCreate("gt_ParkEscapePoliceTransmissions_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Siren Loop
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeSirenLoop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(40.0, c_timeReal);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2DistantSirens", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeSirenLoop_Init () {
    gt_ParkEscapeSirenLoop = TriggerCreate("gt_ParkEscapeSirenLoop_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape First Stop Civilian Despawn
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeFirstStopCivilianDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "UPLCivilianFemale") || (UnitGetType(EventUnit()) == "UPLCivilianMale")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeFirstStopCivilianDespawn_Init () {
    gt_ParkEscapeFirstStopCivilianDespawn = TriggerCreate("gt_ParkEscapeFirstStopCivilianDespawn_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeFirstStopCivilianDespawn, null, RegionFromId(127), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape First Stop
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeFirstStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive == 2))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(1612633228), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1913819962), true);
    libNtve_gf_ShowHideUnit(UnitFromId(415738812), true);
    libNtve_gf_ShowHideUnit(UnitFromId(352693486), true);
    UnitSetPropertyFixed(UnitFromId(352693486), c_unitPropLifeMax, 80.0);
    UnitSetPropertyFixed(UnitFromId(352693486), c_unitPropLife, 80.0);
    UnitSetPropertyFixed(UnitFromId(415738812), c_unitPropLifeMax, 80.0);
    UnitSetPropertyFixed(UnitFromId(415738812), c_unitPropLife, 80.0);
    UnitSetPropertyFixed(UnitFromId(1913819962), c_unitPropLifeMax, 80.0);
    UnitSetPropertyFixed(UnitFromId(1913819962), c_unitPropLife, 80.0);
    UnitSetState(UnitFromId(1612633228), c_unitStateStunned, true);
    UnitSetState(UnitFromId(1612633228), c_unitStateMoveSuppressed, false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1612633228), true);
    UnitRemove(UnitFromId(497656355));
    UnitRemove(UnitFromId(226516852));
    UnitBehaviorAdd(UnitFromId(1612633228), "UPLPoliceCruiserOpenLeft", UnitFromId(1612633228), 1);
    UnitBehaviorAdd(UnitFromId(1612633228), "UPLPoliceCruiserOpenRight", UnitFromId(1612633228), 1);
    UnitBehaviorAdd(UnitFromId(1612633228), "UPLPoliceCruiserSirenLights", UnitFromId(1612633228), 1);
    UnitBehaviorRemove(UnitFromId(1913819962), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(1913819962), "UPLPoliceOfficerPistol", UnitFromId(1913819962), 1);
    TriggerExecute(gt_ParkEscapePoliceTransmissions, true, false);
    Wait(5.0, c_timeGame);
    TriggerExecute(gt_ParkEscapeFirstZergSpawn1, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeFirstStop_Init () {
    gt_ParkEscapeFirstStop = TriggerCreate("gt_ParkEscapeFirstStop_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeFirstStop, null, RegionFromId(125), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape First Stop Arrive
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeFirstStopArrive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoBFBB7F4E_n = 5;
    int autoBFBB7F4E_i;
    unitgroup auto2B225A41_g;
    int auto2B225A41_u;
    unit auto2B225A41_var;

    // Conditions
    if (testConds) {
        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_parkEscapeFirstStopFightActive = 1;
    for (autoBFBB7F4E_i = 1; autoBFBB7F4E_i <= autoBFBB7F4E_n; autoBFBB7F4E_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(37)), 270.0);
        UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_davisCruiser, 1);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(36)), 270.0);
        UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_davisCruiser, 1);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(35)), 270.0);
        UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_davisCruiser, 1);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(38)), 270.0);
        UnitBehaviorAdd(UnitLastCreated(), "InstallationZergWander", gv_davisCruiser, 1);
        Wait(0.4, c_timeGame);
    }
    VisEnable(c_visTypeFog, true);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_parkEscapeFollowgroup, false, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(670409021), 3.0, -1, 10.0, true);
    CameraLockInput(gv_pLAYER_01_USER, true);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(false);
    VisFillArea(gv_pLAYER_01_USER, RegionEntireMap(), c_fillTypeUnexplored, false);
    RegionPlayableMapSet(RegionFromId(136));
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    UnitSetOwner(gv_davisCruiser, gv_pLAYER_01_USER, true);
    UnitCargoCreate(gv_davisCruiser, "MyraDavisOfficer", 1);
    gv_myraDavis = UnitCargoLastCreated();
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropKills, gv_davisKills);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisRifle", 1);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisShotgun", 1);
    UnitBehaviorAdd(gv_myraDavis, "MyraDavisPistol", gv_myraDavis, 1);
    UnitSetPropertyFixed(UnitCargoLastCreated(), c_unitPropLife, 100.0);
    UnitSetPropertyFixed(UnitCargoLastCreated(), c_unitPropLifeMax, 100.0);
    UnitSetPropertyFixed(UnitCargoLastCreated(), c_unitPropKills, gv_davisKills);
    UnitAbilityRemove(UnitCargoLastCreated(), "MyraDavisFlashBangGrenade");
    UnitAbilityRemove(UnitCargoLastCreated(), "MyraDavisHealingPatch");
    UnitAbilityRemove(UnitCargoLastCreated(), "MyraDavisHeadshot");
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisRifle", 1);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisShotgun", 1);
    UnitBehaviorAdd(gv_myraDavis, "MyraDavisPistol", gv_myraDavis, 1);
    UnitBehaviorAdd(gv_davisCruiser, "UPLPoliceCruiserSirenLights", UnitFromId(497656355), 1);
    auto2B225A41_g = gv_parkEscapeRemoverCivs;
    auto2B225A41_u = UnitGroupCount(auto2B225A41_g, c_unitCountAll);
    for (;; auto2B225A41_u -= 1) {
        auto2B225A41_var = UnitGroupUnitFromEnd(auto2B225A41_g, auto2B225A41_u);
        if (auto2B225A41_var == null) { break; }
        UnitRemove(auto2B225A41_var);
    }
    UnitSetPropertyFixed(gv_davisCruiser, c_unitPropBaseMovementSpeed, 4.5);
    UnitSetPropertyFixed(gv_davisCruiser, c_unitPropMovementSpeed, 4.5);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_davisCruiser), ColorWithAlpha(12.55, 71.76, 100.00, 0.00), 9999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.4);
    gv_cruiserPing = PingLastCreated();
    PingSetTooltip(gv_cruiserPing, StringExternal("Param/Value/69A72990"));
    PingSetUnit(PingLastCreated(), gv_davisCruiser);
    UnitSetState(gv_davisCruiser, c_unitStateInvulnerable, false);
    UnitIssueOrder(gv_davisCruiser, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_ShowHideUnit(UnitFromId(449246417), true);
    ObjectiveCreate(StringExternal("Param/Value/90AD6F61"), StringToText(""), c_objectiveStateActive, true);
    gv_davisMustSurvive = ObjectiveLastCreated();
    ObjectiveShow(gv_davisMustSurvive, PlayerGroupAll(), true);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/9BFD57A8"));
    Wait(16.0, c_timeGame);
    gf_CivilianCreatorCinematic(6, RegionFromId(128), RegionFromId(127));
    Wait(15.0, c_timeGame);
    gf_CivilianCreatorCinematic(4, RegionFromId(128), RegionFromId(127));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeFirstStopArrive_Init () {
    gt_ParkEscapeFirstStopArrive = TriggerCreate("gt_ParkEscapeFirstStopArrive_Func");
    TriggerAddEventUnitRegion(gt_ParkEscapeFirstStopArrive, null, RegionFromId(135), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape First Zerg Spawn1
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeFirstZergSpawn1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoE4FFF8A6_n = 2;
    int autoE4FFF8A6_i;
    const int auto2DC7340B_n = 2;
    int auto2DC7340B_i;
    const int auto132E4C53_n = 2;
    int auto132E4C53_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoE4FFF8A6_i = 1; autoE4FFF8A6_i <= autoE4FFF8A6_n; autoE4FFF8A6_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(6.0, c_timeGame);
    for (auto2DC7340B_i = 1; auto2DC7340B_i <= auto2DC7340B_n; auto2DC7340B_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(7.0, c_timeGame);
    for (auto132E4C53_i = 1; auto132E4C53_i <= auto132E4C53_n; auto132E4C53_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(7.0, c_timeGame);
    TriggerExecute(gt_ParkEscapeFirstZergSpawn2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeFirstZergSpawn1_Init () {
    gt_ParkEscapeFirstZergSpawn1 = TriggerCreate("gt_ParkEscapeFirstZergSpawn1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape First Zerg Spawn2
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeFirstZergSpawn2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoF1E95424_n = 3;
    int autoF1E95424_i;
    const int auto05185951_n = 3;
    int auto05185951_i;
    const int auto39A52EA0_n = 2;
    int auto39A52EA0_i;
    const int auto67D3D9EB_n = 2;
    int auto67D3D9EB_i;
    const int autoBEFF3CD2_n = 2;
    int autoBEFF3CD2_i;
    const int autoDFF20FE8_n = 2;
    int autoDFF20FE8_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoF1E95424_i = 1; autoF1E95424_i <= autoF1E95424_n; autoF1E95424_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(8.0, c_timeGame);
    UnitKill(UnitFromId(1612633228));
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HydraliskBurrowed", 0, gv_pLAYER_04_ROACHES, PointFromId(1241519574));
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    for (auto05185951_i = 1; auto05185951_i <= auto05185951_n; auto05185951_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(9.0, c_timeGame);
    for (auto39A52EA0_i = 1; auto39A52EA0_i <= auto39A52EA0_n; auto39A52EA0_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
        gv_connellyApartmentsSectionActive = 3;
    }
    Wait(6.0, c_timeGame);
    for (auto67D3D9EB_i = 1; auto67D3D9EB_i <= auto67D3D9EB_n; auto67D3D9EB_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(6.0, c_timeGame);
    for (autoBEFF3CD2_i = 1; autoBEFF3CD2_i <= autoBEFF3CD2_n; autoBEFF3CD2_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1466592611));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    Wait(6.0, c_timeGame);
    for (autoDFF20FE8_i = 1; autoDFF20FE8_i <= autoDFF20FE8_n; autoDFF20FE8_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(391807617));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(126))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeFirstZergSpawn2_Init () {
    gt_ParkEscapeFirstZergSpawn2 = TriggerCreate("gt_ParkEscapeFirstZergSpawn2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Completion
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeCompletion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_connellyApartmentsSectionActive == 3))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_connellyApartmentsFirstStopZergGroup) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TechTreeUnitHelp(1, "UPLPoliceOfficer", true);
    libNtve_gf_RescueUnit(UnitFromId(352693486), gv_pLAYER_01_USER, true);
    UnitIssueOrder(UnitFromId(352693486), OrderTargetingUnit(AbilityCommand("move", 0), gv_myraDavis), c_orderQueueReplace);
    libNtve_gf_RescueUnit(UnitFromId(415738812), gv_pLAYER_01_USER, true);
    UnitIssueOrder(UnitFromId(415738812), OrderTargetingUnit(AbilityCommand("move", 0), gv_myraDavis), c_orderQueueReplace);
    libNtve_gf_RescueUnit(UnitFromId(1913819962), gv_pLAYER_01_USER, true);
    UnitIssueOrder(UnitFromId(1913819962), OrderTargetingUnit(AbilityCommand("move", 0), gv_myraDavis), c_orderQueueReplace);
    UnitGroupAdd(gv_parkEscapeRescueOfficerGroup, UnitFromId(352693486));
    UnitGroupAdd(gv_parkEscapeRescueOfficerGroup, UnitFromId(415738812));
    UnitGroupAdd(gv_parkEscapeRescueOfficerGroup, UnitFromId(1913819962));
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    TriggerExecute(gt_ParkEscapeOfficersRescued, true, false);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1913819962), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00037", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00038", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(3.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00039", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00040", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00041", null, true, null, false);
    Wait(1.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00042", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(329294421), 3.0, -1, 10.0, true);
    MinimapPing(PlayerGroupAll(), PointFromId(776), 2.0, Color(100.00, 100.00, 0.00));
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingObjective", PointFromId(776), ColorWithAlpha(50.20, 100.00, 0.00, 0.00), 900.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/620CA023"));
    gv_parkEscapeGasStationReveal = PingLastCreated();
    Wait(0.5, c_timeGame);
    ObjectiveCreate(StringExternal("Param/Value/37460A1B"), StringExternal("Param/Value/321BB143"), c_objectiveStateActive, true);
    gv_aUD109 = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD109, PlayerGroupAll(), true);
    RegionPlayableMapSet(RegionFromId(137));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraLockInput(1, false);
    libNtve_gf_ChangeUnitDamage(gv_davisCruiser, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    TriggerExecute(gt_TipMyraDavis, true, false);
    TriggerExecute(gt_TipProtectandServe, true, false);
    TriggerExecute(gt_TipPoliceCruiser, true, false);
    TriggerExecute(gt_AUD109Setup, true, false);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeCompletion_Init () {
    gt_ParkEscapeCompletion = TriggerCreate("gt_ParkEscapeCompletion_Func");
    TriggerAddEventUnitDied(gt_ParkEscapeCompletion, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Park Escape Officers Rescued
//--------------------------------------------------------------------------------------------------
bool gt_ParkEscapeOfficersRescued_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/AB1B2508"));
    Wait(8.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    UnitBehaviorAdd(UnitFromId(420143744), "UPLPoliceCruiserSirenLights", gv_introCine_DavisCruiser, 1);
    UnitBehaviorAdd(UnitFromId(1122683588), "UPLPoliceCruiserSirenLights", gv_introCine_DavisCruiser, 1);
    TechTreeUnitHelp(gv_pLAYER_01_USER, "UPLPoliceOfficer", true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ParkEscapeOfficersRescued_Init () {
    gt_ParkEscapeOfficersRescued = TriggerCreate("gt_ParkEscapeOfficersRescued_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Setup
//--------------------------------------------------------------------------------------------------
bool gt_AUD109Setup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5F0D7E5C_g;
    int auto5F0D7E5C_u;
    unit auto5F0D7E5C_var;
    unitgroup auto7B6D3123_g;
    int auto7B6D3123_u;
    unit auto7B6D3123_var;

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aUD109Section = 1;
    TriggerDestroy(gt_IntroCinematicTrafficCopsFace1);
    UnitSetState(UnitFromId(1467093865), c_unitStateSelectable, false);
    UnitSetInfoTip(UnitFromId(1467093865), StringExternal("Param/Value/A3F6FBF0"));
    libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1654392651), libNtve_gf_PointFacingAngle(PointFromId(1458599221), 270.0));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1654392651), libNtve_gf_PointFacingAngle(PointFromId(1458599221), 270.0));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    libNtve_gf_UnitCreateFacingPoint(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1292882259), libNtve_gf_PointFacingAngle(PointFromId(1458599221), 270.0));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(436823428), "UPLPoliceOfficerPistol", UnitFromId(436823428), 1);
    UnitBehaviorRemove(UnitFromId(436823428), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitFromId(436823428), "UPLPoliceOfficerShotgun", 1);
    auto5F0D7E5C_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(137), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5F0D7E5C_u = UnitGroupCount(auto5F0D7E5C_g, c_unitCountAll);
    for (;; auto5F0D7E5C_u -= 1) {
        auto5F0D7E5C_var = UnitGroupUnitFromEnd(auto5F0D7E5C_g, auto5F0D7E5C_u);
        if (auto5F0D7E5C_var == null) { break; }
        UnitRemove(auto5F0D7E5C_var);
    }
    auto7B6D3123_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(137), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7B6D3123_u = UnitGroupCount(auto7B6D3123_g, c_unitCountAll);
    for (;; auto7B6D3123_u -= 1) {
        auto7B6D3123_var = UnitGroupUnitFromEnd(auto7B6D3123_g, auto7B6D3123_u);
        if (auto7B6D3123_var == null) { break; }
        UnitRemove(auto7B6D3123_var);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(1578915878), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1759423720), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1245517535), true);
    libNtve_gf_ShowHideUnit(UnitFromId(342755999), true);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(342755999), true);
    ActorSend(libNtve_gf_MainActorofUnit(UnitFromId(1245517535)), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
    UnitSetState(UnitFromId(1245517535), c_unitStateFidget, false);
    ActorSend(libNtve_gf_MainActorofUnit(UnitFromId(1759423720)), "AnimGroupApply Scared,C Scared,C {} 0 180.000000 AsDuration");
    UnitSetState(UnitFromId(1759423720), c_unitStateFidget, false);
    ActorSend(libNtve_gf_MainActorofUnit(UnitFromId(1578915878)), "AnimGroupApply Scared,A Scared,A {} 0 180.000000 AsDuration");
    UnitSetState(UnitFromId(1578915878), c_unitStateFidget, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109Setup_Init () {
    gt_AUD109Setup = TriggerCreate("gt_AUD109Setup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Crash Start
//--------------------------------------------------------------------------------------------------
bool gt_AUD109CrashStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive == 3))) {
            return false;
        }

        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "CruiserBikeVulturePath", 0, gv_pLAYER_02_POLICE, PointFromId(496488738));
    Wait(2.0, c_timeGame);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("move", 0), UnitFromId(342755999)), c_orderQueueReplace);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 12.0);
    gv_aUD109CrashCar = UnitLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109CrashStart_Init () {
    gt_AUD109CrashStart = TriggerCreate("gt_AUD109CrashStart_Func");
    TriggerAddEventUnitRegion(gt_AUD109CrashStart, null, RegionFromId(143), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Crash Start 2
//--------------------------------------------------------------------------------------------------
bool gt_AUD109CrashStart2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((gv_aUD109CrashCar == EventUnit()))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive == 3))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2PoliceCruiserBrakes", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109CrashStart2_Init () {
    gt_AUD109CrashStart2 = TriggerCreate("gt_AUD109CrashStart2_Func");
    TriggerAddEventUnitRegion(gt_AUD109CrashStart2, null, RegionFromId(145), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Crash Start 3
//--------------------------------------------------------------------------------------------------
bool gt_AUD109CrashStart3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((gv_aUD109CrashCar == EventUnit()))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive == 3))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    SoundPlayAtPointForPlayer(SoundLink("M2AUD109CarAlarm", -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1091082333), 0.0, 150.0, 0.0);
    SoundPlayAtPointForPlayer(SoundLink("M2AUD109CarAlarm2", -1), c_maxPlayers, PlayerGroupAll(), PointFromId(1091082333), 0.0, 150.0, 0.0);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 1.0, 0.5, 100.0, 1.25);
    UnitKill(gv_aUD109CrashCar);
    UnitKill(UnitFromId(342755999));
    libNtve_gf_ShowHideUnit(UnitFromId(1336856623), true);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(144), "GenericFire_Large");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109CrashStart3_Init () {
    gt_AUD109CrashStart3 = TriggerCreate("gt_AUD109CrashStart3_Func");
    TriggerAddEventUnitRegion(gt_AUD109CrashStart3, null, RegionFromId(144), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Accident Scene
//--------------------------------------------------------------------------------------------------
bool gt_AUD109AccidentScene_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto53CB95BB_g;
    int auto53CB95BB_u;
    unit auto53CB95BB_var;
    const int auto01BA5814_n = 4;
    int auto01BA5814_i;
    const int auto58F3B215_n = 5;
    int auto58F3B215_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto53CB95BB_g = UnitGroup(null, c_playerAny, RegionFromId(141), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto53CB95BB_u = UnitGroupCount(auto53CB95BB_g, c_unitCountAll);
    for (;; auto53CB95BB_u -= 1) {
        auto53CB95BB_var = UnitGroupUnitFromEnd(auto53CB95BB_g, auto53CB95BB_u);
        if (auto53CB95BB_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto53CB95BB_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    for (auto01BA5814_i = 1; auto01BA5814_i <= auto01BA5814_n; auto01BA5814_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(140)), 270.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(192)), c_orderQueueReplace);
        Wait(0.3, c_timeGame);
    }
    Wait(6.0, c_timeGame);
    for (auto58F3B215_i = 1; auto58F3B215_i <= auto58F3B215_n; auto58F3B215_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(140)), 270.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1237664634)), c_orderQueueReplace);
        Wait(0.3, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109AccidentScene_Init () {
    gt_AUD109AccidentScene = TriggerCreate("gt_AUD109AccidentScene_Func");
    TriggerAddEventUnitRegion(gt_AUD109AccidentScene, null, RegionFromId(139), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Spawns Start
//--------------------------------------------------------------------------------------------------
bool gt_AUD109SpawnsStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoF39580C5_n = 3;
    int autoF39580C5_i;
    const int auto24B58E32_n = 3;
    int auto24B58E32_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((EventUnitRegion() == RegionFromId(8))) {
        for (auto24B58E32_i = 1; auto24B58E32_i <= auto24B58E32_n; auto24B58E32_i += 1) {
            libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(860), PointFromId(765));
            UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(775)), c_orderQueueAddToEnd);
            Wait(RandomFixed(1.0, 1.7), c_timeGame);
        }
    }
    else {
        for (autoF39580C5_i = 1; autoF39580C5_i <= autoF39580C5_n; autoF39580C5_i += 1) {
            libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(859), PointFromId(765));
            UnitGroupAdd(gv_parkEscapeRemoverCivs, UnitLastCreated());
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
            UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(759)), c_orderQueueAddToEnd);
            Wait(RandomFixed(1.0, 1.7), c_timeGame);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109SpawnsStart_Init () {
    gt_AUD109SpawnsStart = TriggerCreate("gt_AUD109SpawnsStart_Func");
    TriggerAddEventUnitRegion(gt_AUD109SpawnsStart, null, RegionFromId(8), true);
    TriggerAddEventUnitRegion(gt_AUD109SpawnsStart, null, RegionFromId(26), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Begins
//--------------------------------------------------------------------------------------------------
bool gt_AUD109Begins_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zerglings;

    // Automatic Variable Declarations
    unitgroup autoB4A87A7B_g;
    int autoB4A87A7B_u;
    unit autoB4A87A7B_var;
    const int auto6E768875_n = 4;
    int auto6E768875_i;
    const int auto2E597599_n = 5;
    int auto2E597599_i;
    const int auto25DA915D_n = 4;
    int auto25DA915D_i;

    // Variable Initialization
    lv_zerglings = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }

        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive == 3))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ArtifactDavis, false);
    UnitKill(UnitFromId(449246417));
    ObjectiveDestroy(gv_connellyApartmentsObjective);
    ObjectiveSetState(gv_aUD109, c_objectiveStateCompleted);
    ObjectiveCreate(StringExternal("Param/Value/C8F9122C"), StringExternal("Param/Value/E6CCF6CE"), c_objectiveStateActive, true);
    gv_aUD109Protect = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD109Protect, PlayerGroupAll(), true);
    PingDestroy(gv_parkEscapeGasStationReveal);
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(891), 3.0, -1, 10.0, true);
    UnitRemove(UnitFromId(342755999));
    libNtve_gf_ShowHideUnit(UnitFromId(1336856623), true);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(144), "GenericFire_Large");
    TriggerEnable(TriggerGetCurrent(), false);
    UnitKill(UnitFromId(1583865281));
    autoB4A87A7B_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB4A87A7B_u = UnitGroupCount(autoB4A87A7B_g, c_unitCountAll);
    for (;; autoB4A87A7B_u -= 1) {
        autoB4A87A7B_var = UnitGroupUnitFromEnd(autoB4A87A7B_g, autoB4A87A7B_u);
        if (autoB4A87A7B_var == null) { break; }
        if ((libNtve_gf_UnitInRegion(autoB4A87A7B_var, RegionFromId(28)) == false)) {
            UnitSetPosition(autoB4A87A7B_var, RegionRandomPoint(RegionFromId(28)), false);
        }

    }
    UnitIssueOrder(UnitFromId(1467093865), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    UnitBehaviorRemove(UnitFromId(1467093865), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitFromId(1467093865), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(1467093865), "UPLPoliceOfficerPistol", UnitFromId(1467093865), 1);
    UnitSetPropertyFixed(UnitFromId(1467093865), c_unitPropLifeMax, 100.0);
    UnitSetPropertyFixed(UnitFromId(1467093865), c_unitPropLife, 100.0);
    for (auto6E768875_i = 1; auto6E768875_i <= auto6E768875_n; auto6E768875_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(860), PointFromId(765));
        UnitGroupAdd(lv_zerglings, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.0, 1.3), c_timeGame);
    }
    Wait(1.0, c_timeGame);
    for (auto2E597599_i = 1; auto2E597599_i <= auto2E597599_n; auto2E597599_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(859), PointFromId(860));
        UnitGroupAdd(lv_zerglings, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.5, 1.0), c_timeGame);
    }
    Wait(4.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00043", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    for (auto25DA915D_i = 1; auto25DA915D_i <= auto25DA915D_n; auto25DA915D_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(27)), PointFromId(860));
        UnitGroupAdd(lv_zerglings, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.0, 1.5), c_timeGame);
    }
    Wait(RandomFixed(1.0, 2.0), c_timeGame);
    libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, PointFromId(859), PointFromId(860));
    UnitGroupAdd(lv_zerglings, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(860), PointFromId(860));
    UnitGroupAdd(lv_zerglings, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, PointFromId(859), PointFromId(860));
    UnitGroupAdd(lv_zerglings, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(776)), c_orderQueueAddToEnd);
    Wait(13.0, c_timeGame);
    while (!((libNtve_gf_UnitGroupIsDead(lv_zerglings) == true))) {
        Wait(1.0, c_timeGame);
    }
    Wait(1.2, c_timeGame);
    if ((UnitIsAlive(UnitFromId(1467093865)) == true)) {
        TriggerExecute(gt_AUD109Completed, true, false);
    }
    else {
        TriggerExecute(gt_DefeatAUD109Dies, true, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109Begins_Init () {
    gt_AUD109Begins = TriggerCreate("gt_AUD109Begins_Func");
    TriggerAddEventUnitRegion(gt_AUD109Begins, null, RegionFromId(6), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 109 Completed
//--------------------------------------------------------------------------------------------------
bool gt_AUD109Completed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoAE102EFD_g;
    int autoAE102EFD_u;
    unit autoAE102EFD_var;

    // Conditions
    if (testConds) {
        if (!((gv_aUD24Section == 0))) {
            return false;
        }

        if (!((gv_connellyApartmentsSectionActive == 3))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aUD24Section = 1;
    ObjectiveDestroy(gv_aUD109);
    ObjectiveSetState(gv_aUD109Protect, c_objectiveStateCompleted);
    TriggerEnable(gt_ParkEscapeZergling6, true);
    TriggerEnable(gt_DefeatAUD109Dies, false);
    TriggerEnable(gt_ParkEscapeZergling1, false);
    TriggerEnable(gt_ParkEscapeZergling2, false);
    TriggerEnable(gt_ParkEscapeZergling3, false);
    TriggerEnable(gt_ParkEscapeZergling4, false);
    TriggerEnable(gt_ParkEscapeZergling5, false);
    TriggerEnable(gt_ParkEscapeZergling6, false);
    Wait(1.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/538F4CC9"));
    UnitAbilityAdd(gv_myraDavis, "MyraDavisHealingPatch");
    TriggerExecute(gt_TipHealingPatch, true, false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("InfestedHeal2", 0), true);
    Wait(1.4, c_timeGame);
    UnitSetOwner(UnitFromId(436823428), gv_pLAYER_03_CIVILIANS, false);
    UnitSetOwner(UnitFromId(1467093865), gv_pLAYER_03_CIVILIANS, false);
    Wait(0.2, c_timeGame);
    UnitGroupIssueOrder(UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(28), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2117986310)), c_orderQueueReplace);
    Wait(3.0, c_timeGame);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("InfestedHeal2", 0), false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00044", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_AUD24HydraSpawns, true, false);
    ObjectiveCreate(StringExternal("Param/Value/37A71C36"), StringExternal("Param/Value/BB158B3C"), c_objectiveStateActive, true);
    gv_aUD24 = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD24, PlayerGroupAll(), true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(892), 2.0, -1, 10.0, true);
    CameraLockInput(gv_pLAYER_01_USER, false);
    RegionPlayableMapSet(RegionFromId(142));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    MinimapPing(PlayerGroupAll(), PointFromId(861), 2.0, Color(100.00, 100.00, 0.00));
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingObjective", PointFromId(861), ColorWithAlpha(50.20, 100.00, 0.00, 0.00), 999.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/7EA6F7AD"));
    autoAE102EFD_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(32), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoAE102EFD_u = UnitGroupCount(autoAE102EFD_g, c_unitCountAll);
    for (;; autoAE102EFD_u -= 1) {
        autoAE102EFD_var = UnitGroupUnitFromEnd(autoAE102EFD_g, autoAE102EFD_u);
        if (autoAE102EFD_var == null) { break; }
        libNtve_gf_PauseUnit(autoAE102EFD_var, false);
        libNtve_gf_ShowHideUnit(autoAE102EFD_var, true);
    }
    gv_aUD24Ping = PingLastCreated();
    TriggerEnable(gt_AUD24HoldoutStart, true);
    TriggerEnable(gt_ArtifactSurplus, true);
    libNtve_gf_ShowHideUnit(UnitFromId(666733651), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1518130534), true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2Part2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00045", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD109Completed_Init () {
    gt_AUD109Completed = TriggerCreate("gt_AUD109Completed_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Hydra Spawns
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HydraSpawns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(lib1926661B_gf_DifficultyValueInteger(0, 1), "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(157)), libNtve_gf_PointFacingAngle(PointFromId(776), 270.0));
    UnitGroupAdd(gv_aUD24HydraGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 50.0);
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(158)), libNtve_gf_PointFacingAngle(PointFromId(776), 270.0));
    UnitGroupAdd(gv_aUD24HydraGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 50.0);
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    libNtve_gf_UnitCreateFacingPoint(lib1926661B_gf_DifficultyValueInteger(0, 1), "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(157)), libNtve_gf_PointFacingAngle(PointFromId(776), 270.0));
    UnitGroupAdd(gv_aUD24HydraGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 40.0);
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(159)), libNtve_gf_PointFacingAngle(PointFromId(776), 270.0));
    UnitGroupAdd(gv_aUD24HydraGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 50.0);
    UnitBehaviorAdd(UnitLastCreated(), "ColonistWander", gv_myraDavis, 1);
    libNtve_gf_UnitCreateFacingPoint(lib1926661B_gf_DifficultyValueInteger(0, 1), "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(157)), libNtve_gf_PointFacingAngle(PointFromId(776), 270.0));
    UnitGroupAdd(gv_aUD24HydraGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 50.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HydraSpawns_Init () {
    gt_AUD24HydraSpawns = TriggerCreate("gt_AUD24HydraSpawns_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Blockade Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_AUD24BlockadeTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoD8C3AB62_n = 6;
    int autoD8C3AB62_i;
    const int autoD7963B39_n = 3;
    int autoD7963B39_i;
    unitgroup auto2ABACFDF_g;
    int auto2ABACFDF_u;
    unit auto2ABACFDF_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aUD24Blockade = 1;
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserArrives", 0), c_maxPlayers, PlayerGroupAll(), 130.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(150)));
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceCruiserSirenLights", UnitLastCreated(), 1);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 4.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(44871038)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_MakeUnitFacePoint(UnitLastCreated(), libNtve_gf_PointFacingAngle(PointFromId(1542519776), 270.0), 0.0);
    Wait(1.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(150)));
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceCruiserSirenLights", UnitLastCreated(), 1);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 4.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2112526710)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    Wait(2.0, c_timeGame);
    for (autoD8C3AB62_i = 1; autoD8C3AB62_i <= autoD8C3AB62_n; autoD8C3AB62_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(150)));
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
        UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
        UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(149))), c_orderQueueReplace);
    }
    for (autoD7963B39_i = 1; autoD7963B39_i <= autoD7963B39_n; autoD7963B39_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(150)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(149))), c_orderQueueReplace);
    }
    TriggerExecute(gt_AUD24BlockadeZergSpawn, true, false);
    Wait(10.0, c_timeGame);
    auto2ABACFDF_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_02_POLICE, RegionFromId(149), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2ABACFDF_u = UnitGroupCount(auto2ABACFDF_g, c_unitCountAll);
    for (;; auto2ABACFDF_u -= 1) {
        auto2ABACFDF_var = UnitGroupUnitFromEnd(auto2ABACFDF_g, auto2ABACFDF_u);
        if (auto2ABACFDF_var == null) { break; }
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
        libNtve_gf_MakeUnitFacePoint(auto2ABACFDF_var, libNtve_gf_PointFacingAngle(PointFromId(1542519776), 270.0), 0.0);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(auto2ABACFDF_var), c_animNameDefault, "Ready", c_animFlagPlayForever, c_animTimeDefault);
    }
    Wait(15.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/C7FB2711"));
    MinimapPing(PlayerGroupAll(), PointFromId(861), 2.0, Color(100.00, 100.00, 0.00));
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24BlockadeTripwire_Init () {
    gt_AUD24BlockadeTripwire = TriggerCreate("gt_AUD24BlockadeTripwire_Func");
    TriggerAddEventUnitRegion(gt_AUD24BlockadeTripwire, null, RegionFromId(148), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Blockade Zerg Spawn
//--------------------------------------------------------------------------------------------------
bool gt_AUD24BlockadeZergSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto53187B90_n = 50;
    int auto53187B90_i;
    const int autoEE7D7B93_n = 50;
    int autoEE7D7B93_i;
    const int auto25CCB8AC_n = 50;
    int auto25CCB8AC_i;
    const int autoDF24571B_n = 15;
    int autoDF24571B_i;

    // Conditions
    if (testConds) {
        if (!((ObjectiveGetState(gv_aUD24) == c_objectiveStateActive))) {
            return false;
        }

        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((gv_aUD24Blockade == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto53187B90_i = 1; auto53187B90_i <= auto53187B90_n; auto53187B90_i += 1) {
        UnitCreate(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(152)), 270.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(151))), c_orderQueueReplace);
        Wait(0.35, c_timeGame);
    }
    for (autoEE7D7B93_i = 1; autoEE7D7B93_i <= autoEE7D7B93_n; autoEE7D7B93_i += 1) {
        UnitCreate(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(152)), 270.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(151))), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    Wait(2.0, c_timeGame);
    for (auto25CCB8AC_i = 1; auto25CCB8AC_i <= auto25CCB8AC_n; auto25CCB8AC_i += 1) {
        UnitCreate(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(637153350), 270.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(151))), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    for (autoDF24571B_i = 1; autoDF24571B_i <= autoDF24571B_n; autoDF24571B_i += 1) {
        UnitCreate(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(637153350), 270.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(151))), c_orderQueueReplace);
        Wait(2.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24BlockadeZergSpawn_Init () {
    gt_AUD24BlockadeZergSpawn = TriggerCreate("gt_AUD24BlockadeZergSpawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Blockade Zerg Despawn
//--------------------------------------------------------------------------------------------------
bool gt_AUD24BlockadeZergDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD24Blockade == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_ROACHES))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24BlockadeZergDespawn_Init () {
    gt_AUD24BlockadeZergDespawn = TriggerCreate("gt_AUD24BlockadeZergDespawn_Func");
    TriggerAddEventUnitRegion(gt_AUD24BlockadeZergDespawn, null, RegionFromId(151), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Unburrow1
//--------------------------------------------------------------------------------------------------
bool gt_AUD24Unburrow1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto26538ABE_g;
    int auto26538ABE_u;
    unit auto26538ABE_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto26538ABE_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(153), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto26538ABE_u = UnitGroupCount(auto26538ABE_g, c_unitCountAll);
    for (;; auto26538ABE_u -= 1) {
        auto26538ABE_var = UnitGroupUnitFromEnd(auto26538ABE_g, auto26538ABE_u);
        if (auto26538ABE_var == null) { break; }
        UnitSetOwner(auto26538ABE_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto26538ABE_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(auto26538ABE_var, "ColonistWander", gv_myraDavis, 1);
        Wait(1.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24Unburrow1_Init () {
    gt_AUD24Unburrow1 = TriggerCreate("gt_AUD24Unburrow1_Func");
    TriggerAddEventUnitRegion(gt_AUD24Unburrow1, null, RegionFromId(153), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Unburrow2
//--------------------------------------------------------------------------------------------------
bool gt_AUD24Unburrow2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF862D982_g;
    int autoF862D982_u;
    unit autoF862D982_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    autoF862D982_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(153), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF862D982_u = UnitGroupCount(autoF862D982_g, c_unitCountAll);
    for (;; autoF862D982_u -= 1) {
        autoF862D982_var = UnitGroupUnitFromEnd(autoF862D982_g, autoF862D982_u);
        if (autoF862D982_var == null) { break; }
        UnitSetOwner(autoF862D982_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(autoF862D982_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(autoF862D982_var, "ColonistWander", gv_myraDavis, 1);
        Wait(1.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24Unburrow2_Init () {
    gt_AUD24Unburrow2 = TriggerCreate("gt_AUD24Unburrow2_Func");
    TriggerAddEventUnitRegion(gt_AUD24Unburrow2, null, RegionFromId(154), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Cruiser Explosion SFX
//--------------------------------------------------------------------------------------------------
bool gt_AUD24CruiserExplosionSFX_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventUnit() == UnitFromId(24966858)) || (EventUnit() == UnitFromId(1461898363)) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24CruiserExplosionSFX_Init () {
    gt_AUD24CruiserExplosionSFX = TriggerCreate("gt_AUD24CruiserExplosionSFX_Func");
    TriggerAddEventUnitDied(gt_AUD24CruiserExplosionSFX, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Police Announcement Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_AUD24PoliceAnnouncementTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto2B258E6E_g;
    int auto2B258E6E_u;
    unit auto2B258E6E_var;
    unitgroup autoAD53EC22_g;
    int autoAD53EC22_u;
    unit autoAD53EC22_var;
    int auto8E130FD2_n;
    int auto8E130FD2_i;
    unitgroup auto5A4D53EF_g;
    int auto5A4D53EF_u;
    unit auto5A4D53EF_var;
    int autoBD0CC09C_n;
    int autoBD0CC09C_i;
    int autoD28915A6_n;
    int autoD28915A6_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto2B258E6E_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(156), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2B258E6E_u = UnitGroupCount(auto2B258E6E_g, c_unitCountAll);
    for (;; auto2B258E6E_u -= 1) {
        auto2B258E6E_var = UnitGroupUnitFromEnd(auto2B258E6E_g, auto2B258E6E_u);
        if (auto2B258E6E_var == null) { break; }
        UnitRemove(auto2B258E6E_var);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(1064269228), true);
    UnitGroupAdd(gv_aUD24AnnouncerGroup, UnitFromId(1064269228));
    UnitIssueOrder(UnitFromId(1064269228), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1944624831)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1064269228), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_ShowHideUnit(UnitFromId(1543826802), true);
    UnitGroupAdd(gv_aUD24AnnouncerGroup, UnitFromId(1543826802));
    UnitIssueOrder(UnitFromId(1543826802), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1942220997)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1543826802), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_ShowHideUnit(UnitFromId(973785616), true);
    UnitGroupAdd(gv_aUD24AnnouncerGroup, UnitFromId(973785616));
    UnitIssueOrder(UnitFromId(973785616), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(371320189)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(973785616), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_ShowHideUnit(UnitFromId(2062272623), true);
    UnitBehaviorAdd(UnitFromId(2062272623), "UPLPoliceCruiserSirenLights", gv_introCine_DavisCruiser, 1);
    libNtve_gf_ShowHideUnit(UnitFromId(789430765), true);
    UnitGroupAdd(gv_aUD24AnnouncerGroup, UnitFromId(789430765));
    UnitIssueOrder(UnitFromId(789430765), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(286977872)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(789430765), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_MakeUnitFacePoint(UnitFromId(789430765), libNtve_gf_PointFacingAngle(PointFromId(761), 270.0), 0.0);
    libNtve_gf_ShowHideUnit(UnitFromId(2062272623), true);
    UnitGroupAdd(gv_aUD24AnnouncerGroup, UnitFromId(2062272623));
    UnitIssueOrder(UnitFromId(2062272623), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(567437526)), c_orderQueueReplace);
    autoAD53EC22_g = gv_aUD24AnnouncerGroup;
    autoAD53EC22_u = UnitGroupCount(autoAD53EC22_g, c_unitCountAll);
    for (;; autoAD53EC22_u -= 1) {
        autoAD53EC22_var = UnitGroupUnitFromEnd(autoAD53EC22_g, autoAD53EC22_u);
        if (autoAD53EC22_var == null) { break; }
        UnitSetPropertyFixed(autoAD53EC22_var, c_unitPropBaseMovementSpeed, 0.5);
        ActorSend(libNtve_gf_MainActorofUnit(autoAD53EC22_var), "AnimGroupApply Slow");
    }
    SoundPlayForPlayer(SoundLink("M2AUD24PoliceAnnouncement", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(10.0, c_timeGame);
    auto8E130FD2_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto8E130FD2_i = 1; auto8E130FD2_i <= auto8E130FD2_n; auto8E130FD2_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(161)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(1543826802)), c_orderQueueReplace);
        Wait(0.4, c_timeGame);
    }
    auto5A4D53EF_g = gv_aUD24AnnouncerGroup;
    auto5A4D53EF_u = UnitGroupCount(auto5A4D53EF_g, c_unitCountAll);
    for (;; auto5A4D53EF_u -= 1) {
        auto5A4D53EF_var = UnitGroupUnitFromEnd(auto5A4D53EF_g, auto5A4D53EF_u);
        if (auto5A4D53EF_var == null) { break; }
        UnitSetPropertyFixed(auto5A4D53EF_var, c_unitPropBaseMovementSpeed, 2.5);
        ActorSend(libNtve_gf_MainActorofUnit(auto5A4D53EF_var), "AnimGroupRemove Slow");
    }
    Wait(5.0, c_timeGame);
    UnitCreate(1, "NewsHelicopter", 0, gv_pLAYER_03_CIVILIANS, PointFromId(604996578), 270.0);
    gv_aUD24Copter = UnitLastCreated();
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 4.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropHeight, 10.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1383908113)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(674292937)), c_orderQueueAddToEnd);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicNewsCopterFlyby", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("M2AUD24PoliceAnnouncement", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(7.0, c_timeGame);
    autoBD0CC09C_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (autoBD0CC09C_i = 1; autoBD0CC09C_i <= autoBD0CC09C_n; autoBD0CC09C_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(161)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(1543826802)), c_orderQueueReplace);
        Wait(0.4, c_timeGame);
    }
    Wait(7.0, c_timeGame);
    autoD28915A6_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (autoD28915A6_i = 1; autoD28915A6_i <= autoD28915A6_n; autoD28915A6_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(161)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(2062272623)), c_orderQueueReplace);
        Wait(0.4, c_timeGame);
    }
    Wait(30.0, c_timeGame);
    UnitRemove(gv_aUD24Copter);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24PoliceAnnouncementTripwire_Init () {
    gt_AUD24PoliceAnnouncementTripwire = TriggerCreate("gt_AUD24PoliceAnnouncementTripwire_Func");
    TriggerAddEventUnitRegion(gt_AUD24PoliceAnnouncementTripwire, null, RegionFromId(155), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Holdout Setup
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HoldoutSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitBehaviorRemove(UnitFromId(2015969457), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitFromId(2015969457), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(2015969457), "UPLPoliceOfficerPistol", UnitFromId(2015969457), 1);
    UnitBehaviorRemove(UnitFromId(739985469), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitFromId(739985469), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(739985469), "UPLPoliceOfficerPistol", UnitFromId(2015969457), 1);
    UnitBehaviorRemove(UnitFromId(66755127), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitFromId(66755127), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(66755127), "UPLPoliceOfficerPistol", UnitFromId(66755127), 1);
    UnitBehaviorRemove(UnitFromId(1467576407), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitFromId(1467576407), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitFromId(1467576407), "UPLPoliceOfficerPistol", UnitFromId(1467576407), 1);
    UnitSetState(UnitFromId(1461898363), c_unitStateMoveSuppressed, false);
    UnitSetState(UnitFromId(24966858), c_unitStateMoveSuppressed, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HoldoutSetup_Init () {
    gt_AUD24HoldoutSetup = TriggerCreate("gt_AUD24HoldoutSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Holdout Start
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HoldoutStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto6892AEB9_g;
    int auto6892AEB9_u;
    unit auto6892AEB9_var;
    unitgroup autoCDD12303_g;
    int autoCDD12303_u;
    unit autoCDD12303_var;
    unitgroup auto71210E36_g;
    int auto71210E36_u;
    unit auto71210E36_var;
    int autoE6AA26C0_n;
    int autoE6AA26C0_i;
    int auto7AF9BA50_n;
    int auto7AF9BA50_i;
    int auto973B3EFB_n;
    int auto973B3EFB_i;
    const int auto61B2A3D8_n = 2;
    int auto61B2A3D8_i;
    const int autoFB89D0AD_n = 15;
    int autoFB89D0AD_i;
    const int autoC8FC7E3F_n = 2;
    int autoC8FC7E3F_i;
    const int auto96FB6D0D_n = 12;
    int auto96FB6D0D_i;
    const int auto8E0877D2_n = 1;
    int auto8E0877D2_i;
    int auto3D51433B_n;
    int auto3D51433B_i;
    int auto71B558CA_n;
    int auto71B558CA_i;
    int auto45E24B92_n;
    int auto45E24B92_i;
    int auto9523043C_n;
    int auto9523043C_i;
    int auto1F03A09A_n;
    int auto1F03A09A_i;
    int auto11CEEE71_n;
    int auto11CEEE71_i;
    int autoF9970E0A_n;
    int autoF9970E0A_i;
    int autoDA09F1D3_n;
    int autoDA09F1D3_i;
    int autoA3A6D5DE_n;
    int autoA3A6D5DE_i;
    int auto7C59F751_n;
    int auto7C59F751_i;
    int autoC8E3EDB7_n;
    int autoC8E3EDB7_i;
    int auto7200B6B2_n;
    int auto7200B6B2_i;
    int auto086BA893_n;
    int auto086BA893_i;
    int auto78803470_n;
    int auto78803470_i;
    int autoE0BEA430_n;
    int autoE0BEA430_i;
    int autoC55A59A7_n;
    int autoC55A59A7_i;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_myraDavis))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aUD24Blockade = 0;
    auto6892AEB9_g = gv_aUD24AnnouncerGroup;
    auto6892AEB9_u = UnitGroupCount(auto6892AEB9_g, c_unitCountAll);
    for (;; auto6892AEB9_u -= 1) {
        auto6892AEB9_var = UnitGroupUnitFromEnd(auto6892AEB9_g, auto6892AEB9_u);
        if (auto6892AEB9_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(auto6892AEB9_var), "AnimGroupApply Stand");
    }
    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveDestroy(gv_aUD109Protect);
    ObjectiveSetState(gv_aUD24, c_objectiveStateCompleted);
    PingDestroy(gv_aUD24Ping);
    UnitSetState(EventUnit(), c_unitStateSelectable, false);
    UnitClearSelection(1);
    UnitKill(UnitFromId(1518130534));
    CinematicFade(false, 2.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    UnitSetPosition(EventUnit(), PointFromId(778), false);
    UnitGroupAdd(gv_aUD24PlayerGroup, EventUnit());
    autoCDD12303_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCDD12303_u = UnitGroupCount(autoCDD12303_g, c_unitCountAll);
    for (;; autoCDD12303_u -= 1) {
        autoCDD12303_var = UnitGroupUnitFromEnd(autoCDD12303_g, autoCDD12303_u);
        if (autoCDD12303_var == null) { break; }
        UnitSetPosition(autoCDD12303_var, PointFromId(778), false);
        UnitSetPosition(gv_davisCruiser, PointFromId(60690959), false);
        UnitGroupAdd(gv_aUD24PlayerGroup, autoCDD12303_var);
        UnitIssueOrder(autoCDD12303_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(921)), c_orderQueueReplace);
        UnitSetPropertyFixed(autoCDD12303_var, c_unitPropLifeMax, 75.0);
        UnitSetPropertyFixed(autoCDD12303_var, c_unitPropLife, 75.0);
    }
    RegionPlayableMapSet(RegionFromId(163));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(895), 0.0, -1, 10.0, true);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationImmediate);
    VisRevealerCreate(1, RegionFromId(115));
    CinematicFade(true, 5.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(1.1, c_timeGame);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(894), 6.0, -1, 10.0, true);
    UnitSetState(EventUnit(), c_unitStateSelectable, true);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(921)), c_orderQueueReplace);
    Wait(1.0, c_timeGame);
    CameraLockInput(gv_pLAYER_01_USER, true);
    Wait(1.0, c_timeGame);
    auto71210E36_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(32), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto71210E36_u = UnitGroupCount(auto71210E36_g, c_unitCountAll);
    for (;; auto71210E36_u -= 1) {
        auto71210E36_var = UnitGroupUnitFromEnd(auto71210E36_g, auto71210E36_u);
        if (auto71210E36_var == null) { break; }
        libNtve_gf_MakeUnitFacePoint(UnitLastCreated(), RegionGetCenter(RegionFromId(31)), 0.7);
        UnitGroupAdd(gv_aUD24HoldoutGroup, auto71210E36_var);
    }
    ActorSend(ActorFromDoodad(DoodadFromId(898)), "AnimPlay StandWorkGold Stand,Work,Start PlayForever,NonLooping");
    SoundPlayForPlayer(SoundLink("Doodad_SecurityGateDiagonalOpen", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(2.8, c_timeGame);
    SoundStop(SoundLastPlayed(), false);
    SoundPlayForPlayer(SoundLink("Doodad_SecurityGateDiagonalImpact", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    Wait(0.5, c_timeGame);
    Wait(1.2, c_timeGame);
    autoE6AA26C0_n = lib1926661B_gf_DifficultyValueInteger(6, 12);
    for (autoE6AA26C0_i = 1; autoE6AA26C0_i <= autoE6AA26C0_n; autoE6AA26C0_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 1.0), c_timeGame);
    }
    Wait(6.0, c_timeGame);
    auto7AF9BA50_n = lib1926661B_gf_DifficultyValueInteger(10, 21);
    for (auto7AF9BA50_i = 1; auto7AF9BA50_i <= auto7AF9BA50_n; auto7AF9BA50_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 1.0), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    auto973B3EFB_n = lib1926661B_gf_DifficultyValueInteger(12, 25);
    for (auto973B3EFB_i = 1; auto973B3EFB_i <= auto973B3EFB_n; auto973B3EFB_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.6), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    for (auto61B2A3D8_i = 1; auto61B2A3D8_i <= auto61B2A3D8_n; auto61B2A3D8_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
    }
    for (autoFB89D0AD_i = 1; autoFB89D0AD_i <= autoFB89D0AD_n; autoFB89D0AD_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.6, 1.2), c_timeGame);
    }
    Wait(8.0, c_timeGame);
    for (autoC8FC7E3F_i = 1; autoC8FC7E3F_i <= autoC8FC7E3F_n; autoC8FC7E3F_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
    }
    for (auto96FB6D0D_i = 1; auto96FB6D0D_i <= auto96FB6D0D_n; auto96FB6D0D_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.15), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    for (auto8E0877D2_i = 1; auto8E0877D2_i <= auto8E0877D2_n; auto8E0877D2_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
    }
    Wait(7.0, c_timeGame);
    auto3D51433B_n = lib1926661B_gf_DifficultyValueInteger(7, 15);
    for (auto3D51433B_i = 1; auto3D51433B_i <= auto3D51433B_n; auto3D51433B_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.15), c_timeGame);
    }
    Wait(1.7, c_timeGame);
    auto71B558CA_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (auto71B558CA_i = 1; auto71B558CA_i <= auto71B558CA_n; auto71B558CA_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.15), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    auto45E24B92_n = lib1926661B_gf_DifficultyValueInteger(8, 16);
    for (auto45E24B92_i = 1; auto45E24B92_i <= auto45E24B92_n; auto45E24B92_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.15), c_timeGame);
    }
    Wait(RandomFixed(1.0, 1.1), c_timeGame);
    auto9523043C_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto9523043C_i = 1; auto9523043C_i <= auto9523043C_n; auto9523043C_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.0, 1.1), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    auto1F03A09A_n = lib1926661B_gf_DifficultyValueInteger(6, 12);
    for (auto1F03A09A_i = 1; auto1F03A09A_i <= auto1F03A09A_n; auto1F03A09A_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.15), c_timeGame);
    }
    Wait(6.0, c_timeGame);
    auto11CEEE71_n = lib1926661B_gf_DifficultyValueInteger(7, 15);
    for (auto11CEEE71_i = 1; auto11CEEE71_i <= auto11CEEE71_n; auto11CEEE71_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.5), c_timeGame);
    }
    Wait(6.0, c_timeGame);
    autoF9970E0A_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (autoF9970E0A_i = 1; autoF9970E0A_i <= autoF9970E0A_n; autoF9970E0A_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.0, 1.1), c_timeGame);
    }
    Wait(8.0, c_timeGame);
    autoDA09F1D3_n = lib1926661B_gf_DifficultyValueInteger(6, 12);
    for (autoDA09F1D3_i = 1; autoDA09F1D3_i <= autoDA09F1D3_n; autoDA09F1D3_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.5), c_timeGame);
    }
    Wait(3.0, c_timeGame);
    autoA3A6D5DE_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (autoA3A6D5DE_i = 1; autoA3A6D5DE_i <= autoA3A6D5DE_n; autoA3A6D5DE_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
    }
    Wait(3.0, c_timeGame);
    auto7C59F751_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto7C59F751_i = 1; auto7C59F751_i <= auto7C59F751_n; auto7C59F751_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity");
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "SetOpacity 1.000000 1.000000");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.0, 1.1), c_timeGame);
    }
    Wait(5.0, c_timeGame);
    autoC8E3EDB7_n = lib1926661B_gf_DifficultyValueInteger(6, 13);
    for (autoC8E3EDB7_i = 1; autoC8E3EDB7_i <= autoC8E3EDB7_n; autoC8E3EDB7_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.5), c_timeGame);
    }
    Wait(1.5, c_timeGame);
    auto7200B6B2_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto7200B6B2_i = 1; auto7200B6B2_i <= auto7200B6B2_n; auto7200B6B2_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
    }
    Wait(3.0, c_timeGame);
    auto086BA893_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (auto086BA893_i = 1; auto086BA893_i <= auto086BA893_n; auto086BA893_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.5), c_timeGame);
    }
    Wait(2.0, c_timeGame);
    auto78803470_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto78803470_i = 1; auto78803470_i <= auto78803470_n; auto78803470_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.5), c_timeGame);
    }
    autoE0BEA430_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (autoE0BEA430_i = 1; autoE0BEA430_i <= autoE0BEA430_n; autoE0BEA430_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.5), c_timeGame);
    }
    Wait(3.0, c_timeGame);
    autoC55A59A7_n = lib1926661B_gf_DifficultyValueInteger(15, 40);
    for (autoC55A59A7_i = 1; autoC55A59A7_i <= autoC55A59A7_n; autoC55A59A7_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)), PointFromId(765));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(926)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.0, 0.25), c_timeGame);
    }
    while (!((libNtve_gf_UnitGroupIsDead(UnitGroup(null, 4, RegionFromId(33), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0)) == true) && (UnitIsAlive(gv_myraDavis) == true))) {
        Wait(1.0, c_timeGame);
    }
    Wait(0.8, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(938), 2.0, -1, 10.0, true);
    UnitIssueOrder(UnitFromId(1782391289), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1334911072), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2054302608), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(66755127), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1467576407), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(217388319), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(739985469), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2015969457), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(24))), c_orderQueueReplace);
    VisRevealerDestroy(VisRevealerLastCreated());
    Wait(0.5, c_timeGame);
    CameraLockInput(1, false);
    TriggerExecute(gt_AUD24HoldoutVictory, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HoldoutStart_Init () {
    gt_AUD24HoldoutStart = TriggerCreate("gt_AUD24HoldoutStart_Func");
    TriggerAddEventUnitRegion(gt_AUD24HoldoutStart, null, RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Holdout Police Fall Back
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HoldoutPoliceFallBack_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto1B4C5464_g;
    int auto1B4C5464_u;
    unit auto1B4C5464_var;

    // Conditions
    if (testConds) {
        if (!((gv_aUD24Section == 1))) {
            return false;
        }

        if (!((UnitGroupCount(UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(32), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) < 7))) {
            return false;
        }

        if (!((UnitGroupHasUnit(gv_aUD24HoldoutGroup, EventUnit()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto1B4C5464_g = gv_aUD24HoldoutGroup;
    auto1B4C5464_u = UnitGroupCount(auto1B4C5464_g, c_unitCountAll);
    for (;; auto1B4C5464_u -= 1) {
        auto1B4C5464_var = UnitGroupUnitFromEnd(auto1B4C5464_g, auto1B4C5464_u);
        if (auto1B4C5464_var == null) { break; }
        UnitIssueOrder(auto1B4C5464_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(288))), c_orderQueueReplace);
    }
    TriggerExecute(gt_AUD24HoldoutBackupSpawns, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HoldoutPoliceFallBack_Init () {
    gt_AUD24HoldoutPoliceFallBack = TriggerCreate("gt_AUD24HoldoutPoliceFallBack_Func");
    TriggerAddEventUnitDied(gt_AUD24HoldoutPoliceFallBack, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Holdout Backup Spawns
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HoldoutBackupSpawns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto2D593CC6_n = 10;
    int auto2D593CC6_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(931), 2.2, -1, 10.0, true);
    RegionPlayableMapSet(RegionFromId(164));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    SoundPlayForPlayer(SoundLink("M2AlertPositive", 0), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/699CC171"));
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00046", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "SwatVan", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(933));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    for (auto2D593CC6_i = 1; auto2D593CC6_i <= auto2D593CC6_n; auto2D593CC6_i += 1) {
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1509997840)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
        Wait(2.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HoldoutBackupSpawns_Init () {
    gt_AUD24HoldoutBackupSpawns = TriggerCreate("gt_AUD24HoldoutBackupSpawns_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Holdout Backup Deploys
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HoldoutBackupDeploys_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto524BEE9B_n = 5;
    int auto524BEE9B_i;
    int autoA7F056FE_n;
    int autoA7F056FE_i;
    int auto0DAF8683_n;
    int auto0DAF8683_i;

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "SwatVan"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2SwatVanAirBrakes", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    for (auto524BEE9B_i = 1; auto524BEE9B_i <= auto524BEE9B_n; auto524BEE9B_i += 1) {
        SoundPlayForPlayer(SoundLink("Condor_Unload_Infantry", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1509997840));
        UnitBehaviorRemove(UnitLastCreated(), "UPLRiotOfficerShotgun", 1);
        UnitBehaviorAdd(UnitLastCreated(), "UPLRiotOfficerRifle", UnitLastCreated(), 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(934)), c_orderQueueReplace);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 90.0);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 90.0);
        Wait(1.0, c_timeGame);
        SoundPlayForPlayer(SoundLink("Condor_Unload_Infantry", 1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1509997840));
        UnitBehaviorRemove(UnitLastCreated(), "UPLRiotOfficerShotgun", 1);
        UnitBehaviorAdd(UnitLastCreated(), "UPLRiotOfficerRifle", UnitLastCreated(), 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(935)), c_orderQueueReplace);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 90.0);
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 90.0);
        Wait(1.0, c_timeGame);
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00047", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(4.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00048", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(41.0, c_timeGame);
    autoA7F056FE_n = lib1926661B_gf_DifficultyValueInteger(5, 21);
    for (autoA7F056FE_i = 1; autoA7F056FE_i <= autoA7F056FE_n; autoA7F056FE_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(165)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(861)), c_orderQueueReplace);
        Wait(0.35, c_timeGame);
    }
    Wait(35.0, c_timeGame);
    TriggerExecute(gt_AUD24KillCruiser, true, false);
    auto0DAF8683_n = lib1926661B_gf_DifficultyValueInteger(4, 11);
    for (auto0DAF8683_i = 1; auto0DAF8683_i <= auto0DAF8683_n; auto0DAF8683_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(165)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(861)), c_orderQueueReplace);
        Wait(0.35, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HoldoutBackupDeploys_Init () {
    gt_AUD24HoldoutBackupDeploys = TriggerCreate("gt_AUD24HoldoutBackupDeploys_Func");
    TriggerAddEventUnitRegion(gt_AUD24HoldoutBackupDeploys, null, RegionFromId(162), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Kill Cruiser
//--------------------------------------------------------------------------------------------------
bool gt_AUD24KillCruiser_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitIsAlive(gv_davisCruiser) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitKill(gv_davisCruiser);
    TriggerEnable(gt_DavisCruiserStunned, false);
    TriggerEnable(gt_DavisCruiserActive, false);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/AC4804C2"));
    Wait(8.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24KillCruiser_Init () {
    gt_AUD24KillCruiser = TriggerCreate("gt_AUD24KillCruiser_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Davis Cruiser Dies
//--------------------------------------------------------------------------------------------------
bool gt_AUD24DavisCruiserDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_davisCruiser == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitKill(gv_davisCruiser);
    TriggerEnable(gt_DavisCruiserStunned, false);
    TriggerEnable(gt_DavisCruiserActive, false);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/2F7A929E"));
    Wait(8.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24DavisCruiserDies_Init () {
    gt_AUD24DavisCruiserDies = TriggerCreate("gt_AUD24DavisCruiserDies_Func");
    TriggerAddEventUnitDied(gt_AUD24DavisCruiserDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 24 Holdout Victory
//--------------------------------------------------------------------------------------------------
bool gt_AUD24HoldoutVictory_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv__01;
    unitgroup lv_rescued;
    unitgroup lv_wAITKILL;
    unit[6] lv_rescue;
    unit lv_lastCreatedCiv;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rescued = UnitGroupEmpty();
    lv_wAITKILL = UnitGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aUD24Section = 0;
    TriggerEnable(gt_AUD24HoldoutPoliceFallBack, false);
    TriggerEnable(gt_AUD24HoldoutBackupSpawns, false);
    TriggerEnable(gt_AUD24HoldoutBackupDeploys, false);
    Wait(2.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/06744687"));
    UnitAbilityAdd(gv_myraDavis, "MyraDavisFlashBangGrenade");
    TriggerExecute(gt_TipFlashBangGrenade, true, false);
    Wait(4.0, c_timeGame);
    TriggerExecute(gt_AUD499SectionStart, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD24HoldoutVictory_Init () {
    gt_AUD24HoldoutVictory = TriggerCreate("gt_AUD24HoldoutVictory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone1
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian1 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing1);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone1_Init () {
    gt_AUD499CivilianGone1 = TriggerCreate("gt_AUD499CivilianGone1_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone1, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone2
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian2 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing2);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone2_Init () {
    gt_AUD499CivilianGone2 = TriggerCreate("gt_AUD499CivilianGone2_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone3
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian3 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing3);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone3_Init () {
    gt_AUD499CivilianGone3 = TriggerCreate("gt_AUD499CivilianGone3_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone4
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian4 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing4);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone4_Init () {
    gt_AUD499CivilianGone4 = TriggerCreate("gt_AUD499CivilianGone4_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone4, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone5
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian5 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing5);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone5_Init () {
    gt_AUD499CivilianGone5 = TriggerCreate("gt_AUD499CivilianGone5_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone5, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone6
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian6 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing6);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone6_Init () {
    gt_AUD499CivilianGone6 = TriggerCreate("gt_AUD499CivilianGone6_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone6, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone7
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian7 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing7);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone7_Init () {
    gt_AUD499CivilianGone7 = TriggerCreate("gt_AUD499CivilianGone7_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone7, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone8
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian8 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing8);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone8_Init () {
    gt_AUD499CivilianGone8 = TriggerCreate("gt_AUD499CivilianGone8_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone8, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone9
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone9_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian9 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing9);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone9_Init () {
    gt_AUD499CivilianGone9 = TriggerCreate("gt_AUD499CivilianGone9_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone9, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianGone10
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianGone10_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499Civilian10 == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_aUD499RescuePing10);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianGone10_Init () {
    gt_AUD499CivilianGone10 = TriggerCreate("gt_AUD499CivilianGone10_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianGone10, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianRuns1&10
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianRuns110_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    int auto5FD6297B_n;
    int auto5FD6297B_i;
    const int auto15354FB3_n = 4;
    int auto15354FB3_i;
    int autoFD85A79B_n;
    int autoFD85A79B_i;

    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((gv_aUD499CivilianTrigger == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(gv_aUD499Civilian1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    UnitIssueOrder(gv_aUD499Civilian10, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    auto5FD6297B_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto5FD6297B_i = 1; auto5FD6297B_i <= auto5FD6297B_n; auto5FD6297B_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(37)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(0.15, c_timeGame);
        Wait(0.3, c_timeGame);
    }
    for (auto15354FB3_i = 1; auto15354FB3_i <= auto15354FB3_n; auto15354FB3_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(51)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(0.15, c_timeGame);
    }
    autoFD85A79B_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (autoFD85A79B_i = 1; autoFD85A79B_i <= autoFD85A79B_n; autoFD85A79B_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(35)), 90.0);
        UnitGroupIssueOrder(lv_zz, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        UnitGroupAdd(lv_zz, UnitLastCreated());
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianRuns110_Init () {
    gt_AUD499CivilianRuns110 = TriggerCreate("gt_AUD499CivilianRuns110_Func");
    TriggerAddEventUnitRegion(gt_AUD499CivilianRuns110, null, RegionFromId(328), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianRuns9&8
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianRuns98_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    int autoFB7B8BD2_n;
    int autoFB7B8BD2_i;
    int auto29B84BB8_n;
    int auto29B84BB8_i;

    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((gv_aUD499CivilianTrigger == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian8, false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian9, false);
    UnitIssueOrder(gv_aUD499Civilian9, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    UnitIssueOrder(gv_aUD499Civilian8, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    autoFB7B8BD2_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (autoFB7B8BD2_i = 1; autoFB7B8BD2_i <= autoFB7B8BD2_n; autoFB7B8BD2_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(55)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1533325517)), c_orderQueueReplace);
        Wait(0.4, c_timeGame);
    }
    auto29B84BB8_n = lib1926661B_gf_DifficultyValueInteger(2, 4);
    for (auto29B84BB8_i = 1; auto29B84BB8_i <= auto29B84BB8_n; auto29B84BB8_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(55)), 90.0);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeash", UnitFromId(1982), 1);
        Wait(0.4, c_timeGame);
    }
    UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(55)), 22.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianRuns98_Init () {
    gt_AUD499CivilianRuns98 = TriggerCreate("gt_AUD499CivilianRuns98_Func");
    TriggerAddEventUnitRegion(gt_AUD499CivilianRuns98, null, RegionFromId(324), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianRuns6&7
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianRuns67_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    int auto4221083B_n;
    int auto4221083B_i;

    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((gv_aUD499CivilianTrigger == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian6, false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian7, false);
    UnitIssueOrder(gv_aUD499Civilian7, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    UnitIssueOrder(gv_aUD499Civilian6, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    auto4221083B_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto4221083B_i = 1; auto4221083B_i <= auto4221083B_n; auto4221083B_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(8)), 90.0);
        UnitGroupAdd(lv_zz, UnitLastCreated());
        Wait(1.0, c_timeGame);
        UnitGroupIssueOrder(lv_zz, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_aUD499Bomber)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianRuns67_Init () {
    gt_AUD499CivilianRuns67 = TriggerCreate("gt_AUD499CivilianRuns67_Func");
    TriggerAddEventUnitRegion(gt_AUD499CivilianRuns67, null, RegionFromId(327), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianRuns4&5
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianRuns45_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    int auto5B886212_n;
    int auto5B886212_i;

    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((gv_aUD499CivilianTrigger == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(gv_aUD499Civilian5, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    UnitIssueOrder(gv_aUD499Civilian4, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    auto5B886212_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (auto5B886212_i = 1; auto5B886212_i <= auto5B886212_n; auto5B886212_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(35)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        Wait(0.4, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianRuns45_Init () {
    gt_AUD499CivilianRuns45 = TriggerCreate("gt_AUD499CivilianRuns45_Func");
    TriggerAddEventUnitRegion(gt_AUD499CivilianRuns45, null, RegionFromId(326), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 CivilianRuns2&3
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianRuns23_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    int auto67041F33_n;
    int auto67041F33_i;

    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((gv_aUD499CivilianTrigger == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(gv_aUD499Civilian3, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    UnitIssueOrder(gv_aUD499Civilian2, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueReplace);
    auto67041F33_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (auto67041F33_i = 1; auto67041F33_i <= auto67041F33_n; auto67041F33_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(8)), 90.0);
        UnitGroupAdd(lv_zz, UnitLastCreated());
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianRuns23_Init () {
    gt_AUD499CivilianRuns23 = TriggerCreate("gt_AUD499CivilianRuns23_Func");
    TriggerAddEventUnitRegion(gt_AUD499CivilianRuns23, null, RegionFromId(325), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian1
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(2046354276));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
    gv_aUD499Civilian1 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian1, c_unitStateFidget, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_UnitInfoSelect", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing1 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/1E72D8DB"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian1_Init () {
    gt_AUD499RescueCivilian1 = TriggerCreate("gt_AUD499RescueCivilian1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian2
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, PointFromId(748));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,A Scared,A {} 0 180.000000 AsDuration");
    gv_aUD499Civilian2 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian2, c_unitStateFidget, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_UnitInfoSelect", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing2 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/294C9F25"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian2_Init () {
    gt_AUD499RescueCivilian2 = TriggerCreate("gt_AUD499RescueCivilian2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian3
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, PointFromId(749));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,C Scared,C {} 0 180.000000 AsDuration");
    gv_aUD499Civilian3 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian3, c_unitStateFidget, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_UnitInfoSelect", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing3 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/F7E78EB9"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian3_Init () {
    gt_AUD499RescueCivilian3 = TriggerCreate("gt_AUD499RescueCivilian3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian4
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, PointFromId(750));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
    gv_aUD499Civilian4 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian4, c_unitStateFidget, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_UnitInfoSelect", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing4 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/13BEC82A"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian4_Init () {
    gt_AUD499RescueCivilian4 = TriggerCreate("gt_AUD499RescueCivilian4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian5
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(752));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,A Scared,A {} 0 180.000000 AsDuration");
    gv_aUD499Civilian5 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian5, c_unitStateFidget, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_UnitInfoSelect", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing5 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/01FCF719"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian5_Init () {
    gt_AUD499RescueCivilian5 = TriggerCreate("gt_AUD499RescueCivilian5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian6
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(863));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,C Scared,C {} 0 180.000000 AsDuration");
    gv_aUD499Civilian6 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian6, c_unitStateFidget, false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian6, true);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_UnitInfoSelect", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing6 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/ACCB91C8"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian6_Init () {
    gt_AUD499RescueCivilian6 = TriggerCreate("gt_AUD499RescueCivilian6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian7
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", 0, 3, PointFromId(865));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
    gv_aUD499Civilian7 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian7, c_unitStateFidget, false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian7, true);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_Void_Actuate_2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing7 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/3398BCD4"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian7_Init () {
    gt_AUD499RescueCivilian7 = TriggerCreate("gt_AUD499RescueCivilian7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian8
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian8_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(1799870089));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,A Scared,A {} 0 180.000000 AsDuration");
    gv_aUD499Civilian8 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian8, c_unitStateFidget, false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian8, true);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_Void_Actuate_2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing8 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/65F26CCB"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian8_Init () {
    gt_AUD499RescueCivilian8 = TriggerCreate("gt_AUD499RescueCivilian8_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian9
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian9_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(1533325517));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,C Scared,C {} 0 180.000000 AsDuration");
    gv_aUD499Civilian9 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian9, c_unitStateFidget, false);
    libNtve_gf_MakeUnitInvulnerable(gv_aUD499Civilian9, true);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_Void_Actuate_2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing9 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/11A10946"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian9_Init () {
    gt_AUD499RescueCivilian9 = TriggerCreate("gt_AUD499RescueCivilian9_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCivilian10
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCivilian10_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_zz;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_zz = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(332285664));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
    gv_aUD499Civilian10 = UnitLastCreated();
    UnitSetState(gv_aUD499Civilian10, c_unitStateFidget, false);
    UnitGroupAdd(gv_aUD499RescueGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.5);
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    SoundPlayForPlayer(SoundLink("UI_Void_Actuate_2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", UnitGetPosition(UnitLastCreated()), ColorWithAlpha(100.00, 100.00, 100.00, 0.00), 999.0, 270.0);
    gv_aUD499RescuePing10 = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/8BFB59C7"));
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    PingSetScale(PingLastCreated(), 0.36);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCivilian10_Init () {
    gt_AUD499RescueCivilian10 = TriggerCreate("gt_AUD499RescueCivilian10_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 RescueCiviliansArriveAtHQ
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCiviliansArriveAtHQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((gv_aUD499Civilian1 == EventUnit()) || (gv_aUD499Civilian10 == EventUnit()) || (gv_aUD499Civilian2 == EventUnit()) || (gv_aUD499Civilian3 == EventUnit()) || (gv_aUD499Civilian4 == EventUnit()) || (gv_aUD499Civilian5 == EventUnit()) || (gv_aUD499Civilian6 == EventUnit()) || (gv_aUD499Civilian7 == EventUnit()) || (gv_aUD499Civilian8 == EventUnit()) || (gv_aUD499Civilian9 == EventUnit())))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_aUD499Civilian1 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/7D7C0D41", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/7D7C0D41"));
        PingDestroy(gv_aUD499RescuePing1);
        UnitRemove(gv_aUD499Civilian1);
    }

    if ((gv_aUD499Civilian2 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/0794AFA2", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/0794AFA2"));
        PingDestroy(gv_aUD499RescuePing2);
        UnitRemove(gv_aUD499Civilian2);
    }

    if ((gv_aUD499Civilian3 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/820D7D64", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/820D7D64"));
        PingDestroy(gv_aUD499RescuePing3);
        UnitRemove(gv_aUD499Civilian3);
    }

    if ((gv_aUD499Civilian4 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/615778B7", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/615778B7"));
        PingDestroy(gv_aUD499RescuePing4);
        UnitRemove(gv_aUD499Civilian4);
    }

    if ((gv_aUD499Civilian5 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/7BAC88D0", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/7BAC88D0"));
        PingDestroy(gv_aUD499RescuePing5);
        UnitRemove(gv_aUD499Civilian5);
    }

    if ((gv_aUD499Civilian6 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/F00423F5", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/F00423F5"));
        PingDestroy(gv_aUD499RescuePing6);
        UnitRemove(gv_aUD499Civilian6);
    }

    if ((gv_aUD499Civilian7 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/714FA0A3", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/714FA0A3"));
        PingDestroy(gv_aUD499RescuePing7);
        UnitRemove(gv_aUD499Civilian7);
    }

    if ((gv_aUD499Civilian8 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/354A42CA", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/354A42CA"));
        PingDestroy(gv_aUD499RescuePing8);
        UnitRemove(gv_aUD499Civilian8);
    }

    if ((gv_aUD499Civilian9 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/873C6C16", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/873C6C16"));
        PingDestroy(gv_aUD499RescuePing9);
        UnitRemove(gv_aUD499Civilian9);
    }

    if ((gv_aUD499Civilian10 == EventUnit())) {
        gv_aUD499RescuedCivilians += 1;
        SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        TextExpressionSetToken("Param/Expression/56CF7ECF", "A", IntToText(gv_aUD499RescuedCivilians));
        ObjectiveSetName(gv_aUD499, TextExpressionAssemble("Param/Expression/56CF7ECF"));
        PingDestroy(gv_aUD499RescuePing10);
        UnitRemove(gv_aUD499Civilian10);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCiviliansArriveAtHQ_Init () {
    gt_AUD499RescueCiviliansArriveAtHQ = TriggerCreate("gt_AUD499RescueCiviliansArriveAtHQ_Func");
    TriggerAddEventUnitRegion(gt_AUD499RescueCiviliansArriveAtHQ, null, RegionFromId(323), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Dialogue 4 Rescued
//--------------------------------------------------------------------------------------------------
bool gt_AUD499Dialogue4Rescued_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((gv_aUD499RescuedCivilians == 4) || (gv_aUD499RescuedCivilians == 5)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00049", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_aUD499Bomber, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00050", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00051", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_aUD499Bomber, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00052", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00053", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    TriggerEnable(gt_AUD499Dialogue6Rescued, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499Dialogue4Rescued_Init () {
    gt_AUD499Dialogue4Rescued = TriggerCreate("gt_AUD499Dialogue4Rescued_Func");
    TriggerEnable(gt_AUD499Dialogue4Rescued, false);
    TriggerAddEventTimePeriodic(gt_AUD499Dialogue4Rescued, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Dialogue 6 Rescued
//--------------------------------------------------------------------------------------------------
bool gt_AUD499Dialogue6Rescued_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((gv_aUD499RescuedCivilians == 6) || (gv_aUD499RescuedCivilians == 7)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00054", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_aUD499Bomber, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00055", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00056", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    TriggerEnable(gt_AUD499Dialogue8Rescued, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499Dialogue6Rescued_Init () {
    gt_AUD499Dialogue6Rescued = TriggerCreate("gt_AUD499Dialogue6Rescued_Func");
    TriggerEnable(gt_AUD499Dialogue6Rescued, false);
    TriggerAddEventTimePeriodic(gt_AUD499Dialogue6Rescued, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Dialogue 8 Rescued
//--------------------------------------------------------------------------------------------------
bool gt_AUD499Dialogue8Rescued_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((gv_aUD499RescuedCivilians == 8) || (gv_aUD499RescuedCivilians == 9)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_aUD499Bomber, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00058", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00059", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_aUD499Bomber, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00060", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00061", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00062", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00063", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00064", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499Dialogue8Rescued_Init () {
    gt_AUD499Dialogue8Rescued = TriggerCreate("gt_AUD499Dialogue8Rescued_Func");
    TriggerEnable(gt_AUD499Dialogue8Rescued, false);
    TriggerAddEventTimePeriodic(gt_AUD499Dialogue8Rescued, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Rescue Officers Early
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueOfficersEarly_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto394CFB6F_g;
    int auto394CFB6F_u;
    unit auto394CFB6F_var;
    unitgroup auto2C231231_g;
    int auto2C231231_u;
    unit auto2C231231_var;

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    auto394CFB6F_g = UnitGroup("UPLRiotOfficer", gv_pLAYER_02_POLICE, RegionFromId(293), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto394CFB6F_u = UnitGroupCount(auto394CFB6F_g, c_unitCountAll);
    for (;; auto394CFB6F_u -= 1) {
        auto394CFB6F_var = UnitGroupUnitFromEnd(auto394CFB6F_g, auto394CFB6F_u);
        if (auto394CFB6F_var == null) { break; }
        libNtve_gf_RescueUnit(auto394CFB6F_var, gv_pLAYER_01_USER, true);
        libNtve_gf_ChangeUnitDamage(auto394CFB6F_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    auto2C231231_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_02_POLICE, RegionFromId(293), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2C231231_u = UnitGroupCount(auto2C231231_g, c_unitCountAll);
    for (;; auto2C231231_u -= 1) {
        auto2C231231_var = UnitGroupUnitFromEnd(auto2C231231_g, auto2C231231_u);
        if (auto2C231231_var == null) { break; }
        libNtve_gf_RescueUnit(auto2C231231_var, gv_pLAYER_01_USER, true);
        libNtve_gf_ChangeUnitDamage(auto2C231231_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueOfficersEarly_Init () {
    gt_AUD499RescueOfficersEarly = TriggerCreate("gt_AUD499RescueOfficersEarly_Func");
    TriggerAddEventUnitRegion(gt_AUD499RescueOfficersEarly, null, RegionFromId(293), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Section Setup
//--------------------------------------------------------------------------------------------------
bool gt_AUD499SectionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto014D0D2A_g;
    int auto014D0D2A_u;
    unit auto014D0D2A_var;
    unitgroup auto5E635350_g;
    int auto5E635350_u;
    unit auto5E635350_var;
    unitgroup auto0406D87A_g;
    int auto0406D87A_u;
    unit auto0406D87A_var;
    unitgroup auto8190933A_g;
    int auto8190933A_u;
    unit auto8190933A_var;
    unitgroup auto27142BE4_g;
    int auto27142BE4_u;
    unit auto27142BE4_var;
    unitgroup auto12E084C1_g;
    int auto12E084C1_u;
    unit auto12E084C1_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto014D0D2A_g = UnitGroup("FlashbangGrenadePickup", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto014D0D2A_u = UnitGroupCount(auto014D0D2A_g, c_unitCountAll);
    for (;; auto014D0D2A_u -= 1) {
        auto014D0D2A_var = UnitGroupUnitFromEnd(auto014D0D2A_g, auto014D0D2A_u);
        if (auto014D0D2A_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto014D0D2A_var, true);
    }
    auto5E635350_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(156), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5E635350_u = UnitGroupCount(auto5E635350_g, c_unitCountAll);
    for (;; auto5E635350_u -= 1) {
        auto5E635350_var = UnitGroupUnitFromEnd(auto5E635350_g, auto5E635350_u);
        if (auto5E635350_var == null) { break; }
        UnitRemove(auto5E635350_var);
    }
    auto0406D87A_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(174), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0406D87A_u = UnitGroupCount(auto0406D87A_g, c_unitCountAll);
    for (;; auto0406D87A_u -= 1) {
        auto0406D87A_var = UnitGroupUnitFromEnd(auto0406D87A_g, auto0406D87A_u);
        if (auto0406D87A_var == null) { break; }
        UnitRemove(auto0406D87A_var);
    }
    auto8190933A_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(174), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto8190933A_u = UnitGroupCount(auto8190933A_g, c_unitCountAll);
    for (;; auto8190933A_u -= 1) {
        auto8190933A_var = UnitGroupUnitFromEnd(auto8190933A_g, auto8190933A_u);
        if (auto8190933A_var == null) { break; }
        UnitRemove(auto8190933A_var);
    }
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(263), "GenericFire_Large");
    libNtve_gf_ShowHideUnit(UnitFromId(445147754), true);
    libNtve_gf_ShowHideUnit(UnitFromId(298146754), true);
    libNtve_gf_ShowHideUnit(UnitFromId(694897703), true);
    libNtve_gf_ShowHideUnit(UnitFromId(445147754), true);
    libNtve_gf_ShowHideUnit(UnitFromId(114346951), true);
    libNtve_gf_ShowHideUnit(UnitFromId(422275268), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1169443066), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1976674712), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1248762938), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1456709380), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1420539367), true);
    libNtve_gf_ShowHideUnit(UnitFromId(527836160), true);
    libNtve_gf_ShowHideUnit(UnitFromId(342580058), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1296892970), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1902028260), true);
    UnitSetState(UnitFromId(527836160), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitFromId(527836160), c_unitStateFidget, false);
    auto27142BE4_g = UnitGroup("UPLRiotOfficer", gv_pLAYER_02_POLICE, RegionFromId(168), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto27142BE4_u = UnitGroupCount(auto27142BE4_g, c_unitCountAll);
    for (;; auto27142BE4_u -= 1) {
        auto27142BE4_var = UnitGroupUnitFromEnd(auto27142BE4_g, auto27142BE4_u);
        if (auto27142BE4_var == null) { break; }
        UnitBehaviorRemove(auto27142BE4_var, "UPLRiotOfficerShotgun", 1);
        UnitBehaviorAdd(auto27142BE4_var, "UPLRiotOfficerRifle", auto27142BE4_var, 1);
        UnitIssueOrder(auto27142BE4_var, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
        libNtve_gf_ChangeUnitDamage(auto27142BE4_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    }
    auto12E084C1_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(151), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto12E084C1_u = UnitGroupCount(auto12E084C1_g, c_unitCountAll);
    for (;; auto12E084C1_u -= 1) {
        auto12E084C1_var = UnitGroupUnitFromEnd(auto12E084C1_g, auto12E084C1_u);
        if (auto12E084C1_var == null) { break; }
        UnitRemove(auto12E084C1_var);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(1144954507), true);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1144954507), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ShowHideUnit(UnitFromId(2059557458), true);
    libNtve_gf_ChangeUnitDamage(UnitFromId(2059557458), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1902028260), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitSetOwner(UnitFromId(1144954507), gv_pLAYER_02_POLICE, true);
    UnitSetOwner(UnitFromId(2059557458), gv_pLAYER_02_POLICE, true);
    UnitSetOwner(UnitFromId(1902028260), gv_pLAYER_02_POLICE, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499SectionSetup_Init () {
    gt_AUD499SectionSetup = TriggerCreate("gt_AUD499SectionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Section Start
//--------------------------------------------------------------------------------------------------
bool gt_AUD499SectionStart_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_rescued;
    unitgroup lv_waitkill;
    unit[6] lv_rescue;
    unit lv_lastCreatedCiv;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_rescued = UnitGroupEmpty();
    lv_waitkill = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((ObjectiveGetState(gv_aUD24) == c_objectiveStateCompleted))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ArtifactDenise, true);
    gv_riverWalkFlashBangsEnabled = true;
    libNtve_gf_ShowHideUnit(UnitFromId(228498443), true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2Part3", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_aUD499SectionBegins = 1;
    gv_aUD499BuildingAlarm = 1;
    TriggerExecute(gt_AUD499SectionSetup, true, false);
    libNtve_gf_ShowHideUnit(UnitFromId(2053525746), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1621191918), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1275334023), true);
    libNtve_gf_ShowHideUnit(UnitFromId(742399876), true);
    gv_aUD499Officer = UnitFromId(2053525746);
    UnitSetPropertyFixed(gv_aUD499Officer, c_unitPropLifeMax, 150.0);
    UnitSetPropertyFixed(gv_aUD499Officer, c_unitPropLife, 150.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00066", null, true, gv_aUD499Bomber, false);
    RegionPlayableMapSet(RegionFromId(166));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingObjective", PointFromId(939), ColorWithAlpha(50.20, 100.00, 0.00, 0.00), 999.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/1D530707"));
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00067", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00068", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveDestroy(gv_aUD109Protect);
    ObjectiveCreate(StringExternal("Param/Value/D1069831"), StringExternal("Param/Value/5F65E17B"), c_objectiveStateActive, true);
    gv_aUD499MoveTo = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD499, PlayerGroupAll(), true);
    gv_aUD499Ping = PingLastCreated();
    gv_aUD499Bomber = UnitFromId(2053525746);
    UnitSetInfoTip(gv_aUD499Bomber, StringExternal("Param/Value/523C94C5"));
    TechTreeUnitHelp(gv_pLAYER_01_USER, "DeniseAllisterRiotOfficer", true);
    UnitSetState(gv_aUD499Bomber, c_unitStateFidget, true);
    TriggerEnable(gt_DefeatAUD499Dies, true);
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    TriggerExecute(gt_TipHelpAUD499, true, false);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499SectionStart_Init () {
    gt_AUD499SectionStart = TriggerCreate("gt_AUD499SectionStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Rescue Cops on the Way
//--------------------------------------------------------------------------------------------------
bool gt_AUD499RescueCopsontheWay_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF12CCF8F_g;
    int autoF12CCF8F_u;
    unit autoF12CCF8F_var;

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    autoF12CCF8F_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_02_POLICE, RegionFromId(347), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF12CCF8F_u = UnitGroupCount(autoF12CCF8F_g, c_unitCountAll);
    for (;; autoF12CCF8F_u -= 1) {
        autoF12CCF8F_var = UnitGroupUnitFromEnd(autoF12CCF8F_g, autoF12CCF8F_u);
        if (autoF12CCF8F_var == null) { break; }
        libNtve_gf_RescueUnit(autoF12CCF8F_var, gv_pLAYER_01_USER, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499RescueCopsontheWay_Init () {
    gt_AUD499RescueCopsontheWay = TriggerCreate("gt_AUD499RescueCopsontheWay_Func");
    TriggerAddEventUnitRegion(gt_AUD499RescueCopsontheWay, UnitRefFromVariable("gv_myraDavis"), RegionFromId(347), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Civilian In Rescue Group Dies
//--------------------------------------------------------------------------------------------------
bool gt_AUD499CivilianInRescueGroupDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGroupHasUnit(gv_aUD499RescueGroup, EventUnit()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 1))) {
            return false;
        }

        if (!((gv_aUD499RescueSectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_aUD499DeadPresidents += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499CivilianInRescueGroupDies_Init () {
    gt_AUD499CivilianInRescueGroupDies = TriggerCreate("gt_AUD499CivilianInRescueGroupDies_Func");
    TriggerAddEventUnitDied(gt_AUD499CivilianInRescueGroupDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Building Fire Silenced Not Yet 499
//--------------------------------------------------------------------------------------------------
bool gt_AUD499BuildingFireSilencedNotYet499_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499BuildingFireSilencedNotYet499_Init () {
    gt_AUD499BuildingFireSilencedNotYet499 = TriggerCreate("gt_AUD499BuildingFireSilencedNotYet499_Func");
    TriggerAddEventUnitRegion(gt_AUD499BuildingFireSilencedNotYet499, null, RegionFromId(167), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Building Alarm Plays
//--------------------------------------------------------------------------------------------------
bool gt_AUD499BuildingAlarmPlays_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499BuildingAlarm == 1))) {
            return false;
        }

        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, false);
    SoundPlayAtPointForPlayer(SoundLink("M2AUD499BuildingAlarm", 0), c_maxPlayers, PlayerGroupAll(), PointFromId(1583157747), 0.0, 100.0, 0.0);
    DataTableSetSound(true, "BuildingAlarm", SoundLastPlayed());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499BuildingAlarmPlays_Init () {
    gt_AUD499BuildingAlarmPlays = TriggerCreate("gt_AUD499BuildingAlarmPlays_Func");
    TriggerAddEventUnitRegion(gt_AUD499BuildingAlarmPlays, null, RegionFromId(167), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Building Alarm Stops
//--------------------------------------------------------------------------------------------------
bool gt_AUD499BuildingAlarmStops_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499BuildingAlarm == 1))) {
            return false;
        }

        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundStop(DataTableGetSound(true, "BuildingAlarm"), true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499BuildingAlarmStops_Init () {
    gt_AUD499BuildingAlarmStops = TriggerCreate("gt_AUD499BuildingAlarmStops_Func");
    TriggerAddEventUnitRegion(gt_AUD499BuildingAlarmStops, null, RegionFromId(167), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Section Davis Gets Close
//--------------------------------------------------------------------------------------------------
bool gt_AUD499SectionDavisGetsClose_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_rescued;
    unitgroup lv_waitkill;
    unit[6] lv_rescue;
    unit lv_lastCreatedCiv;

    // Automatic Variable Declarations
    unitgroup autoDAA07F06_g;
    int autoDAA07F06_u;
    unit autoDAA07F06_var;
    unitgroup autoD2E23670_g;
    int autoD2E23670_u;
    unit autoD2E23670_var;
    unitgroup auto85F16881_g;
    int auto85F16881_u;
    unit auto85F16881_var;
    unitgroup auto1D85622D_g;
    int auto1D85622D_u;
    unit auto1D85622D_var;
    unitgroup autoEAE44D31_g;
    int autoEAE44D31_u;
    unit autoEAE44D31_var;
    unitgroup autoD7B83952_g;
    int autoD7B83952_u;
    unit autoD7B83952_var;
    unitgroup auto54BA66C8_g;
    int auto54BA66C8_u;
    unit auto54BA66C8_var;
    const int auto2972DDA6_n = 2;
    int auto2972DDA6_i;
    const int auto2526E4EC_n = 4;
    int auto2526E4EC_i;
    const int autoCD21FEFC_n = 2;
    int autoCD21FEFC_i;
    const int auto6D626D78_n = 4;
    int auto6D626D78_i;
    int autoBFF67773_n;
    int autoBFF67773_i;
    int auto33AFF7D7_n;
    int auto33AFF7D7_i;
    int auto29035399_n;
    int auto29035399_i;
    int auto5239D681_n;
    int auto5239D681_i;
    int auto978AE469_n;
    int auto978AE469_i;
    int auto63E61BE7_n;
    int auto63E61BE7_i;
    int auto93BD765E_n;
    int auto93BD765E_i;
    int auto80EAB890_n;
    int auto80EAB890_i;
    const int autoF629014D_n = 1;
    int autoF629014D_i;
    int auto19EF98D5_n;
    int auto19EF98D5_i;

    // Variable Initialization
    lv_rescued = UnitGroupEmpty();
    lv_waitkill = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    autoDAA07F06_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(286), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDAA07F06_u = UnitGroupCount(autoDAA07F06_g, c_unitCountAll);
    for (;; autoDAA07F06_u -= 1) {
        autoDAA07F06_var = UnitGroupUnitFromEnd(autoDAA07F06_g, autoDAA07F06_u);
        if (autoDAA07F06_var == null) { break; }
        UnitRemove(autoDAA07F06_var);
    }
    autoD2E23670_g = UnitGroup(null, gv_pLAYER_04_ROACHES, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD2E23670_u = UnitGroupCount(autoD2E23670_g, c_unitCountAll);
    for (;; autoD2E23670_u -= 1) {
        autoD2E23670_var = UnitGroupUnitFromEnd(autoD2E23670_g, autoD2E23670_u);
        if (autoD2E23670_var == null) { break; }
        libNtve_gf_PauseUnit(autoD2E23670_var, true);
    }
    auto85F16881_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto85F16881_u = UnitGroupCount(auto85F16881_g, c_unitCountAll);
    for (;; auto85F16881_u -= 1) {
        auto85F16881_var = UnitGroupUnitFromEnd(auto85F16881_g, auto85F16881_u);
        if (auto85F16881_var == null) { break; }
        UnitSetPosition(auto85F16881_var, RegionRandomPoint(RegionFromId(329)), false);
        libNtve_gf_MakeUnitUncommandable(auto85F16881_var, true);
        libNtve_gf_ChangeUnitDamage(auto85F16881_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
        UnitSetState(auto85F16881_var, c_unitStateFidget, false);
        UnitIssueOrder(auto85F16881_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto85F16881_var, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
        UnitSelect(auto85F16881_var, gv_pLAYER_01_USER, false);
    }
    UnitSetPosition(gv_myraDavis, libNtve_gf_PointFacingAngle(PointFromId(290270879), 270.0), false);
    UnitSetPosition(gv_aUD499Bomber, libNtve_gf_PointFacingAngle(PointFromId(8471763), 270.0), false);
    UnitSetState(gv_aUD499Bomber, c_unitStateFidget, false);
    libNtve_gf_MakeUnitFacePoint(gv_aUD499Bomber, UnitGetPosition(gv_myraDavis), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_aUD499Bomber), 0.0);
    Wait(0.5, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(717275094), 0.0, -1, 10.0, true);
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    CinematicFade(true, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    auto1D85622D_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(174), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1D85622D_u = UnitGroupCount(auto1D85622D_g, c_unitCountAll);
    for (;; auto1D85622D_u -= 1) {
        auto1D85622D_var = UnitGroupUnitFromEnd(auto1D85622D_g, auto1D85622D_u);
        if (auto1D85622D_var == null) { break; }
        UnitRemove(auto1D85622D_var);
    }
    autoEAE44D31_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(174), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEAE44D31_u = UnitGroupCount(autoEAE44D31_g, c_unitCountAll);
    for (;; autoEAE44D31_u -= 1) {
        autoEAE44D31_var = UnitGroupUnitFromEnd(autoEAE44D31_g, autoEAE44D31_u);
        if (autoEAE44D31_var == null) { break; }
        UnitRemove(autoEAE44D31_var);
    }
    ObjectiveDestroy(gv_aUD24);
    ObjectiveSetState(gv_aUD499MoveTo, c_objectiveStateCompleted);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    UnitSetState(gv_aUD499Bomber, c_unitStateFidget, false);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_aUD499Bomber), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_aUD499Bomber, UnitGetPosition(gv_myraDavis), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00069", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00070", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1795820892), 0.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00071", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1792326330), 0.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00072", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1795820892), 0.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00073", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1792326330), 0.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00074", null, true, gv_aUD499Bomber, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(717275094), 0.0, -1, 10.0, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1047985309), 5.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00075", null, true, gv_myraDavis, false);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.0);
    TechTreeUnitHelp(1, "DeniseAllisterRiotOfficer", true);
    TriggerExecute(gt_AUD499APCTrigger, true, false);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(gt_AUD499Dialogue4Rescued, true);
    PlayerSetAlliance(2, c_allianceIdPushable, gv_pLAYER_01_USER, true);
    UnitSetState(gv_aUD499Bomber, c_unitStateFidget, true);
    UnitSetState(gv_aUD499Bomber, c_unitStateSelectable, true);
    autoD7B83952_g = UnitGroup(null, gv_pLAYER_04_ROACHES, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD7B83952_u = UnitGroupCount(autoD7B83952_g, c_unitCountAll);
    for (;; autoD7B83952_u -= 1) {
        autoD7B83952_var = UnitGroupUnitFromEnd(autoD7B83952_g, autoD7B83952_u);
        if (autoD7B83952_var == null) { break; }
        libNtve_gf_PauseUnit(autoD7B83952_var, false);
    }
    auto54BA66C8_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto54BA66C8_u = UnitGroupCount(auto54BA66C8_g, c_unitCountAll);
    for (;; auto54BA66C8_u -= 1) {
        auto54BA66C8_var = UnitGroupUnitFromEnd(auto54BA66C8_g, auto54BA66C8_u);
        if (auto54BA66C8_var == null) { break; }
        libNtve_gf_MakeUnitUncommandable(auto54BA66C8_var, false);
        libNtve_gf_ChangeUnitDamage(auto54BA66C8_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
        UnitSetState(auto54BA66C8_var, c_unitStateFidget, true);
    }
    for (auto2972DDA6_i = 1; auto2972DDA6_i <= auto2972DDA6_n; auto2972DDA6_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(699));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,C Scared,C {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, RandomInt(6, 10));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("move", 0), gv_aUD499Officer), c_orderQueueReplace);
        UnitGroupAdd(lv_rescued, UnitLastCreated());
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        lv_lastCreatedCiv = UnitLastCreated();
        UnitGroupAdd(lv_rescued, UnitLastCreated());
        Wait(0.5, c_timeGame);
        UnitCreate(1, "Zergling", 0, 4, PointFromId(699), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), lv_lastCreatedCiv), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(939)), c_orderQueueAddToEnd);
        Wait(0.08, c_timeGame);
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00076", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    for (auto2526E4EC_i = 1; auto2526E4EC_i <= auto2526E4EC_n; auto2526E4EC_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, 3, PointFromId(699));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, RandomInt(6, 10));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("move", 0), gv_aUD499Officer), c_orderQueueReplace);
        UnitGroupAdd(lv_rescued, UnitLastCreated());
        lv_lastCreatedCiv = UnitLastCreated();
        UnitGroupAdd(lv_rescued, UnitLastCreated());
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(0.5, c_timeGame);
        UnitCreate(1, "Zergling", 0, 4, PointFromId(699), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), lv_lastCreatedCiv), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(939)), c_orderQueueAddToEnd);
        Wait(0.08, c_timeGame);
    }
    UnitBehaviorRemove(gv_aUD499Officer, "DamageTakenMinimal", 1);
    libNtve_gf_ShareVisionofUnit(gv_aUD499Officer, true, gv_pLAYER_01_USER);
    libNtve_gf_RescueUnit(gv_aUD499Bomber, gv_pLAYER_01_USER, true);
    UnitSetState(gv_aUD499Bomber, c_unitStateSelectable, true);
    Wait(0.2, c_timeGame);
    lib1926661B_gf_SetHeroPanelUnit(2, gv_aUD499Bomber);
    lib1926661B_gf_ShowHideHeroPanel(2, true);
    libNtve_gf_RescueUnit(UnitFromId(1621191918), gv_pLAYER_01_USER, true);
    UnitSetState(UnitFromId(1621191918), c_unitStateSelectable, true);
    libNtve_gf_RescueUnit(UnitFromId(1275334023), gv_pLAYER_01_USER, true);
    UnitSetState(UnitFromId(1275334023), c_unitStateSelectable, true);
    libNtve_gf_RescueUnit(UnitFromId(742399876), gv_pLAYER_01_USER, true);
    UnitSetState(UnitFromId(742399876), c_unitStateSelectable, true);
    for (autoCD21FEFC_i = 1; autoCD21FEFC_i <= autoCD21FEFC_n; autoCD21FEFC_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, PointFromId(699), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), lv_lastCreatedCiv), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(939)), c_orderQueueAddToEnd);
        Wait(0.2, c_timeGame);
    }
    Wait(1.0, c_timeGame);
    TriggerEnable(gt_AUD499Victory, true);
    TriggerEnable(gt_AUD499Victory, true);
    gv_stat_DeniseSectionActive = true;
    Wait(1.2, c_timeGame);
    UnitGroupIssueOrder(lv_rescued, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(170))), c_orderQueueReplace);
    PingDestroy(gv_aUD499Ping);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingObjective", PointFromId(779), ColorWithAlpha(0.00, 100.00, 100.00, 0.00), 999.0, 180.0);
    gv_aUD499PDPing = PingLastCreated();
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/3EB084C7"));
    PingSetScale(PingLastCreated(), 0.77);
    TriggerExecute(gt_AUD499RescueCivilian1, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian2, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian3, true, false);
    Wait(0.7, c_timeGame);
    ObjectiveCreate(StringExternal("Param/Value/5A8E19B9"), StringExternal("Param/Value/6FBA9B4C"), c_objectiveStateActive, true);
    gv_aUD499 = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD499, PlayerGroupAll(), true);
    ObjectiveCreate(StringExternal("Param/Value/C4BC6DE8"), StringExternal("Param/Value/D915E773"), c_objectiveStateActive, true);
    gv_aUD499Survives = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD499, PlayerGroupAll(), true);
    TriggerExecute(gt_TipSavetheDay, true, false);
    gv_aUD499CivilianTrigger = true;
    TriggerExecute(gt_AUD499RescueCivilian4, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian5, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian6, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian7, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian8, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian9, true, false);
    Wait(0.7, c_timeGame);
    TriggerExecute(gt_AUD499RescueCivilian10, true, false);
    Wait(2.0, c_timeGame);
    gv_aUD499RescueSectionBegins = 1;
    TriggerExecute(gt_AUD499SWATVanMoves, true, false);
    for (auto6D626D78_i = 1; auto6D626D78_i <= auto6D626D78_n; auto6D626D78_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(34)), RandomFixed(0.0, 350.0));
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        Wait(1.35, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    autoBFF67773_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (autoBFF67773_i = 1; autoBFF67773_i <= autoBFF67773_n; autoBFF67773_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(39)), 90.0);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(0.25, c_timeGame);
    }
    auto33AFF7D7_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (auto33AFF7D7_i = 1; auto33AFF7D7_i <= auto33AFF7D7_n; auto33AFF7D7_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(54)), 90.0);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(0.25, c_timeGame);
    }
    auto29035399_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (auto29035399_i = 1; auto29035399_i <= auto29035399_n; auto29035399_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(55)), 90.0);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(0.25, c_timeGame);
    }
    auto5239D681_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto5239D681_i = 1; auto5239D681_i <= auto5239D681_n; auto5239D681_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(47)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        Wait(3.0, c_timeGame);
    }
    auto978AE469_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto978AE469_i = 1; auto978AE469_i <= auto978AE469_n; auto978AE469_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(48)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        Wait(0.25, c_timeGame);
    }
    auto63E61BE7_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (auto63E61BE7_i = 1; auto63E61BE7_i <= auto63E61BE7_n; auto63E61BE7_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(38)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        Wait(0.25, c_timeGame);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", gv_aUD499Bomber, 1);
    }
    auto93BD765E_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto93BD765E_i = 1; auto93BD765E_i <= auto93BD765E_n; auto93BD765E_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(43)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", gv_aUD499Bomber, 1);
        Wait(0.25, c_timeGame);
    }
    auto80EAB890_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (auto80EAB890_i = 1; auto80EAB890_i <= auto80EAB890_n; auto80EAB890_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(42)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        Wait(0.25, c_timeGame);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", gv_aUD499Bomber, 1);
    }
    for (autoF629014D_i = 1; autoF629014D_i <= autoF629014D_n; autoF629014D_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionGetCenter(RegionFromId(42)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        Wait(0.25, c_timeGame);
    }
    auto19EF98D5_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto19EF98D5_i = 1; auto19EF98D5_i <= auto19EF98D5_n; auto19EF98D5_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(52)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(lv_waitkill, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeashShort", UnitLastCreated(), 1);
        Wait(0.25, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499SectionDavisGetsClose_Init () {
    gt_AUD499SectionDavisGetsClose = TriggerCreate("gt_AUD499SectionDavisGetsClose_Func");
    TriggerAddEventUnitRange(gt_AUD499SectionDavisGetsClose, UnitRefFromVariable("gv_myraDavis"), UnitFromId(2053525746), 3.0, true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 SWAT Van Moves
//--------------------------------------------------------------------------------------------------
bool gt_AUD499SWATVanMoves_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetState(UnitFromId(1192053833), c_unitStateMoveSuppressed, true);
    UnitBehaviorAdd(UnitFromId(1192053833), "SuppressCollision", UnitLastCreated(), 1);
    UnitIssueOrder(UnitFromId(1192053833), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(300059740)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499SWATVanMoves_Init () {
    gt_AUD499SWATVanMoves = TriggerCreate("gt_AUD499SWATVanMoves_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 SWAT Van Boom
//--------------------------------------------------------------------------------------------------
bool gt_AUD499SWATVanBoom_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "SwatVan"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_05_POLICE_NEUTRAL))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(lib1926661B_gf_DifficultyValueInteger(1, 2), "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(EventUnit()), UnitGetPosition(gv_myraDavis));
    UnitKill(EventUnit());
    PointSet(PointFromId(300059740), UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499SWATVanBoom_Init () {
    gt_AUD499SWATVanBoom = TriggerCreate("gt_AUD499SWATVanBoom_Func");
    TriggerAddEventUnitRegion(gt_AUD499SWATVanBoom, null, RegionFromId(40), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Screaming Civilians Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_AUD499ScreamingCiviliansTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoA998E3D4_n = 4;
    int autoA998E3D4_i;
    const int autoE18F57A4_n = 4;
    int autoE18F57A4_i;
    const int auto10D58B25_n = 3;
    int auto10D58B25_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AUD499ScreamingCivilians", -1), c_maxPlayers, PlayerGroupAll(), 70.0, 0.0);
    for (autoA998E3D4_i = 1; autoA998E3D4_i <= autoA998E3D4_n; autoA998E3D4_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1648215445));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,C Scared,C {} 0 180.000000 AsDuration");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(169))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(170))), c_orderQueueAddToEnd);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(RandomInt(1, 3), c_timeGame);
    }
    for (autoE18F57A4_i = 1; autoE18F57A4_i <= autoE18F57A4_n; autoE18F57A4_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1648215445));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Scared,B Scared,B {} 0 180.000000 AsDuration");
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(169))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(170))), c_orderQueueAddToEnd);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        Wait(RandomInt(1, 3), c_timeGame);
    }
    for (auto10D58B25_i = 1; auto10D58B25_i <= auto10D58B25_n; auto10D58B25_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1648215445));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(169))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(170))), c_orderQueueAddToEnd);
        Wait(RandomInt(1, 2), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499ScreamingCiviliansTripwire_Init () {
    gt_AUD499ScreamingCiviliansTripwire = TriggerCreate("gt_AUD499ScreamingCiviliansTripwire_Func");
    TriggerAddEventUnitRegion(gt_AUD499ScreamingCiviliansTripwire, null, RegionFromId(171), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Screaming Civilians Despawn
//--------------------------------------------------------------------------------------------------
bool gt_AUD499ScreamingCiviliansDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499RescueSectionBegins == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_CIVILIANS))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499ScreamingCiviliansDespawn_Init () {
    gt_AUD499ScreamingCiviliansDespawn = TriggerCreate("gt_AUD499ScreamingCiviliansDespawn_Func");
    TriggerAddEventUnitRegion(gt_AUD499ScreamingCiviliansDespawn, null, RegionFromId(170), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 APC Trigger
//--------------------------------------------------------------------------------------------------
bool gt_AUD499APCTrigger_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_aUD499Rescue = true;
    libNtve_gf_ShowHideUnit(UnitFromId(1987198181), true);
    libNtve_gf_ShowHideUnit(UnitFromId(2031711028), true);
    libNtve_gf_ShowHideUnit(UnitFromId(613001820), true);
    UnitSetOwner(UnitFromId(1987198181), gv_pLAYER_02_POLICE, true);
    UnitSetOwner(UnitFromId(2031711028), gv_pLAYER_02_POLICE, true);
    UnitSetOwner(UnitFromId(613001820), gv_pLAYER_02_POLICE, true);
    libNtve_gf_ShowHideUnit(UnitFromId(323364356), true);
    UnitSetOwner(UnitFromId(323364356), gv_pLAYER_02_POLICE, true);
    gv_aPC = UnitFromId(323364356);
    UnitSetState(UnitFromId(323364356), c_unitStateTurnSuppressed, true);
    UnitSetState(UnitFromId(323364356), c_unitStateStunned, false);
    UnitSetState(UnitFromId(323364356), c_unitStateFidget, false);
    UnitSetState(UnitFromId(323364356), c_unitStateStoppable, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499APCTrigger_Init () {
    gt_AUD499APCTrigger = TriggerCreate("gt_AUD499APCTrigger_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 APC Rescue
//--------------------------------------------------------------------------------------------------
bool gt_AUD499APCRescue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto85BBF64F_g;
    int auto85BBF64F_u;
    unit auto85BBF64F_var;
    unitgroup autoE1E292F7_g;
    int autoE1E292F7_u;
    unit autoE1E292F7_var;

    // Conditions
    if (testConds) {
        if (!((gv_aUD499Rescue == true))) {
            return false;
        }

        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(1.0, c_timeGame);
    auto85BBF64F_g = UnitGroup("UPLRiotOfficer", gv_pLAYER_02_POLICE, RegionFromId(294), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto85BBF64F_u = UnitGroupCount(auto85BBF64F_g, c_unitCountAll);
    for (;; auto85BBF64F_u -= 1) {
        auto85BBF64F_var = UnitGroupUnitFromEnd(auto85BBF64F_g, auto85BBF64F_u);
        if (auto85BBF64F_var == null) { break; }
        libNtve_gf_RescueUnit(auto85BBF64F_var, gv_pLAYER_01_USER, true);
    }
    autoE1E292F7_g = UnitGroup("APC", gv_pLAYER_02_POLICE, RegionFromId(294), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE1E292F7_u = UnitGroupCount(autoE1E292F7_g, c_unitCountAll);
    for (;; autoE1E292F7_u -= 1) {
        autoE1E292F7_var = UnitGroupUnitFromEnd(autoE1E292F7_g, autoE1E292F7_u);
        if (autoE1E292F7_var == null) { break; }
        libNtve_gf_RescueUnit(autoE1E292F7_var, gv_pLAYER_01_USER, true);
    }
    TechTreeUnitHelp(gv_pLAYER_01_USER, "UPLRiotOfficer", true);
    TechTreeUnitHelp(gv_pLAYER_01_USER, "APC", true);
    TriggerExecute(gt_TipAPC, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499APCRescue_Init () {
    gt_AUD499APCRescue = TriggerCreate("gt_AUD499APCRescue_Func");
    TriggerAddEventUnitRegion(gt_AUD499APCRescue, null, RegionFromId(294), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Zerg Spawn Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_AUD499ZergSpawnTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoF1E8A171_n;
    int autoF1E8A171_i;
    const int auto3DCEDCEB_n = 1;
    int auto3DCEDCEB_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    autoF1E8A171_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
    for (autoF1E8A171_i = 1; autoF1E8A171_i <= autoF1E8A171_n; autoF1E8A171_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(50)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(RandomFixed(0.25, 1.0), c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(939)), c_orderQueueAddToEnd);
    }
    for (auto3DCEDCEB_i = 1; auto3DCEDCEB_i <= auto3DCEDCEB_n; auto3DCEDCEB_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(43)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        Wait(2.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499ZergSpawnTripwire_Init () {
    gt_AUD499ZergSpawnTripwire = TriggerCreate("gt_AUD499ZergSpawnTripwire_Func");
    TriggerAddEventUnitRegion(gt_AUD499ZergSpawnTripwire, UnitRefFromVariable("gv_myraDavis"), RegionFromId(49), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Zerg Spawn Tripwire2
//--------------------------------------------------------------------------------------------------
bool gt_AUD499ZergSpawnTripwire2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoACD290ED_n = 1;
    int autoACD290ED_i;
    int autoC96F465B_n;
    int autoC96F465B_i;

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    for (autoACD290ED_i = 1; autoACD290ED_i <= autoACD290ED_n; autoACD290ED_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, PointFromId(951), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        Wait(2.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    Wait(RandomFixed(5.0, 5.5), c_timeGame);
    autoC96F465B_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (autoC96F465B_i = 1; autoC96F465B_i <= autoC96F465B_n; autoC96F465B_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(27)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.5, 2.0), c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(939)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499ZergSpawnTripwire2_Init () {
    gt_AUD499ZergSpawnTripwire2 = TriggerCreate("gt_AUD499ZergSpawnTripwire2_Func");
    TriggerAddEventUnitRegion(gt_AUD499ZergSpawnTripwire2, UnitRefFromVariable("gv_aUD499Bomber"), RegionFromId(41), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Zerg Spawn Tripwire3
//--------------------------------------------------------------------------------------------------
bool gt_AUD499ZergSpawnTripwire3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoEC4FB539_n;
    int autoEC4FB539_i;
    int auto57526920_n;
    int auto57526920_i;
    int auto520EE61B_n;
    int auto520EE61B_i;

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.0, c_timeGame);
    autoEC4FB539_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (autoEC4FB539_i = 1; autoEC4FB539_i <= autoEC4FB539_n; autoEC4FB539_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(43)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueAddToEnd);
        Wait(2.25, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(939)), c_orderQueueAddToEnd);
    }
    Wait(10.0, c_timeGame);
    auto57526920_n = lib1926661B_gf_DifficultyValueInteger(2, 4);
    for (auto57526920_i = 1; auto57526920_i <= auto57526920_n; auto57526920_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(43)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        Wait(1.3, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(939)), c_orderQueueAddToEnd);
    }
    Wait(10.0, c_timeGame);
    auto520EE61B_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto520EE61B_i = 1; auto520EE61B_i <= auto520EE61B_n; auto520EE61B_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(46)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeash", UnitLastCreated(), 1);
        Wait(1.3, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499ZergSpawnTripwire3_Init () {
    gt_AUD499ZergSpawnTripwire3 = TriggerCreate("gt_AUD499ZergSpawnTripwire3_Func");
    TriggerAddEventUnitRegion(gt_AUD499ZergSpawnTripwire3, UnitRefFromVariable("gv_aUD499Bomber"), RegionFromId(43), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Zerg Spawn Tripwire4
//--------------------------------------------------------------------------------------------------
bool gt_AUD499ZergSpawnTripwire4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto1E76F9AE_n;
    int auto1E76F9AE_i;

    // Conditions
    if (testConds) {
        if (!((gv_aUD499SectionBegins == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    SoundPlayForPlayer(SoundLink("M2AUD499FourJetFlyby", -1), c_maxPlayers, PlayerGroupAll(), 180.0, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00077", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(1.0, c_timeGame);
    auto1E76F9AE_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto1E76F9AE_i = 1; auto1E76F9AE_i <= auto1E76F9AE_n; auto1E76F9AE_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(EventUnitRegion()), RandomFixed(0.0, 350.0));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        Wait(3.3, c_timeGame);
    }
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499ZergSpawnTripwire4_Init () {
    gt_AUD499ZergSpawnTripwire4 = TriggerCreate("gt_AUD499ZergSpawnTripwire4_Func");
    TriggerAddEventUnitRegion(gt_AUD499ZergSpawnTripwire4, UnitRefFromVariable("gv_myraDavis"), RegionFromId(53), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 Victory
//--------------------------------------------------------------------------------------------------
bool gt_AUD499Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD499RescuedCivilians > 5))) {
            return false;
        }

        if (!((gv_aUD499RescueSectionBegins == 1))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_aUD499RescueGroup) == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_AUD499RescueCiviliansArriveAtHQ, false);
    gv_aUD499SectionBegins = 0;
    ObjectiveDestroy(gv_aUD499MoveTo);
    ObjectiveSetState(gv_aUD499, c_objectiveStateCompleted);
    Wait(1.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("SoundDirective", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/B93E8523"));
    if ((libNtve_gf_UnitIsInsideTransport(gv_aUD499Bomber) == true)) {
        UnitSetPosition(gv_aUD499Bomber, UnitGetPosition(gv_aPC), false);
    }

    UnitSetOwner(gv_aUD499Bomber, gv_pLAYER_02_POLICE, true);
    libNtve_gf_ChangeUnitDamage(gv_aUD499Bomber, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(gv_aUD499Bomber, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1416489851)), c_orderQueueReplace);
    UnitIssueOrder(gv_aUD499Bomber, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(779)), c_orderQueueAddToEnd);
    UnitBehaviorAdd(gv_aUD499Bomber, "SuppressCollision", gv_aUD499Bomber, 1);
    Wait(3.0, c_timeGame);
    do {
        UnitIssueOrder(gv_aUD499Bomber, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(779)), c_orderQueueReplace);
        Wait(4.0, c_timeGame);
    }while ((UnitIsValid(gv_aUD499Bomber) == true));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499Victory_Init () {
    gt_AUD499Victory = TriggerCreate("gt_AUD499Victory_Func");
    TriggerEnable(gt_AUD499Victory, false);
    TriggerAddEventTimePeriodic(gt_AUD499Victory, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 499 End
//--------------------------------------------------------------------------------------------------
bool gt_AUD499End_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD499RescuedCivilians > 5))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_aUD499RescueGroup) == true))) {
            return false;
        }

        if (!((gv_aUD499Bomber == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_AUD499Dialogue4Rescued);
    TriggerEnable(gt_AUD499Dialogue4Rescued, false);
    TriggerStop(gt_AUD499Dialogue6Rescued);
    TriggerEnable(gt_AUD499Dialogue6Rescued, false);
    TriggerStop(gt_AUD499Dialogue8Rescued);
    TriggerEnable(gt_AUD499Dialogue8Rescued, false);
    PingDestroy(gv_aUD499PDPing);
    UnitIssueOrder(gv_aUD499Bomber, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    gv_stat_DeniseSectionActive = false;
    TriggerQueueEnter();
    libCamp_gf_SetAllSoundChannelVolumesCampaign(libNtve_ge_VolumeChannelMode_Speech);
    libNtve_gf_AttachActorToUnit(gv_aUD499Bomber, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00078", null, true, gv_aUD499Bomber, false);
    libCamp_gf_SetAllSoundChannelVolumesCampaign(libNtve_ge_VolumeChannelMode_Speech);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00079", null, true, gv_myraDavis, false);
    libCamp_gf_SetAllSoundChannelVolumesCampaign(libNtve_ge_VolumeChannelMode_Game);
    TriggerQueueExit();
    if ((gv_stat_CiviliansLostDeniseSection == 0)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M02-P1-Normal", gv_pLAYER_01_USER);
    }
    SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitRemove(gv_aUD499Bomber);
    lib1926661B_gf_ShowHideHeroPanel(2, false);
    ObjectiveDestroy(gv_aUD499);
    ObjectiveSetState(gv_aUD499Survives, c_objectiveStateCompleted);
    Wait(1.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/F2FBEEC2"));
    UnitBehaviorAdd(gv_myraDavis, "MyraDavisArmorBonus", gv_myraDavis, 1);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropLifeMax, 150.0);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropLife, 150.0);
    TriggerExecute(gt_AUD36SectionSetup, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD499End_Init () {
    gt_AUD499End = TriggerCreate("gt_AUD499End_Func");
    TriggerAddEventUnitRegion(gt_AUD499End, null, RegionFromId(45), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Section Units
//--------------------------------------------------------------------------------------------------
bool gt_AUD36SectionUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoA289A2EC_g;
    int autoA289A2EC_u;
    unit autoA289A2EC_var;
    unitgroup auto5D1266B8_g;
    int auto5D1266B8_u;
    unit auto5D1266B8_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoA289A2EC_g = UnitGroup("Ambulance", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA289A2EC_u = UnitGroupCount(autoA289A2EC_g, c_unitCountAll);
    for (;; autoA289A2EC_u -= 1) {
        autoA289A2EC_var = UnitGroupUnitFromEnd(autoA289A2EC_g, autoA289A2EC_u);
        if (autoA289A2EC_var == null) { break; }
        UnitRemove(autoA289A2EC_var);
    }
    auto5D1266B8_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(141), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5D1266B8_u = UnitGroupCount(auto5D1266B8_g, c_unitCountAll);
    for (;; auto5D1266B8_u -= 1) {
        auto5D1266B8_var = UnitGroupUnitFromEnd(auto5D1266B8_g, auto5D1266B8_u);
        if (auto5D1266B8_var == null) { break; }
        UnitRemove(auto5D1266B8_var);
    }
    UnitCreate(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(217429166), 270.0);
    UnitGroupAdd(gv_aUD36SectionEscort, UnitLastCreated());
    UnitCreate(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1278763943), 270.0);
    UnitGroupAdd(gv_aUD36SectionEscort, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitCreate(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(786322537), 270.0);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitGroupAdd(gv_aUD36SectionEscort, UnitLastCreated());
    UnitCreate(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(48482690), 270.0);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitGroupAdd(gv_aUD36SectionEscort, UnitLastCreated());
    UnitCreate(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1912703089), 270.0);
    UnitGroupAdd(gv_aUD36SectionEscort, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitCreate(1, "UPLDetectiveMale", 0, gv_pLAYER_02_POLICE, PointFromId(368339388), 270.0);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerShotgun", UnitLastCreated(), 1);
    gv_aUD36Unit = UnitLastCreated();
    UnitSetInfoTip(gv_aUD36Unit, StringExternal("Param/Value/E1BCE491"));
    libNtve_gf_ShareVisionofUnit(UnitLastCreated(), true, gv_pLAYER_01_USER);
    UnitSetState(gv_aUD36Unit, c_unitStateSelectable, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 200.0);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 1.1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36SectionUnits_Init () {
    gt_AUD36SectionUnits = TriggerCreate("gt_AUD36SectionUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Section Setup
//--------------------------------------------------------------------------------------------------
bool gt_AUD36SectionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00080", null, true, null, false);
    Wait(0.5, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00081", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_AUD36SectionUnits, true, false);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", PointFromId(368339388), ColorWithAlpha(50.20, 100.00, 100.00, 0.00), 999.0, 270.0);
    PingSetUnit(PingLastCreated(), gv_aUD36Unit);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/27D169FC"));
    PingSetScale(PingLastCreated(), 0.55);
    gv_aUD36Ping = PingLastCreated();
    Wait(0.5, c_timeGame);
    ObjectiveCreate(StringExternal("Param/Value/960E0594"), StringToText(""), c_objectiveStateActive, true);
    gv_aUD36 = ObjectiveLastCreated();
    ObjectiveShow(gv_aUD36, PlayerGroupAll(), true);
    gv_aUD36SectionActive = 1;
    TriggerEnable(gt_AUD36SectionStart, true);
    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36SectionSetup_Init () {
    gt_AUD36SectionSetup = TriggerCreate("gt_AUD36SectionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Section EAS
//--------------------------------------------------------------------------------------------------
bool gt_AUD36SectionEAS_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD36SectionActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2EBSTone", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/44EE840F"));
    Wait(10.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_EarnAudiologLore("M02P1-EMS1");
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00082", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36SectionEAS_Init () {
    gt_AUD36SectionEAS = TriggerCreate("gt_AUD36SectionEAS_Func");
    TriggerAddEventUnitRegion(gt_AUD36SectionEAS, null, RegionFromId(17), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Section Start
//--------------------------------------------------------------------------------------------------
bool gt_AUD36SectionStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoB486A517_g;
    int autoB486A517_u;
    unit autoB486A517_var;
    unitgroup autoEA934E25_g;
    int autoEA934E25_u;
    unit autoEA934E25_var;
    unitgroup autoED5351CC_g;
    int autoED5351CC_u;
    unit autoED5351CC_var;
    int autoB56835CF_n;
    int autoB56835CF_i;
    int autoF2E5E2A6_n;
    int autoF2E5E2A6_i;
    int auto7F2C7FF3_n;
    int auto7F2C7FF3_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_aUD36SectionActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    CinematicFade(false, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1601704809), 0.0, -1, 10.0, true);
    autoB486A517_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB486A517_u = UnitGroupCount(autoB486A517_g, c_unitCountAll);
    for (;; autoB486A517_u -= 1) {
        autoB486A517_var = UnitGroupUnitFromEnd(autoB486A517_g, autoB486A517_u);
        if (autoB486A517_var == null) { break; }
        UnitSetPosition(autoB486A517_var, RegionRandomPoint(RegionFromId(15)), false);
        UnitIssueOrder(autoB486A517_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_MakeUnitUncommandable(autoB486A517_var, true);
        libNtve_gf_ChangeUnitDamage(autoB486A517_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    UnitSetPosition(gv_myraDavis, RegionRandomPoint(RegionFromId(15)), false);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    libNtve_gf_MakeUnitUncommandable(gv_myraDavis, true);
    libNtve_gf_ChangeUnitDamage(gv_myraDavis, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_aUD36Unit), 0.0);
    UnitBehaviorAdd(gv_aUD36Unit, "SuppressCollision", gv_aUD36Unit, 1);
    UnitSetState(gv_aUD36Unit, c_unitStateFidget, false);
    libNtve_gf_MakeUnitFacePoint(gv_aUD36Unit, UnitGetPosition(gv_myraDavis), 0.0);
    UnitSetState(gv_myraDavis, c_unitStateFidget, false);
    TransmissionClearAll();
    CinematicFade(true, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00083", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    gv_aUD36EscortActive = 1;
    libNtve_gf_ChangeUnitDamage(gv_myraDavis, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    libNtve_gf_MakeUnitUncommandable(gv_myraDavis, false);
    autoEA934E25_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEA934E25_u = UnitGroupCount(autoEA934E25_g, c_unitCountAll);
    for (;; autoEA934E25_u -= 1) {
        autoEA934E25_var = UnitGroupUnitFromEnd(autoEA934E25_g, autoEA934E25_u);
        if (autoEA934E25_var == null) { break; }
        libNtve_gf_MakeUnitUncommandable(autoEA934E25_var, false);
        libNtve_gf_ChangeUnitDamage(autoEA934E25_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    autoED5351CC_g = UnitGroupFilter(null, c_playerAny, gv_aUD36SectionEscort, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoED5351CC_u = UnitGroupCount(autoED5351CC_g, c_unitCountAll);
    for (;; autoED5351CC_u -= 1) {
        autoED5351CC_var = UnitGroupUnitFromEnd(autoED5351CC_g, autoED5351CC_u);
        if (autoED5351CC_var == null) { break; }
        libNtve_gf_RescueUnit(autoED5351CC_var, gv_pLAYER_01_USER, true);
        UnitIssueOrder(autoED5351CC_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    UnitSetState(gv_aUD36Unit, c_unitStateFidget, true);
    UnitSetState(gv_myraDavis, c_unitStateFidget, true);
    TriggerEnable(gt_AUD36PreventZergWanderingAway, true);
    TriggerEnable(gt_AUD36ZergSpawn1, true);
    TriggerEnable(gt_AUD36ZergSpawn2, true);
    TriggerEnable(gt_AUD36ZergSpawn3, true);
    TriggerEnable(gt_AUD36ZergSpawn4, true);
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/10AD5030"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/7ACD05E6"), StringExternal("Param/Value/22A1DDC7"), "Assets\\Textures\\btn-techupgrade-terran-consumption.dds");
    UnitIssueOrder(gv_aUD36Unit, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(63))), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_aUD36Unit, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(64))), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_aUD36Unit, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(779)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_aUD36Unit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(779)), c_orderQueueAddToEnd);
    autoB56835CF_n = lib1926661B_gf_DifficultyValueInteger(7, 14);
    for (autoB56835CF_i = 1; autoB56835CF_i <= autoB56835CF_n; autoB56835CF_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(65)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    autoF2E5E2A6_n = lib1926661B_gf_DifficultyValueInteger(6, 12);
    for (autoF2E5E2A6_i = 1; autoF2E5E2A6_i <= autoF2E5E2A6_n; autoF2E5E2A6_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(79)), RandomFixed(0.0, 300.0));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
    }
    Wait(6.0, c_timeGame);
    auto7F2C7FF3_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
    for (auto7F2C7FF3_i = 1; auto7F2C7FF3_i <= auto7F2C7FF3_n; auto7F2C7FF3_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(65)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueAddToEnd);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36SectionStart_Init () {
    gt_AUD36SectionStart = TriggerCreate("gt_AUD36SectionStart_Func");
    TriggerEnable(gt_AUD36SectionStart, false);
    TriggerAddEventUnitRegion(gt_AUD36SectionStart, null, RegionFromId(15), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Zerg Spawn 1
//--------------------------------------------------------------------------------------------------
bool gt_AUD36ZergSpawn1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto47D0D2BD_n;
    int auto47D0D2BD_i;
    int auto2F04BB2E_n;
    int auto2F04BB2E_i;
    int autoBE44A00E_n;
    int autoBE44A00E_i;
    int auto2A6460DE_n;
    int auto2A6460DE_i;
    const int auto76C4D19D_n = 5;
    int auto76C4D19D_i;
    const int auto41BC6510_n = 5;
    int auto41BC6510_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == 1) || (UnitGetOwner(EventUnit()) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto47D0D2BD_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (auto47D0D2BD_i = 1; auto47D0D2BD_i <= auto47D0D2BD_n; auto47D0D2BD_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(69)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    auto2F04BB2E_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto2F04BB2E_i = 1; auto2F04BB2E_i <= auto2F04BB2E_n; auto2F04BB2E_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(69)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(16.0, c_timeGame);
    autoBE44A00E_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (autoBE44A00E_i = 1; autoBE44A00E_i <= autoBE44A00E_n; autoBE44A00E_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(70)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(9.0, c_timeGame);
    auto2A6460DE_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto2A6460DE_i = 1; auto2A6460DE_i <= auto2A6460DE_n; auto2A6460DE_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(70)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(12.0, c_timeGame);
    for (auto76C4D19D_i = 1; auto76C4D19D_i <= auto76C4D19D_n; auto76C4D19D_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(70)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(12.0, c_timeGame);
    for (auto41BC6510_i = 1; auto41BC6510_i <= auto41BC6510_n; auto41BC6510_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(70)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36ZergSpawn1_Init () {
    gt_AUD36ZergSpawn1 = TriggerCreate("gt_AUD36ZergSpawn1_Func");
    TriggerEnable(gt_AUD36ZergSpawn1, false);
    TriggerAddEventUnitRegion(gt_AUD36ZergSpawn1, null, RegionFromId(68), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Zerg Spawn 2
//--------------------------------------------------------------------------------------------------
bool gt_AUD36ZergSpawn2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto1DF249FA_n;
    int auto1DF249FA_i;
    int autoB1DEBE13_n;
    int autoB1DEBE13_i;
    int auto53371002_n;
    int auto53371002_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == 1) || (UnitGetOwner(EventUnit()) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto1DF249FA_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto1DF249FA_i = 1; auto1DF249FA_i <= auto1DF249FA_n; auto1DF249FA_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(67)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(4.0, c_timeGame);
    autoB1DEBE13_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (autoB1DEBE13_i = 1; autoB1DEBE13_i <= autoB1DEBE13_n; autoB1DEBE13_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(67)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    Wait(4.0, c_timeGame);
    auto53371002_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto53371002_i = 1; auto53371002_i <= auto53371002_n; auto53371002_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(69)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36ZergSpawn2_Init () {
    gt_AUD36ZergSpawn2 = TriggerCreate("gt_AUD36ZergSpawn2_Func");
    TriggerEnable(gt_AUD36ZergSpawn2, false);
    TriggerAddEventUnitRegion(gt_AUD36ZergSpawn2, null, RegionFromId(73), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Zerg Spawn 3
//--------------------------------------------------------------------------------------------------
bool gt_AUD36ZergSpawn3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoE196209C_n;
    int autoE196209C_i;
    int auto8AE938B6_n;
    int auto8AE938B6_i;
    int autoD967BA03_n;
    int autoD967BA03_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == 1) || (UnitGetOwner(EventUnit()) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(7.0, c_timeGame);
    autoE196209C_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
    for (autoE196209C_i = 1; autoE196209C_i <= autoE196209C_n; autoE196209C_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(70)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    auto8AE938B6_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto8AE938B6_i = 1; auto8AE938B6_i <= auto8AE938B6_n; auto8AE938B6_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(67)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    autoD967BA03_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (autoD967BA03_i = 1; autoD967BA03_i <= autoD967BA03_n; autoD967BA03_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(67)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.8), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36ZergSpawn3_Init () {
    gt_AUD36ZergSpawn3 = TriggerCreate("gt_AUD36ZergSpawn3_Func");
    TriggerEnable(gt_AUD36ZergSpawn3, false);
    TriggerAddEventUnitRegion(gt_AUD36ZergSpawn3, null, RegionFromId(71), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Zerg Spawn 4
//--------------------------------------------------------------------------------------------------
bool gt_AUD36ZergSpawn4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto4A0FE037_n;
    int auto4A0FE037_i;
    int autoA861FEB9_n;
    int autoA861FEB9_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == 1) || (UnitGetOwner(EventUnit()) == 2)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(7.0, c_timeGame);
    auto4A0FE037_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto4A0FE037_i = 1; auto4A0FE037_i <= auto4A0FE037_n; auto4A0FE037_i += 1) {
        UnitCreate(1, "HydraliskBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(42)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
    }
    autoA861FEB9_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
    for (autoA861FEB9_i = 1; autoA861FEB9_i <= autoA861FEB9_n; autoA861FEB9_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(77)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_aUD36ZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.2, 0.5), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36ZergSpawn4_Init () {
    gt_AUD36ZergSpawn4 = TriggerCreate("gt_AUD36ZergSpawn4_Func");
    TriggerEnable(gt_AUD36ZergSpawn4, false);
    TriggerAddEventUnitRegion(gt_AUD36ZergSpawn4, null, RegionFromId(78), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Prevent Zerg Wandering Away
//--------------------------------------------------------------------------------------------------
bool gt_AUD36PreventZergWanderingAway_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupIssueOrder(gv_aUD36ZergGroup, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_aUD36Unit)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36PreventZergWanderingAway_Init () {
    gt_AUD36PreventZergWanderingAway = TriggerCreate("gt_AUD36PreventZergWanderingAway_Func");
    TriggerEnable(gt_AUD36PreventZergWanderingAway, false);
    TriggerAddEventTimePeriodic(gt_AUD36PreventZergWanderingAway, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Building Fire Heard
//--------------------------------------------------------------------------------------------------
bool gt_AUD36BuildingFireHeard_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD36FireSectionActive == 1))) {
            return false;
        }

        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36BuildingFireHeard_Init () {
    gt_AUD36BuildingFireHeard = TriggerCreate("gt_AUD36BuildingFireHeard_Func");
    TriggerAddEventUnitRegion(gt_AUD36BuildingFireHeard, null, RegionFromId(18), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Building Fire Leave
//--------------------------------------------------------------------------------------------------
bool gt_AUD36BuildingFireLeave_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD36FireSectionActive == 1))) {
            return false;
        }

        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36BuildingFireLeave_Init () {
    gt_AUD36BuildingFireLeave = TriggerCreate("gt_AUD36BuildingFireLeave_Func");
    TriggerAddEventUnitRegion(gt_AUD36BuildingFireLeave, null, RegionFromId(167), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Building Explosion
//--------------------------------------------------------------------------------------------------
bool gt_AUD36BuildingExplosion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((gv_aUD36SectionActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(UnitFromId(661631978), gv_pLAYER_04_ROACHES, true);
    UnitIssueOrder(UnitFromId(661631978), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    Wait(1.0, c_timeGame);
    UnitSetOwner(UnitFromId(1166310227), gv_pLAYER_04_ROACHES, true);
    UnitIssueOrder(UnitFromId(1166310227), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    Wait(0.6, c_timeGame);
    UnitSetOwner(UnitFromId(2029414838), gv_pLAYER_04_ROACHES, true);
    UnitIssueOrder(UnitFromId(2029414838), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    Wait(2.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2DistantSirens122", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 1.0, 0.5, 100.0, 1.25);
    libNtve_gf_CreateActorAtPoint("FXDOMExplosionLarge", PointFromId(1898002834));
    UnitDamage(gv_myraDavis, "LavaDamageMU", UnitFromId(2029414838), 200.0);
    SoundPlayForPlayer(SoundLink("M2HydraDies1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    UnitDamage(gv_myraDavis, "LavaDamageMU", UnitFromId(1166310227), 200.0);
    UnitDamage(gv_myraDavis, "LavaDamageMU", UnitFromId(661631978), 200.0);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(23), "GenericFire_Medium");
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(23), "Korhal_Residential_Building_Destroyed");
    gv_aUD36BuildingExplosionDoodad = 1;
    Wait(0.8, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2HydraDies2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_aUD36FireSectionActive = 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36BuildingExplosion_Init () {
    gt_AUD36BuildingExplosion = TriggerCreate("gt_AUD36BuildingExplosion_Func");
    TriggerAddEventUnitRegion(gt_AUD36BuildingExplosion, null, RegionFromId(23), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Air Raid Siren
//--------------------------------------------------------------------------------------------------
bool gt_AUD36AirRaidSiren_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_aUD36EscortActive == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2DistantSirens12", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36AirRaidSiren_Init () {
    gt_AUD36AirRaidSiren = TriggerCreate("gt_AUD36AirRaidSiren_Func");
    TriggerAddEventUnitRegion(gt_AUD36AirRaidSiren, null, RegionFromId(68), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Victory
//--------------------------------------------------------------------------------------------------
bool gt_AUD36Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD36Unit == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "UPLDetectiveMale"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerSetAlliance(gv_pLAYER_01_USER, c_allianceIdPushable, gv_pLAYER_02_POLICE, false);
    TriggerEnable(gt_AUD36PreventZergWanderingAway, false);
    TriggerEnable(gt_AUD36ZergSpawn1, false);
    TriggerEnable(gt_AUD36ZergSpawn2, false);
    TriggerEnable(gt_AUD36ZergSpawn3, false);
    TriggerEnable(gt_AUD36ZergSpawn4, false);
    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.2, c_timeGame);
    SoundPlayForPlayer(SoundLink("Alert_UniObjectiveCompleted", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitRemove(EventUnit());
    ObjectiveDestroy(gv_aUD499Survives);
    ObjectiveSetState(gv_aUD36, c_objectiveStateCompleted);
    PingDestroy(gv_aUD36Ping);
    CinematicFade(false, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(1.0, c_timeGame);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetPosition(gv_myraDavis, PointFromId(2080378885), false);
    TriggerExecute(gt_AUD36DavisSwapstoRiotGear, true, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(124188542), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7BDFEACF"));
    SoundPlayForPlayer(SoundLink("Condor_Unload_Infantry", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DialogDestroyAll();
    Wait(3.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionZergSpawns, true, false);
    TriggerExecute(gt_RiverWalkSectionSetup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36Victory_Init () {
    gt_AUD36Victory = TriggerCreate("gt_AUD36Victory_Func");
    TriggerAddEventUnitRegion(gt_AUD36Victory, null, RegionFromId(62), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AUD 36 Davis Swaps to Riot Gear
//--------------------------------------------------------------------------------------------------
bool gt_AUD36DavisSwapstoRiotGear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD36SectionActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_davisKills = libNtve_gf_UnitGetPropertyKills(gv_myraDavis, c_unitPropCurrent);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "MyraDavisRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, libNtve_gf_PointFacingAngle(PointFromId(2080378885), 270.0));
    UnitRemove(gv_myraDavis);
    gv_myraDavis = UnitLastCreated();
    TechTreeUnitHelp(gv_pLAYER_01_USER, "MyraDavisRiotOfficer", true);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropLifeMax, 150.0);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropLife, 150.0);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropKills, gv_davisKills);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisPistol", 1);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisRifle", 1);
    UnitBehaviorRemove(gv_myraDavis, "MyraDavisShotgun", 1);
    UnitBehaviorAdd(gv_myraDavis, "MyraDavisShotgun", gv_myraDavis, 1);
    UnitBehaviorAdd(gv_myraDavis, "MyraDavisShotgun", gv_myraDavis, 1);
    UnitAbilityAdd(gv_myraDavis, "MyraDavisFlashBangGrenade");
    UnitAbilityAdd(gv_myraDavis, "MyraDavisHealingPatch");
    UnitAbilityAdd(gv_myraDavis, "MyraDavisFlameGrenade");
    UnitAbilityAdd(gv_myraDavis, "MyraDavisSwapToShotgun");
    UnitAbilityAdd(gv_myraDavis, "MyraDavisSwapToRifle");
    UnitAbilityAdd(gv_myraDavis, "MyraDavisHeadshot");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AUD36DavisSwapstoRiotGear_Init () {
    gt_AUD36DavisSwapstoRiotGear = TriggerCreate("gt_AUD36DavisSwapstoRiotGear_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Setup
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF63F0DF0_g;
    int autoF63F0DF0_u;
    unit autoF63F0DF0_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_riverWalkFlameGrenadesEnabled = true;
    autoF63F0DF0_g = UnitGroup("FlameGrenadePickup", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoF63F0DF0_u = UnitGroupCount(autoF63F0DF0_g, c_unitCountAll);
    for (;; autoF63F0DF0_u -= 1) {
        autoF63F0DF0_var = UnitGroupUnitFromEnd(autoF63F0DF0_g, autoF63F0DF0_u);
        if (autoF63F0DF0_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoF63F0DF0_var, true);
    }
    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_RiverWalkSectionSetup2, true, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00085", null, true, null, false);
    CinematicFade(false, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    RegionPlayableMapSet(RegionEntireMap());
    Wait(0.5, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(2114376329), 0.0, -1, 10.0, true);
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(291));
    gv_riverWalkRevealArea = VisRevealerLastCreated();
    CinematicFade(true, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(898331948), 45.0, -1, 10.0, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00086", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00087", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(2.0, c_timeGame);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    VisRevealerDestroy(gv_riverWalkRevealArea);
    Wait(1.0, c_timeGame);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(291), c_fillTypeUnexplored, false);
    TriggerExecute(gt_RiverWalkSectionSetup2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionSetup_Init () {
    gt_RiverWalkSectionSetup = TriggerCreate("gt_RiverWalkSectionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Setup 2
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionSetup2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0A130564_g;
    int auto0A130564_u;
    unit auto0A130564_var;
    unitgroup auto6514098E_g;
    int auto6514098E_u;
    unit auto6514098E_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionClearAll();
    VisRevealerDestroy(gv_riverWalkRevealArea);
    Wait(1.0, c_timeGame);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(291), c_fillTypeUnexplored, false);
    auto0A130564_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0A130564_u = UnitGroupCount(auto0A130564_g, c_unitCountAll);
    for (;; auto0A130564_u -= 1) {
        auto0A130564_var = UnitGroupUnitFromEnd(auto0A130564_g, auto0A130564_u);
        if (auto0A130564_var == null) { break; }
        UnitPauseAll(true);
    }
    Wait(0.2, c_timeGame);
    TriggerEnable(gt_RiverWalkSectionZergSpawn1, true);
    TriggerEnable(gt_RiverWalkSectionZergSpawn2, true);
    TriggerExecute(gt_RiverWalkSectionUnits, true, false);
    RegionPlayableMapSet(RegionFromId(177));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(2052312574), 0.0, -1, 10.0, true);
    auto6514098E_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(290), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6514098E_u = UnitGroupCount(auto6514098E_g, c_unitCountAll);
    for (;; auto6514098E_u -= 1) {
        auto6514098E_var = UnitGroupUnitFromEnd(auto6514098E_g, auto6514098E_u);
        if (auto6514098E_var == null) { break; }
        UnitRemove(auto6514098E_var);
    }
    CinematicFade(true, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    TriggerExecute(gt_RiverWalkSectionSetup3, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionSetup2_Init () {
    gt_RiverWalkSectionSetup2 = TriggerCreate("gt_RiverWalkSectionSetup2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Units
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto3D142C8C_g;
    int auto3D142C8C_u;
    unit auto3D142C8C_var;
    unitgroup auto7DE27483_g;
    int auto7DE27483_u;
    unit auto7DE27483_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(859658549), true);
    libNtve_gf_ShowHideUnit(UnitFromId(620901178), true);
    gv_riverWalkRexTheEngineer = UnitFromId(620901178);
    UnitSetPropertyFixed(gv_riverWalkRexTheEngineer, c_unitPropLifeMax, 60.0);
    UnitSetPropertyFixed(gv_riverWalkRexTheEngineer, c_unitPropLife, 60.0);
    TechTreeUnitHelp(gv_pLAYER_01_USER, "UPLEngineer", true);
    libNtve_gf_ShowHideUnit(UnitFromId(2105418287), true);
    libNtve_gf_ShowHideUnit(UnitFromId(436608711), true);
    libNtve_gf_ShowHideUnit(UnitFromId(427056525), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1789127592), true);
    UnitSetPosition(gv_myraDavis, PointFromId(316359783), false);
    auto3D142C8C_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3D142C8C_u = UnitGroupCount(auto3D142C8C_g, c_unitCountAll);
    for (;; auto3D142C8C_u -= 1) {
        auto3D142C8C_var = UnitGroupUnitFromEnd(auto3D142C8C_g, auto3D142C8C_u);
        if (auto3D142C8C_var == null) { break; }
        UnitSetPosition(auto3D142C8C_var, RegionRandomPoint(RegionFromId(178)), false);
        UnitIssueOrder(auto3D142C8C_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    auto7DE27483_g = UnitGroup(null, gv_pLAYER_05_POLICE_NEUTRAL, RegionFromId(178), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7DE27483_u = UnitGroupCount(auto7DE27483_g, c_unitCountAll);
    for (;; auto7DE27483_u -= 1) {
        auto7DE27483_var = UnitGroupUnitFromEnd(auto7DE27483_g, auto7DE27483_u);
        if (auto7DE27483_var == null) { break; }
        UnitSetOwner(auto7DE27483_var, gv_pLAYER_01_USER, true);
        UnitGroupAdd(gv_riverWalkDavisUnit, auto7DE27483_var);
    }
    UnitSetOwner(gv_riverWalkRexTheEngineer, gv_pLAYER_01_USER, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionUnits_Init () {
    gt_RiverWalkSectionUnits = TriggerCreate("gt_RiverWalkSectionUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Setup 3
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionSetup3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_RiverWalkSectionSetup4, true, false);
    SoundPlayForPlayer(SoundLink("M2DistantSirens12", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    UnitSetState(gv_myraDavis, c_unitStateFidget, false);
    UnitSetState(gv_riverWalkRexTheEngineer, c_unitStateFidget, false);
    libNtve_gf_MakeUnitFacePoint(gv_riverWalkRexTheEngineer, UnitGetPosition(gv_myraDavis), 1.0);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_riverWalkRexTheEngineer), 1.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00194", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    DataTableSetSound(true, "AirRaid", SoundLastPlayed());
    UnitSetState(gv_myraDavis, c_unitStateFidget, true);
    UnitSetState(gv_riverWalkRexTheEngineer, c_unitStateFidget, true);
    TriggerExecute(gt_RiverWalkSectionSetup4, true, false);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionSetup3_Init () {
    gt_RiverWalkSectionSetup3 = TriggerCreate("gt_RiverWalkSectionSetup3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Setup 4
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionSetup4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoB0643FDD_g;
    int autoB0643FDD_u;
    unit autoB0643FDD_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionClearAll();
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 2.0);
    autoB0643FDD_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB0643FDD_u = UnitGroupCount(autoB0643FDD_g, c_unitCountAll);
    for (;; autoB0643FDD_u -= 1) {
        autoB0643FDD_var = UnitGroupUnitFromEnd(autoB0643FDD_g, autoB0643FDD_u);
        if (autoB0643FDD_var == null) { break; }
        UnitPauseAll(false);
    }
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    gv_riverWalkSectionActive = 1;
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2Part2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    ObjectiveCreate(StringExternal("Param/Value/33E9817F"), StringExternal("Param/Value/F1562384"), c_objectiveStateActive, true);
    gv_riverWalkClearThreats = ObjectiveLastCreated();
    ObjectiveShow(gv_riverWalkClearThreats, PlayerGroupAll(), true);
    ObjectiveCreate(StringExternal("Param/Value/5F27993A"), StringToText(""), c_objectiveStateActive, true);
    gv_riverWalkCityEngineer = ObjectiveLastCreated();
    ObjectiveShow(gv_riverWalkCityEngineer, PlayerGroupAll(), true);
    libVCMI_gf_CreateObjectivePing(true, PointFromId(1247273762), StringExternal("Param/Value/949DBB20"));
    gv_riverWalkPing = PingLastCreated();
    MinimapPing(PlayerGroupAll(), PointFromId(1247273762), 2.0, Color(100.00, 100.00, 0.00));
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(175));
    TriggerExecute(gt_TipHeadshot, true, false);
    TriggerExecute(gt_TipIncendiaryGrenade, true, false);
    TriggerExecute(gt_TipRifleSwitch, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionSetup4_Init () {
    gt_RiverWalkSectionSetup4 = TriggerCreate("gt_RiverWalkSectionSetup4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Spawn1
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergSpawn1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto0D01DDCF_n;
    int auto0D01DDCF_i;
    int auto04BE0919_n;
    int auto04BE0919_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) <= 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto0D01DDCF_n = lib1926661B_gf_DifficultyValueInteger(0, 2);
    for (auto0D01DDCF_i = 1; auto0D01DDCF_i <= auto0D01DDCF_n; auto0D01DDCF_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoachBurrowed", 0, 4, RegionRandomPoint(RegionFromId(74)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_riverWalkAggroSpawns, UnitLastCreated());
        Wait(7.0, c_timeGame);
    }
    Wait(3.5, c_timeGame);
    auto04BE0919_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto04BE0919_i = 1; auto04BE0919_i <= auto04BE0919_n; auto04BE0919_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(75)));
        UnitGroupAdd(gv_riverWalkAggroSpawns, UnitLastCreated());
        Wait(RandomFixed(0.0, 3.0), c_timeGame);
    }
    Wait(100.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergSpawn1_Init () {
    gt_RiverWalkSectionZergSpawn1 = TriggerCreate("gt_RiverWalkSectionZergSpawn1_Func");
    TriggerEnable(gt_RiverWalkSectionZergSpawn1, false);
    TriggerAddEventUnitRegion(gt_RiverWalkSectionZergSpawn1, null, RegionFromId(74), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Spawn2
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergSpawn2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto49041A83_n;
    int auto49041A83_i;
    int autoC1524AF7_n;
    int autoC1524AF7_i;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) <= 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto49041A83_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto49041A83_i = 1; auto49041A83_i <= auto49041A83_n; auto49041A83_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(75)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_riverWalkAggroSpawns, UnitLastCreated());
        Wait(7.0, c_timeGame);
    }
    Wait(3.5, c_timeGame);
    autoC1524AF7_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (autoC1524AF7_i = 1; autoC1524AF7_i <= autoC1524AF7_n; autoC1524AF7_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(74)));
        UnitGroupAdd(gv_riverWalkAggroSpawns, UnitLastCreated());
        Wait(RandomFixed(0.0, 3.0), c_timeGame);
    }
    Wait(100.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergSpawn2_Init () {
    gt_RiverWalkSectionZergSpawn2 = TriggerCreate("gt_RiverWalkSectionZergSpawn2_Func");
    TriggerEnable(gt_RiverWalkSectionZergSpawn2, false);
    TriggerAddEventUnitRegion(gt_RiverWalkSectionZergSpawn2, null, RegionFromId(75), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Attack Davis
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergAttackDavis_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto2CA6AD79_g;
    int auto2CA6AD79_u;
    unit auto2CA6AD79_var;

    // Conditions
    if (testConds) {
        if (!((gv_riverWalkSectionActive == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto2CA6AD79_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(179), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2CA6AD79_u = UnitGroupCount(auto2CA6AD79_g, c_unitCountAll);
    for (;; auto2CA6AD79_u -= 1) {
        auto2CA6AD79_var = UnitGroupUnitFromEnd(auto2CA6AD79_g, auto2CA6AD79_u);
        if (auto2CA6AD79_var == null) { break; }
        UnitIssueOrder(auto2CA6AD79_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(gv_riverWalkDavisUnit, c_unitCountAlive))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergAttackDavis_Init () {
    gt_RiverWalkSectionZergAttackDavis = TriggerCreate("gt_RiverWalkSectionZergAttackDavis_Func");
    TriggerEnable(gt_RiverWalkSectionZergAttackDavis, false);
    TriggerAddEventTimePeriodic(gt_RiverWalkSectionZergAttackDavis, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Spawns
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergSpawns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto2D21F315_n;
    int auto2D21F315_i;
    int auto38EDEF85_n;
    int auto38EDEF85_i;
    int auto046A279B_n;
    int auto046A279B_i;

    // Actions
    if (!runActions) {
        return true;
    }

    auto2D21F315_n = lib1926661B_gf_DifficultyValueInteger(40, 100);
    for (auto2D21F315_i = 1; auto2D21F315_i <= auto2D21F315_n; auto2D21F315_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(56)));
        UnitGroupAdd(gv_riverWalkSpawns, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeash", gv_myraDavis, 1);
    }
    auto38EDEF85_n = lib1926661B_gf_DifficultyValueInteger(15, 33);
    for (auto38EDEF85_i = 1; auto38EDEF85_i <= auto38EDEF85_n; auto38EDEF85_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(76)));
        UnitGroupAdd(gv_riverWalkSpawns, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeash", gv_myraDavis, 1);
    }
    auto046A279B_n = lib1926661B_gf_DifficultyValueInteger(6, 15);
    for (auto046A279B_i = 1; auto046A279B_i <= auto046A279B_n; auto046A279B_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(56)));
        UnitGroupAdd(gv_riverWalkSpawns, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "CritterWanderLeash", gv_myraDavis, 1);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergSpawns_Init () {
    gt_RiverWalkSectionZergSpawns = TriggerCreate("gt_RiverWalkSectionZergSpawns_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Ready to Descend
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionReadytoDescend_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7957FC45_g;
    int auto7957FC45_u;
    unit auto7957FC45_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitCount(null, gv_pLAYER_04_ROACHES, RegionFromId(176), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 4))) {
            return false;
        }

        if (!((gv_riverWalkSectionActive == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_ROACHES))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_riverWalkSectionActive = 2;
    ObjectiveDestroy(gv_aUD36);
    ObjectiveSetState(gv_riverWalkClearThreats, c_objectiveStateCompleted);
    auto7957FC45_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(177), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7957FC45_u = UnitGroupCount(auto7957FC45_g, c_unitCountAll);
    for (;; auto7957FC45_u -= 1) {
        auto7957FC45_var = UnitGroupUnitFromEnd(auto7957FC45_g, auto7957FC45_u);
        if (auto7957FC45_var == null) { break; }
        UnitIssueOrder(auto7957FC45_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    TriggerDestroy(gt_RiverWalkSectionZergSpawn1);
    TriggerDestroy(gt_RiverWalkSectionZergSpawn2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionReadytoDescend_Init () {
    gt_RiverWalkSectionReadytoDescend = TriggerCreate("gt_RiverWalkSectionReadytoDescend_Func");
    TriggerAddEventUnitDied(gt_RiverWalkSectionReadytoDescend, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Descend
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionDescend_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9EA74E0E_g;
    int auto9EA74E0E_u;
    unit auto9EA74E0E_var;
    unitgroup auto7825762B_g;
    int auto7825762B_u;
    unit auto7825762B_var;

    // Conditions
    if (testConds) {
        if (!((EventUnit() == gv_riverWalkRexTheEngineer))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_riverWalkSectionActive == 2))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitClearSelection(gv_pLAYER_01_USER);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 3.0);
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1289266369), 6.0, -1, 10.0, true);
    UnitKill(UnitFromId(859658549));
    auto9EA74E0E_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9EA74E0E_u = UnitGroupCount(auto9EA74E0E_g, c_unitCountAll);
    for (;; auto9EA74E0E_u -= 1) {
        auto9EA74E0E_var = UnitGroupUnitFromEnd(auto9EA74E0E_g, auto9EA74E0E_u);
        if (auto9EA74E0E_var == null) { break; }
        UnitPauseAll(true);
    }
    auto7825762B_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7825762B_u = UnitGroupCount(auto7825762B_g, c_unitCountAll);
    for (;; auto7825762B_u -= 1) {
        auto7825762B_var = UnitGroupUnitFromEnd(auto7825762B_g, auto7825762B_u);
        if (auto7825762B_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto7825762B_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    TriggerExecute(gt_RiverWalkSectionDescend2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionDescend_Init () {
    gt_RiverWalkSectionDescend = TriggerCreate("gt_RiverWalkSectionDescend_Func");
    TriggerAddEventUnitRegion(gt_RiverWalkSectionDescend, null, RegionFromId(175), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Descend 2
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionDescend2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetState(gv_myraDavis, c_unitStateFidget, false);
    UnitSetState(gv_riverWalkRexTheEngineer, c_unitStateFidget, false);
    libNtve_gf_MakeUnitFacePoint(gv_riverWalkRexTheEngineer, UnitGetPosition(gv_myraDavis), 1.0);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_riverWalkRexTheEngineer), 1.0);
    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_RiverWalkSectionDescend3, true, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00195", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_RiverWalkSectionDescend3, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionDescend2_Init () {
    gt_RiverWalkSectionDescend2 = TriggerCreate("gt_RiverWalkSectionDescend2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Descend 3
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionDescend3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto3A346B5E_g;
    int auto3A346B5E_u;
    unit auto3A346B5E_var;
    unitgroup auto2FD18064_g;
    int auto2FD18064_u;
    unit auto2FD18064_var;
    unitgroup autoC217878A_g;
    int autoC217878A_u;
    unit autoC217878A_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionClearAll();
    auto3A346B5E_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3A346B5E_u = UnitGroupCount(auto3A346B5E_g, c_unitCountAll);
    for (;; auto3A346B5E_u -= 1) {
        auto3A346B5E_var = UnitGroupUnitFromEnd(auto3A346B5E_g, auto3A346B5E_u);
        if (auto3A346B5E_var == null) { break; }
        UnitPauseAll(false);
    }
    PingDestroy(gv_riverWalkPing);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    FogSetStartHeight(-16.0);
    GameSetLighting("Elsecaro", 0.0);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundStop(DataTableGetSound(true, "AirRaid"), true);
    UnitSetOwner(gv_aPC, gv_pLAYER_05_POLICE_NEUTRAL, true);
    libNtve_gf_ShowHideUnit(gv_aPC, false);
    auto2FD18064_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2FD18064_u = UnitGroupCount(auto2FD18064_g, c_unitCountAll);
    for (;; auto2FD18064_u -= 1) {
        auto2FD18064_var = UnitGroupUnitFromEnd(auto2FD18064_g, auto2FD18064_u);
        if (auto2FD18064_var == null) { break; }
        UnitSetPosition(auto2FD18064_var, RegionRandomPoint(RegionFromId(181)), false);
        libNtve_gf_ChangeUnitDamage(auto2FD18064_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    UnitSetPosition(gv_riverWalkRexTheEngineer, PointFromId(1345274123), false);
    RegionPlayableMapSet(RegionFromId(179));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(461556177), 0.0, -1, 10.0, true);
    Wait(1.0, c_timeGame);
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "KorhalBuilding");
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    TriggerEnable(gt_RiverWalkSectionZergAttackDavis, true);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/54B9D765"));
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2RiverwalkSewerAmbience", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    autoC217878A_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC217878A_u = UnitGroupCount(autoC217878A_g, c_unitCountAll);
    for (;; autoC217878A_u -= 1) {
        autoC217878A_var = UnitGroupUnitFromEnd(autoC217878A_g, autoC217878A_u);
        if (autoC217878A_var == null) { break; }
        UnitPauseAll(true);
    }
    Wait(3.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    TriggerExecute(gt_RiverWalkSectionDescend4, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionDescend3_Init () {
    gt_RiverWalkSectionDescend3 = TriggerCreate("gt_RiverWalkSectionDescend3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Descend 4
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionDescend4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitFacePoint(gv_riverWalkRexTheEngineer, UnitGetPosition(gv_myraDavis), 1.0);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_riverWalkRexTheEngineer), 1.0);
    UnitBehaviorAdd(gv_riverWalkRexTheEngineer, "SuppressCollision", gv_myraDavis, 1);
    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_RiverWalkSectionDescend5, true, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00196", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00197", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_RiverWalkSectionDescend5, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionDescend4_Init () {
    gt_RiverWalkSectionDescend4 = TriggerCreate("gt_RiverWalkSectionDescend4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Descend 5
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionDescend5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoCBDEC893_g;
    int autoCBDEC893_u;
    unit autoCBDEC893_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionClearAll();
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 2.0);
    UnitSetState(gv_myraDavis, c_unitStateFidget, true);
    UnitSetState(gv_riverWalkRexTheEngineer, c_unitStateFidget, true);
    Wait(2.0, c_timeReal);
    autoCBDEC893_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCBDEC893_u = UnitGroupCount(autoCBDEC893_g, c_unitCountAll);
    for (;; autoCBDEC893_u -= 1) {
        autoCBDEC893_var = UnitGroupUnitFromEnd(autoCBDEC893_g, autoCBDEC893_u);
        if (autoCBDEC893_var == null) { break; }
        UnitPauseAll(false);
    }
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    UnitSetOwner(gv_riverWalkRexTheEngineer, gv_pLAYER_03_CIVILIANS, true);
    UnitSetPropertyFixed(gv_riverWalkRexTheEngineer, c_unitPropBaseMovementSpeed, 2.5);
    libNtve_gf_ShareVisionofUnit(gv_riverWalkRexTheEngineer, true, gv_pLAYER_01_USER);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(831692101)), c_orderQueueReplace);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    TriggerExecute(gt_TipPowerGrid, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns2, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns3, true, false);
    Wait(20.0, c_timeReal);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_TerranMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/83A3D26E"), PointFromId(228702585));
    gv_riverWalkReticle1 = libNtve_gf_ActorLastCreated();
    gv_riverWalkReticleText1 = TextTagLastCreated();
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionDescend5_Init () {
    gt_RiverWalkSectionDescend5 = TriggerCreate("gt_RiverWalkSectionDescend5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Random Zerg Spawns
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionRandomZergSpawns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoF1F1E20F_n;
    int autoF1F1E20F_i;

    // Actions
    if (!runActions) {
        return true;
    }

    autoF1F1E20F_n = lib1926661B_gf_DifficultyValueInteger(50, 120);
    for (autoF1F1E20F_i = 1; autoF1F1E20F_i <= autoF1F1E20F_n; autoF1F1E20F_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(183)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        Wait(RandomFixed(lib1926661B_gf_DifficultyValueReal(4.0, 2.0), lib1926661B_gf_DifficultyValueReal(8.0, 4.0)), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionRandomZergSpawns_Init () {
    gt_RiverWalkSectionRandomZergSpawns = TriggerCreate("gt_RiverWalkSectionRandomZergSpawns_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Random Zerg Spawns 2
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionRandomZergSpawns2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoCADCAC83_n;
    int autoCADCAC83_i;

    // Actions
    if (!runActions) {
        return true;
    }

    autoCADCAC83_n = lib1926661B_gf_DifficultyValueInteger(50, 120);
    for (autoCADCAC83_i = 1; autoCADCAC83_i <= autoCADCAC83_n; autoCADCAC83_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(183)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        Wait(RandomFixed(lib1926661B_gf_DifficultyValueReal(4.0, 2.0), lib1926661B_gf_DifficultyValueReal(8.0, 4.0)), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionRandomZergSpawns2_Init () {
    gt_RiverWalkSectionRandomZergSpawns2 = TriggerCreate("gt_RiverWalkSectionRandomZergSpawns2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Random Zerg Spawns 3
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionRandomZergSpawns3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto98C8B99A_n;
    int auto98C8B99A_i;

    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) >= lib1926661B_gf_DifficultyValueInteger(13, 6)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto98C8B99A_n = lib1926661B_gf_DifficultyValueInteger(4, 7);
    for (auto98C8B99A_i = 1; auto98C8B99A_i <= auto98C8B99A_n; auto98C8B99A_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "HydraliskBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(183)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        Wait(RandomFixed(6.0, 9.0), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionRandomZergSpawns3_Init () {
    gt_RiverWalkSectionRandomZergSpawns3 = TriggerCreate("gt_RiverWalkSectionRandomZergSpawns3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Random Zerg Spawns 4
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionRandomZergSpawns4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoFECE6CCB_n;
    int autoFECE6CCB_i;

    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) >= lib1926661B_gf_DifficultyValueInteger(17, 9)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoFECE6CCB_n = lib1926661B_gf_DifficultyValueInteger(1, 3);
    for (autoFECE6CCB_i = 1; autoFECE6CCB_i <= autoFECE6CCB_n; autoFECE6CCB_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoachBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(183)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        Wait(RandomFixed(8.0, 11.0), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionRandomZergSpawns4_Init () {
    gt_RiverWalkSectionRandomZergSpawns4 = TriggerCreate("gt_RiverWalkSectionRandomZergSpawns4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Timer Starts
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionTimerStarts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_riverWalkSectionActive == 2))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_CIVILIANS))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00198", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TimerStart(gv_riverWalkTimer, 255.0, false, c_timeGame);
    gv_riverWalkTimer = TimerLastStarted();
    lib1926661B_gf_CreateTimerWindowLotC(TimerLastStarted(), StringExternal("Param/Value/34AD247D"), true, false, 1);
    Wait(RandomInt(5, 8), c_timeGame);
    TriggerExecute(gt_RiverWalkSectionFirstZergUnburrow, true, false);
    Wait(30.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionFirstPowerOutage, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionTimerStarts_Init () {
    gt_RiverWalkSectionTimerStarts = TriggerCreate("gt_RiverWalkSectionTimerStarts_Func");
    TriggerAddEventUnitRegion(gt_RiverWalkSectionTimerStarts, null, RegionFromId(182), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section First Zerg Unburrow
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionFirstZergUnburrow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5B6C1975_g;
    int auto5B6C1975_u;
    unit auto5B6C1975_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto5B6C1975_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(179), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5B6C1975_u = UnitGroupCount(auto5B6C1975_g, c_unitCountAll);
    for (;; auto5B6C1975_u -= 1) {
        auto5B6C1975_var = UnitGroupUnitFromEnd(auto5B6C1975_g, auto5B6C1975_u);
        if (auto5B6C1975_var == null) { break; }
        UnitSetOwner(auto5B6C1975_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto5B6C1975_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto5B6C1975_var, OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_riverWalkDavisUnit), c_orderQueueReplace);
        Wait(RandomFixed(0.2, 0.5), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionFirstZergUnburrow_Init () {
    gt_RiverWalkSectionFirstZergUnburrow = TriggerCreate("gt_RiverWalkSectionFirstZergUnburrow_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section First Power Outage
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionFirstPowerOutage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto3B526730_g;
    int auto3B526730_u;
    unit auto3B526730_var;
    int autoA4219165_n;
    int autoA4219165_i;
    unitgroup auto84A3B7D9_g;
    int auto84A3B7D9_u;
    unit auto84A3B7D9_var;
    unitgroup auto5B98F186_g;
    int auto5B98F186_u;
    unit auto5B98F186_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D79694E9"));
    Wait(7.0, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    GameSetLighting("IceWorld", 0.0);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns2);
    auto3B526730_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3B526730_u = UnitGroupCount(auto3B526730_g, c_unitCountAll);
    for (;; auto3B526730_u -= 1) {
        auto3B526730_var = UnitGroupUnitFromEnd(auto3B526730_g, auto3B526730_u);
        if (auto3B526730_var == null) { break; }
        UnitPauseAll(true);
    }
    SoundPlayForPlayer(SoundLink("M2RiverwalkSewerPowerDown", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    Wait(0.5, c_timeGame);
    autoA4219165_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
    for (autoA4219165_i = 1; autoA4219165_i <= autoA4219165_n; autoA4219165_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 2), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(183)));
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(4, 9), "Zergling", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(183)));
    SoundPlayForPlayer(SoundLink("M2HydraDies1", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(2.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicZerglingGrowl", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(6.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundPlayForPlayer(SoundLink("M2RiverwalkSewerPowerUp", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2RiverwalkSewerAmbience", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/93F3E9B1"));
    GameSetLighting("Elsecaro", 0.0);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 0.0);
    UISetMiniMapCameraFoVVisible(true);
    auto84A3B7D9_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto84A3B7D9_u = UnitGroupCount(auto84A3B7D9_g, c_unitCountAll);
    for (;; auto84A3B7D9_u -= 1) {
        auto84A3B7D9_var = UnitGroupUnitFromEnd(auto84A3B7D9_g, auto84A3B7D9_u);
        if (auto84A3B7D9_var == null) { break; }
        UnitPauseAll(false);
    }
    auto5B98F186_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(179), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5B98F186_u = UnitGroupCount(auto5B98F186_g, c_unitCountAll);
    for (;; auto5B98F186_u -= 1) {
        auto5B98F186_var = UnitGroupUnitFromEnd(auto5B98F186_g, auto5B98F186_u);
        if (auto5B98F186_var == null) { break; }
        UnitSetOwner(auto5B98F186_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto5B98F186_var, OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_riverWalkDavisUnit), c_orderQueueReplace);
    }
    Wait(4.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00088", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(16.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns2, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns3, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns4, true, false);
    TriggerExecute(gt_RiverWalkSectionZergDoorSpawnSewer, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionFirstPowerOutage_Init () {
    gt_RiverWalkSectionFirstPowerOutage = TriggerCreate("gt_RiverWalkSectionFirstPowerOutage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Door Spawn Sewer
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergDoorSpawnSewer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoEC4BAC48_n;
    int autoEC4BAC48_i;
    const int auto7248B69A_n = 10;
    int auto7248B69A_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00199", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(228702585)), c_orderQueueReplace);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    autoEC4BAC48_n = lib1926661B_gf_DifficultyValueInteger(6, 14);
    for (autoEC4BAC48_i = 1; autoEC4BAC48_i <= autoEC4BAC48_n; autoEC4BAC48_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 2), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(730733841));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_riverWalkDavisUnit), c_orderQueueReplace);
        Wait(0.6, c_timeGame);
    }
    UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(228702585)), c_orderQueueReplace);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    Wait(2.0, c_timeGame);
    for (auto7248B69A_i = 1; auto7248B69A_i <= auto7248B69A_n; auto7248B69A_i += 1) {
        UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(228702585)), c_orderQueueReplace);
        UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
        Wait(2.0, c_timeGame);
    }
    libNtve_gf_KillModel(gv_riverWalkReticle1);
    TextTagDestroy(gv_riverWalkReticleText1);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_TerranMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/65A22669"), PointFromId(515827119));
    gv_riverWalkReticle2 = libNtve_gf_ActorLastCreated();
    gv_riverWalkReticleText2 = TextTagLastCreated();
    Wait(20.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionSecondPowerOutage, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergDoorSpawnSewer_Init () {
    gt_RiverWalkSectionZergDoorSpawnSewer = TriggerCreate("gt_RiverWalkSectionZergDoorSpawnSewer_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Second Power Outage
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionSecondPowerOutage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto290AEA18_g;
    int auto290AEA18_u;
    unit auto290AEA18_var;
    int auto00E4468B_n;
    int auto00E4468B_i;
    int auto0E2A8733_n;
    int auto0E2A8733_i;
    unitgroup auto4153F6DB_g;
    int auto4153F6DB_u;
    unit auto4153F6DB_var;
    unitgroup auto5CA76EBC_g;
    int auto5CA76EBC_u;
    unit auto5CA76EBC_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/FBCE0A9A"));
    Wait(7.0, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    GameSetLighting("IceWorld", 0.0);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns2);
    auto290AEA18_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto290AEA18_u = UnitGroupCount(auto290AEA18_g, c_unitCountAll);
    for (;; auto290AEA18_u -= 1) {
        auto290AEA18_var = UnitGroupUnitFromEnd(auto290AEA18_g, auto290AEA18_u);
        if (auto290AEA18_var == null) { break; }
        UnitPauseAll(true);
    }
    SoundPlayForPlayer(SoundLink("M2RiverwalkSewerPowerDown", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    Wait(0.5, c_timeGame);
    auto00E4468B_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto00E4468B_i = 1; auto00E4468B_i <= auto00E4468B_n; auto00E4468B_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 2), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(183)));
    }
    auto0E2A8733_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto0E2A8733_i = 1; auto0E2A8733_i <= auto0E2A8733_n; auto0E2A8733_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(183)));
    }
    Wait(2.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicZerglingRoar", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(6.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("M2RiverwalkSewerPowerUp", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2RiverwalkSewerAmbience", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/D67B1CDF"));
    GameSetLighting("Elsecaro", 0.0);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 0.0);
    auto4153F6DB_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto4153F6DB_u = UnitGroupCount(auto4153F6DB_g, c_unitCountAll);
    for (;; auto4153F6DB_u -= 1) {
        auto4153F6DB_var = UnitGroupUnitFromEnd(auto4153F6DB_g, auto4153F6DB_u);
        if (auto4153F6DB_var == null) { break; }
        UnitPauseAll(false);
    }
    auto5CA76EBC_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(179), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5CA76EBC_u = UnitGroupCount(auto5CA76EBC_g, c_unitCountAll);
    for (;; auto5CA76EBC_u -= 1) {
        auto5CA76EBC_var = UnitGroupUnitFromEnd(auto5CA76EBC_g, auto5CA76EBC_u);
        if (auto5CA76EBC_var == null) { break; }
        UnitSetOwner(auto5CA76EBC_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto5CA76EBC_var, OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_riverWalkDavisUnit), c_orderQueueReplace);
    }
    Wait(11.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns2, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns3, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns4, true, false);
    TriggerExecute(gt_RiverWalkSectionZergDoorSpawnSewer2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionSecondPowerOutage_Init () {
    gt_RiverWalkSectionSecondPowerOutage = TriggerCreate("gt_RiverWalkSectionSecondPowerOutage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Door Spawn Sewer 2
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergDoorSpawnSewer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00200", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(515827119)), c_orderQueueReplace);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    libNtve_gf_KillModel(gv_riverWalkReticle2);
    TextTagDestroy(gv_riverWalkReticleText2);
    Wait(35.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionFinalPowerOutage, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergDoorSpawnSewer2_Init () {
    gt_RiverWalkSectionZergDoorSpawnSewer2 = TriggerCreate("gt_RiverWalkSectionZergDoorSpawnSewer2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Final Power Outage
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionFinalPowerOutage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto126AE8CE_g;
    int auto126AE8CE_u;
    unit auto126AE8CE_var;
    int auto0AE2FD56_n;
    int auto0AE2FD56_i;
    int auto981356FA_n;
    int auto981356FA_i;
    unitgroup auto2A313A7E_g;
    int auto2A313A7E_u;
    unit auto2A313A7E_var;
    unitgroup autoDAF85402_g;
    int autoDAF85402_u;
    unit autoDAF85402_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/EBA909F1"));
    Wait(7.0, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    GameSetLighting("IceWorld", 0.0);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns2);
    auto126AE8CE_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto126AE8CE_u = UnitGroupCount(auto126AE8CE_g, c_unitCountAll);
    for (;; auto126AE8CE_u -= 1) {
        auto126AE8CE_var = UnitGroupUnitFromEnd(auto126AE8CE_g, auto126AE8CE_u);
        if (auto126AE8CE_var == null) { break; }
        UnitPauseAll(true);
    }
    SoundPlayForPlayer(SoundLink("M2RiverwalkSewerPowerDown", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    Wait(0.5, c_timeGame);
    auto0AE2FD56_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto0AE2FD56_i = 1; auto0AE2FD56_i <= auto0AE2FD56_n; auto0AE2FD56_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 2), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(183)));
    }
    auto981356FA_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto981356FA_i = 1; auto981356FA_i <= auto981356FA_n; auto981356FA_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(183)));
    }
    Wait(2.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2ZergRoar3", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(6.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2RiverwalkSewerAmbience", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    SoundPlayForPlayer(SoundLink("M2RiverwalkSewerPowerUp", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/EE429ECB"));
    GameSetLighting("Elsecaro", 0.0);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 0.0);
    auto2A313A7E_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2A313A7E_u = UnitGroupCount(auto2A313A7E_g, c_unitCountAll);
    for (;; auto2A313A7E_u -= 1) {
        auto2A313A7E_var = UnitGroupUnitFromEnd(auto2A313A7E_g, auto2A313A7E_u);
        if (auto2A313A7E_var == null) { break; }
        UnitPauseAll(false);
    }
    autoDAF85402_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(179), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDAF85402_u = UnitGroupCount(autoDAF85402_g, c_unitCountAll);
    for (;; autoDAF85402_u -= 1) {
        autoDAF85402_var = UnitGroupUnitFromEnd(autoDAF85402_g, autoDAF85402_u);
        if (autoDAF85402_var == null) { break; }
        UnitSetOwner(autoDAF85402_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(autoDAF85402_var, OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_riverWalkDavisUnit), c_orderQueueReplace);
    }
    Wait(11.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns2, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns3, true, false);
    TriggerExecute(gt_RiverWalkSectionRandomZergSpawns4, true, false);
    TriggerExecute(gt_RiverWalkSectionZergDoorSpawnSewer3, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionFinalPowerOutage_Init () {
    gt_RiverWalkSectionFinalPowerOutage = TriggerCreate("gt_RiverWalkSectionFinalPowerOutage_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Zerg Door Spawn Sewer 3
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionZergDoorSpawnSewer3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto2A9F6D24_n;
    int auto2A9F6D24_i;
    const int auto2F5B1C67_n = 10;
    int auto2F5B1C67_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) < 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(515827119)), c_orderQueueReplace);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    auto2A9F6D24_n = lib1926661B_gf_DifficultyValueInteger(5, 12);
    for (auto2A9F6D24_i = 1; auto2A9F6D24_i <= auto2A9F6D24_n; auto2A9F6D24_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 2), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(730733841));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_riverWalkDavisUnit), c_orderQueueReplace);
        Wait(0.3, c_timeGame);
    }
    UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(515827119)), c_orderQueueReplace);
    UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    Wait(2.0, c_timeGame);
    for (auto2F5B1C67_i = 1; auto2F5B1C67_i <= auto2F5B1C67_n; auto2F5B1C67_i += 1) {
        UnitIssueOrder(gv_riverWalkRexTheEngineer, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(515827119)), c_orderQueueReplace);
        UnitIssueOrder(gv_riverWalkRexTheEngineer, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
        Wait(2.0, c_timeGame);
    }
    Wait(35.0, c_timeGame);
    TriggerExecute(gt_RiverWalkSectionFinalPowerOutage, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionZergDoorSpawnSewer3_Init () {
    gt_RiverWalkSectionZergDoorSpawnSewer3 = TriggerCreate("gt_RiverWalkSectionZergDoorSpawnSewer3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: River Walk Section Victory
//--------------------------------------------------------------------------------------------------
bool gt_RiverWalkSectionVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC9A29CC9_g;
    int autoC9A29CC9_u;
    unit autoC9A29CC9_var;
    unitgroup auto751E3D4F_g;
    int auto751E3D4F_u;
    unit auto751E3D4F_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00201", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns);
    TriggerStop(gt_RiverWalkSectionRandomZergSpawns2);
    TriggerEnable(gt_RiverWalkSectionZergAttackDavis, false);
    TriggerEnable(gt_RiverWalkSectionRandomZergSpawns, false);
    TriggerEnable(gt_RiverWalkSectionRandomZergSpawns2, false);
    autoC9A29CC9_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC9A29CC9_u = UnitGroupCount(autoC9A29CC9_g, c_unitCountAll);
    for (;; autoC9A29CC9_u -= 1) {
        autoC9A29CC9_var = UnitGroupUnitFromEnd(autoC9A29CC9_g, autoC9A29CC9_u);
        if (autoC9A29CC9_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(autoC9A29CC9_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    auto751E3D4F_g = UnitGroup("UPLEngineer", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto751E3D4F_u = UnitGroupCount(auto751E3D4F_g, c_unitCountAll);
    for (;; auto751E3D4F_u -= 1) {
        auto751E3D4F_var = UnitGroupUnitFromEnd(auto751E3D4F_g, auto751E3D4F_u);
        if (auto751E3D4F_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto751E3D4F_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    ObjectiveDestroy(gv_riverWalkClearThreats);
    ObjectiveSetState(gv_riverWalkCityEngineer, c_objectiveStateCompleted);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/9F33E5D2"));
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropMovementSpeed, 3.375);
    Wait(4.0, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00089", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00090", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00091", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    Wait(0.5, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00202", null, true, gv_riverWalkRexTheEngineer, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerEnable(gt_RiverWalkSectionZergAttackDavis, false);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionEntireMap(), "KorhalBuilding");
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    TriggerExecute(gt_SWATVanSectionSetup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiverWalkSectionVictory_Init () {
    gt_RiverWalkSectionVictory = TriggerCreate("gt_RiverWalkSectionVictory_Func");
    TriggerAddEventTimer(gt_RiverWalkSectionVictory, gv_riverWalkTimer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Units
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9C461A1F_g;
    int auto9C461A1F_u;
    unit auto9C461A1F_var;
    unitgroup autoC31A3904_g;
    int autoC31A3904_u;
    unit autoC31A3904_var;
    unitgroup auto71C5E0A6_g;
    int auto71C5E0A6_u;
    unit auto71C5E0A6_var;
    unitgroup autoAC309A92_g;
    int autoAC309A92_u;
    unit autoAC309A92_var;
    unitgroup auto955738B3_g;
    int auto955738B3_u;
    unit auto955738B3_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(1721063265), true);
    gv_swatVanSectionVanUnit = UnitFromId(1721063265);
    UnitSetOwner(gv_swatVanSectionVanUnit, gv_pLAYER_02_POLICE, true);
    UnitRemove(gv_riverWalkRexTheEngineer);
    UnitRemove(UnitFromId(420143744));
    auto9C461A1F_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9C461A1F_u = UnitGroupCount(auto9C461A1F_g, c_unitCountAll);
    for (;; auto9C461A1F_u -= 1) {
        auto9C461A1F_var = UnitGroupUnitFromEnd(auto9C461A1F_g, auto9C461A1F_u);
        if (auto9C461A1F_var == null) { break; }
        UnitSetPosition(auto9C461A1F_var, RegionRandomPoint(RegionFromId(185)), false);
        UnitIssueOrder(auto9C461A1F_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    autoC31A3904_g = gv_riverWalkDavisUnit;
    autoC31A3904_u = UnitGroupCount(autoC31A3904_g, c_unitCountAll);
    for (;; autoC31A3904_u -= 1) {
        autoC31A3904_var = UnitGroupUnitFromEnd(autoC31A3904_g, autoC31A3904_u);
        if (autoC31A3904_var == null) { break; }
        UnitSetPosition(autoC31A3904_var, RegionRandomPoint(RegionFromId(185)), false);
        UnitIssueOrder(autoC31A3904_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    auto71C5E0A6_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto71C5E0A6_u = UnitGroupCount(auto71C5E0A6_g, c_unitCountAll);
    for (;; auto71C5E0A6_u -= 1) {
        auto71C5E0A6_var = UnitGroupUnitFromEnd(auto71C5E0A6_g, auto71C5E0A6_u);
        if (auto71C5E0A6_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto71C5E0A6_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    UnitSetPosition(gv_myraDavis, libNtve_gf_PointFacingAngle(PointFromId(145442333), 270.0), false);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_ShowHideUnit(gv_aPC, true);
    UnitSetPosition(gv_aPC, libNtve_gf_PointFacingAngle(PointFromId(1321640365), 270.0), false);
    autoAC309A92_g = UnitGroup("APC", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoAC309A92_u = UnitGroupCount(autoAC309A92_g, c_unitCountAll);
    for (;; autoAC309A92_u -= 1) {
        autoAC309A92_var = UnitGroupUnitFromEnd(autoAC309A92_g, autoAC309A92_u);
        if (autoAC309A92_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(autoAC309A92_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    UnitSetOwner(gv_aPC, gv_pLAYER_01_USER, true);
    libNtve_gf_ChangeUnitDamage(gv_aPC, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    auto955738B3_g = UnitGroup(null, c_playerAny, RegionFromId(179), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto955738B3_u = UnitGroupCount(auto955738B3_g, c_unitCountAll);
    for (;; auto955738B3_u -= 1) {
        auto955738B3_var = UnitGroupUnitFromEnd(auto955738B3_g, auto955738B3_u);
        if (auto955738B3_var == null) { break; }
        UnitKill(auto955738B3_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionUnits_Init () {
    gt_SWATVanSectionUnits = TriggerCreate("gt_SWATVanSectionUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Setup
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_swatVanSectionActive = 1;
    FogSetStartHeight(-2.0);
    GameSetLighting("MeinhoffCampaignNight", 0.0);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(264), "GenericFire_Large");
    RegionPlayableMapSet(RegionFromId(186));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1797575874), 0.0, -1, 10.0, true);
    TriggerEnable(gt_DefeatSWATVanDead, true);
    TriggerEnable(gt_SWATVanSectionZergAttackVan, true);
    TriggerExecute(gt_SWATVanSectionUnits, true, false);
    VisRevealerDestroy(gv_riverWalkSewerRevealer);
    CinematicFade(true, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2Part2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    Wait(1.4, c_timeGame);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingCircle", PointFromId(638695746), ColorWithAlpha(50.20, 100.00, 100.00, 0.00), 9999.0, 315.0);
    PingSetUnit(PingLastCreated(), UnitFromId(1721063265));
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/58BC5234"));
    PingSetScale(PingLastCreated(), 0.55);
    gv_swatVanSectionMovingPing = PingLastCreated();
    SoundPlayForPlayer(SoundLink("M2SwatVanEngineStart", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitBehaviorAdd(gv_swatVanSectionVanUnit, "SuppressCollision", gv_swatVanSectionVanUnit, 1);
    Wait(7.0, c_timeReal);
    ObjectiveCreate(StringExternal("Param/Value/19FBC049"), StringExternal("Param/Value/1043B8EF"), c_objectiveStateActive, true);
    gv_swatVanSectionObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_swatVanSectionObjective, PlayerGroupAll(), true);
    TriggerEnable(gt_SWATVanEnRouteTripwire, true);
    libNtve_gf_ShareVisionofUnit(gv_swatVanSectionVanUnit, true, gv_pLAYER_01_USER);
    TriggerExecute(gt_SWATVanMoveOut, true, false);
    lib1926661B_gf_FlashCheckpointReminder();
    Wait(7.0, c_timeGame);
    TriggerExecute(gt_SWATVanEAS, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionSetup_Init () {
    gt_SWATVanSectionSetup = TriggerCreate("gt_SWATVanSectionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van EAS
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanEAS_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_swatVanSectionActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2EBSTone", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/006A2C5B"));
    Wait(10.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 30.0, 0.0);
    lib1926661B_gf_EarnAudiologLore("M02P1-EMS2");
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00092", null, true, null, false);
    SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    SoundPlayForPlayer(SoundLink("M2DistantSirens12", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanEAS_Init () {
    gt_SWATVanEAS = TriggerCreate("gt_SWATVanEAS_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Move Out
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanMoveOut_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto789DE8E1_g;
    int auto789DE8E1_u;
    unit auto789DE8E1_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto789DE8E1_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(229), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto789DE8E1_u = UnitGroupCount(auto789DE8E1_g, c_unitCountAll);
    for (;; auto789DE8E1_u -= 1) {
        auto789DE8E1_var = UnitGroupUnitFromEnd(auto789DE8E1_g, auto789DE8E1_u);
        if (auto789DE8E1_var == null) { break; }
        UnitRemove(auto789DE8E1_var);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1464291580));
    gv_swatVanSectionGuard1 = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(633239429));
    gv_swatVanSectionGuard2 = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLDetectiveFemale", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(591350471));
    gv_swatVanSectionGuard3 = UnitLastCreated();
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerPistol", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerRifle", UnitLastCreated(), 1);
    UnitSetState(UnitFromId(1721063265), c_unitStateTurnSuppressed, true);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1495356876)), c_orderQueueReplace);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(916363582)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(471631691)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1418681815)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1927818456)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(35481577)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(419997948)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(394435930)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1674005423)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1801353952)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1850190347)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanMoveOut_Init () {
    gt_SWATVanMoveOut = TriggerCreate("gt_SWATVanMoveOut_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Arrives
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanArrives_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF14EBB04_g;
    int autoF14EBB04_u;
    unit autoF14EBB04_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_swatVanSectionVanUnit == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    autoF14EBB04_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF14EBB04_u = UnitGroupCount(autoF14EBB04_g, c_unitCountAll);
    for (;; autoF14EBB04_u -= 1) {
        autoF14EBB04_var = UnitGroupUnitFromEnd(autoF14EBB04_g, autoF14EBB04_u);
        if (autoF14EBB04_var == null) { break; }
        UnitSetPosition(autoF14EBB04_var, RegionRandomPoint(RegionFromId(331)), false);
        UnitIssueOrder(autoF14EBB04_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(1619764200), true);
    libNtve_gf_ShowHideUnit(UnitFromId(180072103), true);
    Wait(0.5, c_timeGame);
    CinematicFade(true, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(6501234), 3.0, -1, 10.0, true);
    ObjectiveSetName(gv_swatVanSectionObjective, StringExternal("Param/Value/2E86B35D"));
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/090834C4"));
    Wait(2.0, c_timeGame);
    libNtve_gf_RescueUnit(UnitFromId(1619764200), gv_pLAYER_01_USER, true);
    libNtve_gf_RescueUnit(UnitFromId(180072103), gv_pLAYER_01_USER, true);
    Wait(4.0, c_timeGame);
    libVCUI_gf_HideCampaignDirective();
    TriggerExecute(gt_SWATVanSectionZergSpawns, true, false);
    TriggerExecute(gt_SWATVanSectionCiviliansRunningtoVan, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanArrives_Init () {
    gt_SWATVanArrives = TriggerCreate("gt_SWATVanArrives_Func");
    TriggerAddEventUnitRegion(gt_SWATVanArrives, null, RegionFromId(332), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van En Route Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanEnRouteTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto1EEB1E8B_n;
    int auto1EEB1E8B_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((EventUnit() == gv_myraDavis) || (UnitGetType(EventUnit()) == "SwatVan")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto1EEB1E8B_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto1EEB1E8B_i = 1; auto1EEB1E8B_i <= auto1EEB1E8B_n; auto1EEB1E8B_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(88)), 90.0);
        UnitGroupAdd(gv_swatVanSectionZergGroup, UnitLastCreated());
        Wait(0.2, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanEnRouteTripwire_Init () {
    gt_SWATVanEnRouteTripwire = TriggerCreate("gt_SWATVanEnRouteTripwire_Func");
    TriggerEnable(gt_SWATVanEnRouteTripwire, false);
    TriggerAddEventUnitRegion(gt_SWATVanEnRouteTripwire, null, RegionFromId(87), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Zerg Spawns
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionZergSpawns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto8D857E2A_n;
    int auto8D857E2A_i;
    const int auto6AD957D6_n = 1;
    int auto6AD957D6_i;
    int autoF41E69A2_n;
    int autoF41E69A2_i;
    int autoED7C1F2F_n;
    int autoED7C1F2F_i;
    int auto381DD1D5_n;
    int auto381DD1D5_i;
    int auto0B9F75AF_n;
    int auto0B9F75AF_i;
    const int auto3F4A3BFA_n = 1;
    int auto3F4A3BFA_i;
    int autoA35D2287_n;
    int autoA35D2287_i;
    int auto95DFFA67_n;
    int auto95DFFA67_i;
    int auto08E9E957_n;
    int auto08E9E957_i;
    const int auto8DD78076_n = 3;
    int auto8DD78076_i;
    fixed autoDEFEE59D_at;
    int auto8F67B3D2_n;
    int auto8F67B3D2_i;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto8D857E2A_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto8D857E2A_i = 1; auto8D857E2A_i <= auto8D857E2A_n; auto8D857E2A_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(80)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        Wait(0.3, c_timeGame);
    }
    Wait(8.0, c_timeGame);
    for (auto6AD957D6_i = 1; auto6AD957D6_i <= auto6AD957D6_n; auto6AD957D6_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(82)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
    }
    autoF41E69A2_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
    for (autoF41E69A2_i = 1; autoF41E69A2_i <= autoF41E69A2_n; autoF41E69A2_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(83)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        Wait(0.45, c_timeGame);
    }
    Wait(5.0, c_timeGame);
    autoED7C1F2F_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
    for (autoED7C1F2F_i = 1; autoED7C1F2F_i <= autoED7C1F2F_n; autoED7C1F2F_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(81)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        Wait(0.45, c_timeGame);
    }
    Wait(5.0, c_timeGame);
    auto381DD1D5_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto381DD1D5_i = 1; auto381DD1D5_i <= auto381DD1D5_n; auto381DD1D5_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(80)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        Wait(0.45, c_timeGame);
    }
    auto0B9F75AF_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto0B9F75AF_i = 1; auto0B9F75AF_i <= auto0B9F75AF_n; auto0B9F75AF_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(81)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
    }
    Wait(9.0, c_timeGame);
    for (auto3F4A3BFA_i = 1; auto3F4A3BFA_i <= auto3F4A3BFA_n; auto3F4A3BFA_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(82)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
    }
    Wait(5.0, c_timeGame);
    autoA35D2287_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (autoA35D2287_i = 1; autoA35D2287_i <= autoA35D2287_n; autoA35D2287_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(83)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        Wait(0.33, c_timeGame);
    }
    Wait(5.0, c_timeGame);
    auto95DFFA67_n = lib1926661B_gf_DifficultyValueInteger(0, 1);
    for (auto95DFFA67_i = 1; auto95DFFA67_i <= auto95DFFA67_n; auto95DFFA67_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(82)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueAddToEnd);
    }
    auto08E9E957_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto08E9E957_i = 1; auto08E9E957_i <= auto08E9E957_n; auto08E9E957_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(81)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        Wait(0.45, c_timeGame);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(82)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        Wait(0.33, c_timeGame);
    }
    Wait(7.0, c_timeGame);
    for (auto8DD78076_i = 1; auto8DD78076_i <= auto8DD78076_n; auto8DD78076_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(83)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        Wait(0.45, c_timeGame);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(88)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    TriggerStop(gt_SWATVanSectionCiviliansRunningtoVan);
    Wait(1.5, c_timeGame);
    autoDEFEE59D_at = 0;
    while (!((UnitIsAlive(gv_swatVanSectionCivilianLoadingUnit) == false)) && autoDEFEE59D_at <= 5.0) {
        Wait(0.1, c_timeGame);
        autoDEFEE59D_at = autoDEFEE59D_at + 0.1;
    }
    UnitRemove(gv_swatVanSectionCivilianLoadingUnit);
    auto8F67B3D2_n = lib1926661B_gf_DifficultyValueInteger(3, 8);
    for (auto8F67B3D2_i = 1; auto8F67B3D2_i <= auto8F67B3D2_n; auto8F67B3D2_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(81)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(82)), 90.0);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1850190347)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    TriggerDestroy(gt_SWATVanSectionCiviliansRunningtoVan);
    TriggerDestroy(gt_SWATVanSectionZergAttackVan);
    TriggerEnable(gt_SWATVanSectionGuard1LoadsUp, true);
    TriggerEnable(gt_SWATVanSectionGuard2LoadsUp, true);
    TriggerEnable(gt_SWATVanSectionGuard3LoadsUp, true);
    Wait(2.7, c_timeGame);
    TriggerExecute(gt_SWATVanSectionVictory, true, false);
    Wait(1.8, c_timeGame);
    libNtve_gf_ChangeUnitDamage(UnitFromId(1721063265), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    TriggerExecute(gt_SWATVanReturnstoHQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionZergSpawns_Init () {
    gt_SWATVanSectionZergSpawns = TriggerCreate("gt_SWATVanSectionZergSpawns_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Returns to HQ
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanReturnstoHQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_swatVanRemoveJourney = true;
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1801353952)), c_orderQueueReplace);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1674005423)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(394435930)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(419997948)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(35481577)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1927818456)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1418681815)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(471631691)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(916363582)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1495356876)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_swatVanSectionVanUnit, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(638695746)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanReturnstoHQ_Init () {
    gt_SWATVanReturnstoHQ = TriggerCreate("gt_SWATVanReturnstoHQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Removal
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanRemoval_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_swatVanSectionVanUnit == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_swatVanRemoveJourney == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    TriggerEnable(gt_SWATVanSectionGuard1LoadsUp, false);
    TriggerEnable(gt_SWATVanSectionGuard2LoadsUp, false);
    TriggerEnable(gt_SWATVanSectionGuard3LoadsUp, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanRemoval_Init () {
    gt_SWATVanRemoval = TriggerCreate("gt_SWATVanRemoval_Func");
    TriggerAddEventUnitRegion(gt_SWATVanRemoval, null, RegionFromId(330), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Guard 1 Loads Up
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionGuard1LoadsUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_swatVanSectionGuard1, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_swatVanSectionVanUnit)), c_orderQueueReplace);
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_swatVanSectionVanUnit), UnitGetPosition(gv_swatVanSectionGuard1)) < 1.0))) {
        Wait(0.3, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionGuard1LoadsUp_Init () {
    gt_SWATVanSectionGuard1LoadsUp = TriggerCreate("gt_SWATVanSectionGuard1LoadsUp_Func");
    TriggerEnable(gt_SWATVanSectionGuard1LoadsUp, false);
    TriggerAddEventTimePeriodic(gt_SWATVanSectionGuard1LoadsUp, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Guard 2 Loads Up
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionGuard2LoadsUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_swatVanSectionGuard2, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_swatVanSectionVanUnit)), c_orderQueueReplace);
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_swatVanSectionVanUnit), UnitGetPosition(gv_swatVanSectionGuard2)) < 1.0))) {
        Wait(0.3, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionGuard2LoadsUp_Init () {
    gt_SWATVanSectionGuard2LoadsUp = TriggerCreate("gt_SWATVanSectionGuard2LoadsUp_Func");
    TriggerEnable(gt_SWATVanSectionGuard2LoadsUp, false);
    TriggerAddEventTimePeriodic(gt_SWATVanSectionGuard2LoadsUp, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Guard 3 Loads Up
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionGuard3LoadsUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_swatVanSectionGuard3, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_swatVanSectionVanUnit)), c_orderQueueReplace);
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_swatVanSectionVanUnit), UnitGetPosition(gv_swatVanSectionGuard3)) < 1.0))) {
        Wait(0.3, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionGuard3LoadsUp_Init () {
    gt_SWATVanSectionGuard3LoadsUp = TriggerCreate("gt_SWATVanSectionGuard3LoadsUp_Func");
    TriggerEnable(gt_SWATVanSectionGuard3LoadsUp, false);
    TriggerAddEventTimePeriodic(gt_SWATVanSectionGuard3LoadsUp, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Civilians Running to Van
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionCiviliansRunningtoVan_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_swatVanSectionActive == 1))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1721063265)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, PointFromId(1062157945));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    gv_swatVanSectionCivilianLoadingUnit = UnitLastCreated();
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    UnitIssueOrder(gv_swatVanSectionCivilianLoadingUnit, OrderTargetingUnit(AbilityCommand("move", 0), gv_swatVanSectionVanUnit), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionCiviliansRunningtoVan_Init () {
    gt_SWATVanSectionCiviliansRunningtoVan = TriggerCreate("gt_SWATVanSectionCiviliansRunningtoVan_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Civilians Loading to Van
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionCiviliansLoadingtoVan_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "UPLCivilianFemale"))) {
            return false;
        }

        if (!((gv_swatVanSectionActive == 1))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1721063265)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(RandomFixed(2.2, 3.0), c_timeGame);
    UnitRemove(gv_swatVanSectionCivilianLoadingUnit);
    SoundPlayForPlayer(SoundLink("Hut_Load", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(RandomFixed(3.5, 6.9), c_timeGame);
    TriggerExecute(gt_SWATVanDavisSaysMove, true, false);
    TriggerExecute(gt_SWATVanSectionCiviliansRunningtoVan, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionCiviliansLoadingtoVan_Init () {
    gt_SWATVanSectionCiviliansLoadingtoVan = TriggerCreate("gt_SWATVanSectionCiviliansLoadingtoVan_Func");
    TriggerAddEventUnitRegion(gt_SWATVanSectionCiviliansLoadingtoVan, null, RegionFromId(187), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Davis Says Move
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanDavisSaysMove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_TipLoadingVan, true, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00093", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanDavisSaysMove_Init () {
    gt_SWATVanDavisSaysMove = TriggerCreate("gt_SWATVanDavisSaysMove_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Zerg Attack Van
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionZergAttackVan_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(gv_swatVanSectionVanUnit) == true)) {
        UnitGroupIssueOrder(gv_swatVanSectionZergGroup, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_swatVanSectionVanUnit)), c_orderQueueReplace);
    }
    else {
        UnitGroupIssueOrder(gv_swatVanSectionZergGroup, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionZergAttackVan_Init () {
    gt_SWATVanSectionZergAttackVan = TriggerCreate("gt_SWATVanSectionZergAttackVan_Func");
    TriggerEnable(gt_SWATVanSectionZergAttackVan, false);
    TriggerAddEventTimePeriodic(gt_SWATVanSectionZergAttackVan, 0.33, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SWAT Van Section Victory
//--------------------------------------------------------------------------------------------------
bool gt_SWATVanSectionVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("UI_ObjectiveComplete", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveDestroy(gv_riverWalkCityEngineer);
    ObjectiveSetState(gv_swatVanSectionObjective, c_objectiveStateCompleted);
    PingDestroy(gv_swatVanSectionMovingPing);
    libNtve_gf_ShareVisionofUnit(gv_swatVanSectionVanUnit, false, 1);
    libNtve_gf_ChangeUnitDamage(gv_swatVanSectionVanUnit, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    TriggerEnable(gt_DefeatSWATVanDead, false);
    TriggerEnable(gt_SWATVanSectionZergAttackVan, false);
    TriggerExecute(gt_ConstructionYardSectionSetup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SWATVanSectionVictory_Init () {
    gt_SWATVanSectionVictory = TriggerCreate("gt_SWATVanSectionVictory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Section Setup
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardSectionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ArtifactBoomBoom, true);
    libNtve_gf_ShowHideUnit(UnitFromId(856538293), true);
    TriggerEnable(gt_ConstructionYardArrive, true);
    gv_constructionYardSectionActive = 1;
    CameraLockInput(1, false);
    RegionPlayableMapSet(RegionFromId(2));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(220504684), 12.0, -1, 10.0, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00094", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/765156A1"));
    TriggerExecute(gt_ConstructionYardUnits, true, false);
    Wait(4.0, c_timeGame);
    ObjectiveCreate(StringExternal("Param/Value/CB840478"), StringToText(""), c_objectiveStateActive, true);
    gv_constructionYardMoveToOfficers = ObjectiveLastCreated();
    ObjectiveShow(gv_constructionYardMoveToOfficers, PlayerGroupAll(), true);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingObjective", RegionGetCenter(RegionFromId(1)), ColorWithAlpha(50.20, 100.00, 0.00, 0.00), 999.0, 270.0);
    gv_constructionYardPing = PingLastCreated();
    PingSetTooltip(gv_constructionYardPing, StringExternal("Param/Value/53EB1C20"));
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardSectionSetup_Init () {
    gt_ConstructionYardSectionSetup = TriggerCreate("gt_ConstructionYardSectionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Arrive
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardArrive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto66C99B91_g;
    int auto66C99B91_u;
    unit auto66C99B91_var;
    unitgroup auto0BD19BCB_g;
    int auto0BD19BCB_u;
    unit auto0BD19BCB_var;
    const int auto156263F3_n = 3;
    int auto156263F3_i;
    unitgroup auto3F3148E6_g;
    int auto3F3148E6_u;
    unit auto3F3148E6_var;
    unitgroup auto09C6D5CA_g;
    int auto09C6D5CA_u;
    unit auto09C6D5CA_var;
    unitgroup autoB5B1400E_g;
    int autoB5B1400E_u;
    unit autoB5B1400E_var;
    fixed autoF9BDED06_at;
    unitgroup auto037FD549_g;
    int auto037FD549_u;
    unit auto037FD549_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_constructionYardSectionActive == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_constructionYardPing);
    UnitSetState(gv_myraDavis, c_unitStateInvulnerable, true);
    libNtve_gf_MakeUnitUncommandable(gv_myraDavis, true);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitClearSelection(gv_pLAYER_01_USER);
    CinematicFade(false, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    auto66C99B91_g = UnitGroup("ExplodingBarrelLarge", c_playerAny, RegionFromId(1), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto66C99B91_u = UnitGroupCount(auto66C99B91_g, c_unitCountAll);
    for (;; auto66C99B91_u -= 1) {
        auto66C99B91_var = UnitGroupUnitFromEnd(auto66C99B91_g, auto66C99B91_u);
        if (auto66C99B91_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto66C99B91_var, false);
        libNtve_gf_ChangeUnitDamage(auto66C99B91_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    auto0BD19BCB_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0BD19BCB_u = UnitGroupCount(auto0BD19BCB_g, c_unitCountAll);
    for (;; auto0BD19BCB_u -= 1) {
        auto0BD19BCB_var = UnitGroupUnitFromEnd(auto0BD19BCB_g, auto0BD19BCB_u);
        if (auto0BD19BCB_var == null) { break; }
        UnitSetPosition(auto0BD19BCB_var, UnitGetPosition(gv_myraDavis), false);
    }
    libNtve_gf_MakeUnitUncommandable(gv_myraDavis, false);
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(85));
    gv_parkReveal = VisRevealerLastCreated();
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationImmediate);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(618956414), 0.0, -1, 10.0, true);
    Wait(1.0, c_timeGame);
    CinematicFade(true, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(0.66, c_timeGame);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(359307460), 4.0, -1, 10.0, true);
    for (auto156263F3_i = 1; auto156263F3_i <= auto156263F3_n; auto156263F3_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.25, 1.0), c_timeGame);
    }
    UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    auto3F3148E6_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3F3148E6_u = UnitGroupCount(auto3F3148E6_g, c_unitCountAll);
    for (;; auto3F3148E6_u -= 1) {
        auto3F3148E6_var = UnitGroupUnitFromEnd(auto3F3148E6_g, auto3F3148E6_u);
        if (auto3F3148E6_var == null) { break; }
        UnitIssueOrder(auto3F3148E6_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1390074654)), c_orderQueueReplace);
    }
    Wait(1.5, c_timeGame);
    auto09C6D5CA_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto09C6D5CA_u = UnitGroupCount(auto09C6D5CA_g, c_unitCountAll);
    for (;; auto09C6D5CA_u -= 1) {
        auto09C6D5CA_var = UnitGroupUnitFromEnd(auto09C6D5CA_g, auto09C6D5CA_u);
        if (auto09C6D5CA_var == null) { break; }
        UnitIssueOrder(auto09C6D5CA_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1390074654)), c_orderQueueReplace);
    }
    UnitCreate(1, "HydraliskBurrowed", 0, 4, RegionRandomPoint(RegionFromId(86)), 270.0);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    Wait(0.75, c_timeGame);
    autoB5B1400E_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB5B1400E_u = UnitGroupCount(autoB5B1400E_g, c_unitCountAll);
    for (;; autoB5B1400E_u -= 1) {
        autoB5B1400E_var = UnitGroupUnitFromEnd(autoB5B1400E_g, autoB5B1400E_u);
        if (autoB5B1400E_var == null) { break; }
        UnitIssueOrder(autoB5B1400E_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1390074654)), c_orderQueueReplace);
    }
    autoF9BDED06_at = 0;
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_myraDavis), PointFromId(1390074654)) < 3.0)) && autoF9BDED06_at <= 6.0) {
        Wait(0.44, c_timeGame);
        autoF9BDED06_at = autoF9BDED06_at + 0.44;
    }
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1615656338), 2.2, -1, 10.0, true);
    Wait(0.44, c_timeGame);
    CameraLockInput(1, true);
    ObjectiveSetState(gv_constructionYardMoveToOfficers, c_objectiveStateCompleted);
    ObjectiveDestroy(gv_swatVanSectionObjective);
    ObjectiveCreate(StringExternal("Param/Value/1FED3B8B"), StringToText(""), c_objectiveStateActive, true);
    gv_constructionYardOfficersLive = ObjectiveLastCreated();
    ObjectiveShow(gv_constructionYardOfficersLive, PlayerGroupAll(), true);
    TriggerExecute(gt_TipBoomBoom, true, false);
    UnitSetState(gv_myraDavis, c_unitStateInvulnerable, false);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationDefault);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    auto037FD549_g = UnitGroup("APC", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto037FD549_u = UnitGroupCount(auto037FD549_g, c_unitCountAll);
    for (;; auto037FD549_u -= 1) {
        auto037FD549_var = UnitGroupUnitFromEnd(auto037FD549_g, auto037FD549_u);
        if (auto037FD549_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto037FD549_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    TriggerEnable(gt_ConstructionYardZergTargetOfficers, true);
    TriggerExecute(gt_ConstructionYardAttackWaves, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardArrive_Init () {
    gt_ConstructionYardArrive = TriggerCreate("gt_ConstructionYardArrive_Func");
    TriggerEnable(gt_ConstructionYardArrive, false);
    TriggerAddEventUnitRegion(gt_ConstructionYardArrive, null, RegionFromId(85), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Units
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoB15E5FFF_g;
    int autoB15E5FFF_u;
    unit autoB15E5FFF_var;
    unitgroup auto781DA6BF_g;
    int auto781DA6BF_u;
    unit auto781DA6BF_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoB15E5FFF_g = UnitGroup("ExplodingBarrelLarge", c_playerAny, RegionFromId(1), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoB15E5FFF_u = UnitGroupCount(autoB15E5FFF_g, c_unitCountAll);
    for (;; autoB15E5FFF_u -= 1) {
        autoB15E5FFF_var = UnitGroupUnitFromEnd(autoB15E5FFF_g, autoB15E5FFF_u);
        if (autoB15E5FFF_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoB15E5FFF_var, true);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(471247181), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1796183197), true);
    libNtve_gf_ShowHideUnit(UnitFromId(2140304394), true);
    libNtve_gf_ShowHideUnit(UnitFromId(295891017), true);
    auto781DA6BF_g = UnitGroup(null, gv_pLAYER_05_POLICE_NEUTRAL, RegionFromId(192), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto781DA6BF_u = UnitGroupCount(auto781DA6BF_g, c_unitCountAll);
    for (;; auto781DA6BF_u -= 1) {
        auto781DA6BF_var = UnitGroupUnitFromEnd(auto781DA6BF_g, auto781DA6BF_u);
        if (auto781DA6BF_var == null) { break; }
        UnitSetOwner(auto781DA6BF_var, gv_pLAYER_02_POLICE, true);
        UnitGroupAdd(gv_constructionYardOfficerGroup, auto781DA6BF_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardUnits_Init () {
    gt_ConstructionYardUnits = TriggerCreate("gt_ConstructionYardUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Move To Unburrow
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardMoveToUnburrow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5363F0B9_g;
    int auto5363F0B9_u;
    unit auto5363F0B9_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_constructionYardSectionActive == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto5363F0B9_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(84), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5363F0B9_u = UnitGroupCount(auto5363F0B9_g, c_unitCountAll);
    for (;; auto5363F0B9_u -= 1) {
        auto5363F0B9_var = UnitGroupUnitFromEnd(auto5363F0B9_g, auto5363F0B9_u);
        if (auto5363F0B9_var == null) { break; }
        UnitSetOwner(auto5363F0B9_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto5363F0B9_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto5363F0B9_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto5363F0B9_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(auto5363F0B9_var, "ColonistWander", gv_myraDavis, 1);
        Wait(RandomFixed(0.5, 1.5), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardMoveToUnburrow_Init () {
    gt_ConstructionYardMoveToUnburrow = TriggerCreate("gt_ConstructionYardMoveToUnburrow_Func");
    TriggerAddEventUnitRegion(gt_ConstructionYardMoveToUnburrow, null, RegionFromId(84), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Move To Unburrow 2
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardMoveToUnburrow2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto2F8A6D69_g;
    int auto2F8A6D69_u;
    unit auto2F8A6D69_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_constructionYardSectionActive == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto2F8A6D69_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(188), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2F8A6D69_u = UnitGroupCount(auto2F8A6D69_g, c_unitCountAll);
    for (;; auto2F8A6D69_u -= 1) {
        auto2F8A6D69_var = UnitGroupUnitFromEnd(auto2F8A6D69_g, auto2F8A6D69_u);
        if (auto2F8A6D69_var == null) { break; }
        UnitSetOwner(auto2F8A6D69_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto2F8A6D69_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto2F8A6D69_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto2F8A6D69_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(auto2F8A6D69_var, "ColonistWander", gv_myraDavis, 1);
        Wait(RandomFixed(0.5, 1.5), c_timeGame);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardMoveToUnburrow2_Init () {
    gt_ConstructionYardMoveToUnburrow2 = TriggerCreate("gt_ConstructionYardMoveToUnburrow2_Func");
    TriggerAddEventUnitRegion(gt_ConstructionYardMoveToUnburrow2, null, RegionFromId(188), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Attack Waves
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardAttackWaves_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_marine1;
    unit lv_marine2;

    // Automatic Variable Declarations
    int autoAC66FC7C_n;
    int autoAC66FC7C_i;
    int auto681DB335_n;
    int auto681DB335_i;
    int autoFAEDE7D8_n;
    int autoFAEDE7D8_i;
    int auto0CD814C0_n;
    int auto0CD814C0_i;
    fixed auto1AD39512_at;
    int auto22BE66D8_n;
    int auto22BE66D8_i;
    int autoE099CB90_n;
    int autoE099CB90_i;
    int auto0D59064D_n;
    int auto0D59064D_i;
    int autoD66A7B5B_n;
    int autoD66A7B5B_i;
    fixed auto6DAA2313_at;
    int auto76F88B20_n;
    int auto76F88B20_i;
    const int autoAC5BC1D4_n = 3;
    int autoAC5BC1D4_i;
    int autoF71B8CDD_n;
    int autoF71B8CDD_i;
    fixed auto93B7A39E_at;
    int auto56EEBCED_n;
    int auto56EEBCED_i;
    int autoBDE704C2_n;
    int autoBDE704C2_i;
    fixed autoC0B99AA3_at;
    const int autoF27ACB09_n = 1;
    int autoF27ACB09_i;
    int auto4315F852_n;
    int auto4315F852_i;
    fixed auto1614A332_at;
    const int autoF266C2B1_n = 1;
    int autoF266C2B1_i;
    fixed auto3192A1C5_at;
    int autoD2E738FA_n;
    int autoD2E738FA_i;
    fixed autoC01E7B27_at;
    int auto8C705381_n;
    int auto8C705381_i;
    fixed autoCBC58633_at;
    int auto1938AD6D_n;
    int auto1938AD6D_i;
    fixed auto6F343C14_at;
    const int auto6FD98F34_n = 1;
    int auto6FD98F34_i;
    int autoB90422B8_n;
    int autoB90422B8_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoAC66FC7C_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (autoAC66FC7C_i = 1; autoAC66FC7C_i <= autoAC66FC7C_n; autoAC66FC7C_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.1, c_timeGame);
    }
    Wait(2.0, c_timeGame);
    auto681DB335_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
    for (auto681DB335_i = 1; auto681DB335_i <= auto681DB335_n; auto681DB335_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(1.0, 2.0), c_timeGame);
    }
    Wait(7.0, c_timeGame);
    autoFAEDE7D8_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (autoFAEDE7D8_i = 1; autoFAEDE7D8_i <= autoFAEDE7D8_n; autoFAEDE7D8_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(92)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.1, c_timeGame);
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(91)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.1, c_timeGame);
    }
    Wait(4.0, c_timeGame);
    auto0CD814C0_n = lib1926661B_gf_DifficultyValueInteger(1, 3);
    for (auto0CD814C0_i = 1; auto0CD814C0_i <= auto0CD814C0_n; auto0CD814C0_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.0, 0.2), c_timeGame);
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.0, 0.2), c_timeGame);
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(94)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    auto1AD39512_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto1AD39512_at <= 7.3) {
        Wait(0.25, c_timeGame);
        auto1AD39512_at = auto1AD39512_at + 0.25;
    }
    auto22BE66D8_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto22BE66D8_i = 1; auto22BE66D8_i <= auto22BE66D8_n; auto22BE66D8_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(90)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.25, c_timeGame);
    }
    Wait(4.0, c_timeGame);
    autoE099CB90_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (autoE099CB90_i = 1; autoE099CB90_i <= autoE099CB90_n; autoE099CB90_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(91)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    Wait(6.0, c_timeGame);
    auto0D59064D_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto0D59064D_i = 1; auto0D59064D_i <= auto0D59064D_n; auto0D59064D_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(90)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.25, c_timeGame);
    }
    Wait(5.0, c_timeGame);
    autoD66A7B5B_n = lib1926661B_gf_DifficultyValueInteger(2, 3);
    for (autoD66A7B5B_i = 1; autoD66A7B5B_i <= autoD66A7B5B_n; autoD66A7B5B_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.25, 1.0), c_timeGame);
    }
    auto6DAA2313_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto6DAA2313_at <= 7.0) {
        Wait(0.25, c_timeGame);
        auto6DAA2313_at = auto6DAA2313_at + 0.25;
    }
    auto76F88B20_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (auto76F88B20_i = 1; auto76F88B20_i <= auto76F88B20_n; auto76F88B20_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(91)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    Wait(5.0, c_timeGame);
    for (autoAC5BC1D4_i = 1; autoAC5BC1D4_i <= autoAC5BC1D4_n; autoAC5BC1D4_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.25, 0.7), c_timeGame);
    }
    Wait(5.0, c_timeGame);
    autoF71B8CDD_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
    for (autoF71B8CDD_i = 1; autoF71B8CDD_i <= autoF71B8CDD_n; autoF71B8CDD_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    auto93B7A39E_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto93B7A39E_at <= 7.0) {
        Wait(0.25, c_timeGame);
        auto93B7A39E_at = auto93B7A39E_at + 0.25;
    }
    Wait(5.0, c_timeGame);
    auto56EEBCED_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (auto56EEBCED_i = 1; auto56EEBCED_i <= auto56EEBCED_n; auto56EEBCED_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.0, 0.2), c_timeGame);
    }
    Wait(4.5, c_timeGame);
    autoBDE704C2_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (autoBDE704C2_i = 1; autoBDE704C2_i <= autoBDE704C2_n; autoBDE704C2_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(90)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.15, c_timeGame);
    }
    Wait(6.0, c_timeGame);
    autoC0B99AA3_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && autoC0B99AA3_at <= 6.2) {
        Wait(0.25, c_timeGame);
        autoC0B99AA3_at = autoC0B99AA3_at + 0.25;
    }
    for (autoF27ACB09_i = 1; autoF27ACB09_i <= autoF27ACB09_n; autoF27ACB09_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionGetCenter(RegionFromId(91)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    Wait(6.0, c_timeGame);
    auto4315F852_n = lib1926661B_gf_DifficultyValueInteger(1, 3);
    for (auto4315F852_i = 1; auto4315F852_i <= auto4315F852_n; auto4315F852_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionGetCenter(RegionFromId(91)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    auto1614A332_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto1614A332_at <= 12.5) {
        Wait(0.25, c_timeGame);
        auto1614A332_at = auto1614A332_at + 0.25;
    }
    for (autoF266C2B1_i = 1; autoF266C2B1_i <= autoF266C2B1_n; autoF266C2B1_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionGetCenter(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    auto3192A1C5_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto3192A1C5_at <= 12.5) {
        Wait(0.25, c_timeGame);
        auto3192A1C5_at = auto3192A1C5_at + 0.25;
    }
    autoD2E738FA_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
    for (autoD2E738FA_i = 1; autoD2E738FA_i <= autoD2E738FA_n; autoD2E738FA_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionGetCenter(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    autoC01E7B27_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && autoC01E7B27_at <= 13.0) {
        Wait(0.25, c_timeGame);
        autoC01E7B27_at = autoC01E7B27_at + 0.25;
    }
    auto8C705381_n = lib1926661B_gf_DifficultyValueInteger(11, 26);
    for (auto8C705381_i = 1; auto8C705381_i <= auto8C705381_n; auto8C705381_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    autoCBC58633_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && autoCBC58633_at <= 7.0) {
        Wait(0.25, c_timeGame);
        autoCBC58633_at = autoCBC58633_at + 0.25;
    }
    auto1938AD6D_n = lib1926661B_gf_DifficultyValueInteger(8, 18);
    for (auto1938AD6D_i = 1; auto1938AD6D_i <= auto1938AD6D_n; auto1938AD6D_i += 1) {
        UnitCreate(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    auto6F343C14_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto6F343C14_at <= 10.5) {
        Wait(0.25, c_timeGame);
        auto6F343C14_at = auto6F343C14_at + 0.25;
    }
    TriggerExecute(gt_ConstructionYardUPLArrives, true, false);
    for (auto6FD98F34_i = 1; auto6FD98F34_i <= auto6FD98F34_n; auto6FD98F34_i += 1) {
        UnitCreate(1, "Hydralisk", 0, 4, RegionGetCenter(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.06, c_timeGame);
    }
    autoB90422B8_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (autoB90422B8_i = 1; autoB90422B8_i <= autoB90422B8_n; autoB90422B8_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.0, 0.2), c_timeGame);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardAttackWaves_Init () {
    gt_ConstructionYardAttackWaves = TriggerCreate("gt_ConstructionYardAttackWaves_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Move To Osprey
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardMoveToOsprey_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_constructionYardSectionActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitCreate(1, "Osprey", 0, gv_pLAYER_05_POLICE_NEUTRAL, PointFromId(942160082), 270.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 4.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropHeight, 9.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1972732096)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicNewsCopterFlyby", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardMoveToOsprey_Init () {
    gt_ConstructionYardMoveToOsprey = TriggerCreate("gt_ConstructionYardMoveToOsprey_Func");
    TriggerAddEventUnitRegion(gt_ConstructionYardMoveToOsprey, null, RegionFromId(190), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Osprey Despawn
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardOspreyDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Osprey"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardOspreyDespawn_Init () {
    gt_ConstructionYardOspreyDespawn = TriggerCreate("gt_ConstructionYardOspreyDespawn_Func");
    TriggerAddEventUnitRegion(gt_ConstructionYardOspreyDespawn, null, RegionFromId(189), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard UPL Arrives
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardUPLArrives_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto41392B83_n = 4;
    int auto41392B83_i;
    const int auto72A82995_n = 3;
    int auto72A82995_i;
    const int auto062677FA_n = 9;
    int auto062677FA_i;
    const int auto621F274E_n = 6;
    int auto621F274E_i;
    int autoD9005493_n;
    int autoD9005493_i;
    int autoDEB6593C_n;
    int autoDEB6593C_i;
    int autoA714A3DE_n;
    int autoA714A3DE_i;
    int auto28AAD849_n;
    int auto28AAD849_i;
    int auto540290D1_n;
    int auto540290D1_i;
    const int autoF359D797_n = 2;
    int autoF359D797_i;
    int auto66282361_n;
    int auto66282361_i;
    int autoD02228B2_n;
    int autoD02228B2_i;
    fixed auto5477E3E4_at;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_constructionYardSectionActive = 0;
    gv_constructionYardUPLArrives = 1;
    TriggerEnable(gt_ConstructionYardZergTargetOfficers, false);
    TriggerEnable(gt_ConstructionYardZergTargetUPL, true);
    SoundPlayForPlayer(SoundLink("SoundDirective", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/78567924"));
    for (auto41392B83_i = 1; auto41392B83_i <= auto41392B83_n; auto41392B83_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(91)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(283836078)), c_orderQueueReplace);
        Wait(RandomFixed(0.3, 0.6), c_timeGame);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoutheTank", 0, gv_pLAYER_02_POLICE, PointFromId(749287407));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(191))), c_orderQueueReplace);
    Wait(RandomFixed(0.7, 0.9), c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoutheTank", 0, gv_pLAYER_02_POLICE, PointFromId(1251928306));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(191))), c_orderQueueReplace);
    for (auto72A82995_i = 1; auto72A82995_i <= auto72A82995_n; auto72A82995_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.25, c_timeGame);
    }
    Wait(2.0, c_timeGame);
    libVCUI_gf_HideCampaignDirective();
    for (auto062677FA_i = 1; auto062677FA_i <= auto062677FA_n; auto062677FA_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.25, 0.4), c_timeGame);
        UnitCreate(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    Wait(5.0, c_timeGame);
    for (auto621F274E_i = 1; auto621F274E_i <= auto621F274E_n; auto621F274E_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(91)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(283836078)), c_orderQueueReplace);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(91)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(283836078)), c_orderQueueReplace);
    }
    autoD9005493_n = lib1926661B_gf_DifficultyValueInteger(6, 15);
    for (autoD9005493_i = 1; autoD9005493_i <= autoD9005493_n; autoD9005493_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.1, c_timeGame);
    }
    Wait(3.0, c_timeGame);
    autoDEB6593C_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (autoDEB6593C_i = 1; autoDEB6593C_i <= autoDEB6593C_n; autoDEB6593C_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.3, c_timeGame);
    }
    autoA714A3DE_n = lib1926661B_gf_DifficultyValueInteger(1, 3);
    for (autoA714A3DE_i = 1; autoA714A3DE_i <= autoA714A3DE_n; autoA714A3DE_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionGetCenter(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    Wait(4.0, c_timeGame);
    auto28AAD849_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto28AAD849_i = 1; auto28AAD849_i <= auto28AAD849_n; auto28AAD849_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.3, c_timeGame);
    }
    Wait(3.0, c_timeGame);
    auto540290D1_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
    for (auto540290D1_i = 1; auto540290D1_i <= auto540290D1_n; auto540290D1_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(92)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.3, c_timeGame);
    }
    UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(90)), 90.0);
    UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    Wait(3.25, c_timeGame);
    for (autoF359D797_i = 1; autoF359D797_i <= autoF359D797_n; autoF359D797_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionGetCenter(RegionFromId(90)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    auto66282361_n = lib1926661B_gf_DifficultyValueInteger(6, 13);
    for (auto66282361_i = 1; auto66282361_i <= auto66282361_n; auto66282361_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(90)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.15, c_timeGame);
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    Wait(3.3, c_timeGame);
    autoD02228B2_n = lib1926661B_gf_DifficultyValueInteger(2, 4);
    for (autoD02228B2_i = 1; autoD02228B2_i <= autoD02228B2_n; autoD02228B2_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionGetCenter(RegionFromId(92)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    auto5477E3E4_at = 0;
    while (!((libNtve_gf_UnitGroupIsDead(gv_constructionYardZergGroup) == true)) && auto5477E3E4_at <= 99.0) {
        Wait(0.25, c_timeGame);
        auto5477E3E4_at = auto5477E3E4_at + 0.25;
    }
    TriggerExecute(gt_ConstructionYardEscorttoStation, true, false);
    TriggerEnable(gt_ConstructionYardZergTargetUPL, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardUPLArrives_Init () {
    gt_ConstructionYardUPLArrives = TriggerCreate("gt_ConstructionYardUPLArrives_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Zerg Target Officers
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardZergTargetOfficers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_constructionYardSectionActive == 1))) {
            return false;
        }

        if (!((gv_constructionYardUPLArrives == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupIssueOrder(gv_constructionYardZergGroup, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1390074654)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardZergTargetOfficers_Init () {
    gt_ConstructionYardZergTargetOfficers = TriggerCreate("gt_ConstructionYardZergTargetOfficers_Func");
    TriggerEnable(gt_ConstructionYardZergTargetOfficers, false);
    TriggerAddEventTimePeriodic(gt_ConstructionYardZergTargetOfficers, 0.6, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Zerg Target UPL
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardZergTargetUPL_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_constructionYardSectionActive == 0))) {
            return false;
        }

        if (!((gv_constructionYardUPLArrives == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupIssueOrder(gv_constructionYardZergGroup, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(283836078)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardZergTargetUPL_Init () {
    gt_ConstructionYardZergTargetUPL = TriggerCreate("gt_ConstructionYardZergTargetUPL_Func");
    TriggerEnable(gt_ConstructionYardZergTargetUPL, false);
    TriggerAddEventTimePeriodic(gt_ConstructionYardZergTargetUPL, 0.6, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Escort to Station
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardEscorttoStation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoEFED3CD6_n;
    int autoEFED3CD6_i;
    unitgroup auto239A786D_g;
    int auto239A786D_u;
    unit auto239A786D_var;
    unitgroup auto66DA11B7_g;
    int auto66DA11B7_u;
    unit auto66DA11B7_var;
    const int autoC8C1551C_n = 2;
    int autoC8C1551C_i;
    int autoDD6DD469_n;
    int autoDD6DD469_i;
    int auto229454BE_n;
    int auto229454BE_i;
    int autoD0F1A2A0_n;
    int autoD0F1A2A0_i;
    int autoCE4AE187_n;
    int autoCE4AE187_i;
    int auto7CB13B84_n;
    int auto7CB13B84_i;
    int autoB2DD9C29_n;
    int autoB2DD9C29_i;
    int auto352C4EF7_n;
    int auto352C4EF7_i;
    int autoE9DCEBAE_n;
    int autoE9DCEBAE_i;

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_constructionYardPing);
    ObjectiveDestroy(gv_constructionYardMoveToOfficers);
    ObjectiveSetState(gv_constructionYardOfficersLive, c_objectiveStateCompleted);
    ObjectiveCreate(StringExternal("Param/Value/5ED2B753"), StringToText(""), c_objectiveStateActive, true);
    gv_constructionYardEscortOfficers = ObjectiveLastCreated();
    ObjectiveShow(gv_constructionYardEscortOfficers, PlayerGroupAll(), true);
    VisRevealerDestroy(gv_parkReveal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1056417105), 3.0, -1, 10.0, true);
    Wait(2.0, c_timeGame);
    CameraLockInput(gv_pLAYER_01_USER, false);
    RegionPlayableMapSet(RegionFromId(193));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    autoEFED3CD6_n = lib1926661B_gf_DifficultyValueInteger(2, 7);
    for (autoEFED3CD6_i = 1; autoEFED3CD6_i <= autoEFED3CD6_n; autoEFED3CD6_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.25, 0.44), c_timeGame);
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(94)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(RandomFixed(0.25, 0.5), c_timeGame);
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(95)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
    }
    Wait(2.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/CFA4201A"));
    ObjectiveSetName(gv_constructionYardMoveToOfficers, StringExternal("Param/Value/B6F0BE38"));
    auto239A786D_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(85), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto239A786D_u = UnitGroupCount(auto239A786D_g, c_unitCountAll);
    for (;; auto239A786D_u -= 1) {
        auto239A786D_var = UnitGroupUnitFromEnd(auto239A786D_g, auto239A786D_u);
        if (auto239A786D_var == null) { break; }
        UnitIssueOrder(auto239A786D_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(260))), c_orderQueueReplace);
        libNtve_gf_ShareVisionofUnit(auto239A786D_var, true, gv_pLAYER_01_USER);
    }
    auto66DA11B7_g = UnitGroupFilter(null, c_playerAny, gv_constructionYardOfficerGroup, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto66DA11B7_u = UnitGroupCount(auto66DA11B7_g, c_unitCountAll);
    for (;; auto66DA11B7_u -= 1) {
        auto66DA11B7_var = UnitGroupUnitFromEnd(auto66DA11B7_g, auto66DA11B7_u);
        if (auto66DA11B7_var == null) { break; }
        UnitIssueOrder(auto66DA11B7_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(194))), c_orderQueueReplace);
    }
    for (autoC8C1551C_i = 1; autoC8C1551C_i <= autoC8C1551C_n; autoC8C1551C_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionGetCenter(RegionFromId(89)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
    }
    autoDD6DD469_n = lib1926661B_gf_DifficultyValueInteger(6, 12);
    for (autoDD6DD469_i = 1; autoDD6DD469_i <= autoDD6DD469_n; autoDD6DD469_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(96)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
        Wait(0.25, c_timeGame);
    }
    auto229454BE_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto229454BE_i = 1; auto229454BE_i <= auto229454BE_n; auto229454BE_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(92)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
    }
    autoD0F1A2A0_n = lib1926661B_gf_DifficultyValueInteger(4, 10);
    for (autoD0F1A2A0_i = 1; autoD0F1A2A0_i <= autoD0F1A2A0_n; autoD0F1A2A0_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(36)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
        Wait(0.25, c_timeGame);
    }
    Wait(10.0, c_timeGame);
    autoCE4AE187_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
    for (autoCE4AE187_i = 1; autoCE4AE187_i <= autoCE4AE187_n; autoCE4AE187_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(27)), 90.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
        Wait(0.25, c_timeGame);
    }
    Wait(3.0, c_timeGame);
    auto7CB13B84_n = lib1926661B_gf_DifficultyValueInteger(8, 16);
    for (auto7CB13B84_i = 1; auto7CB13B84_i <= auto7CB13B84_n; auto7CB13B84_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(49)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        Wait(0.2, c_timeGame);
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
    }
    autoB2DD9C29_n = lib1926661B_gf_DifficultyValueInteger(4, 9);
    for (autoB2DD9C29_i = 1; autoB2DD9C29_i <= autoB2DD9C29_n; autoB2DD9C29_i += 1) {
        UnitCreate(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(5)), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
    }
    Wait(4.0, c_timeGame);
    auto352C4EF7_n = lib1926661B_gf_DifficultyValueInteger(2, 4);
    for (auto352C4EF7_i = 1; auto352C4EF7_i <= auto352C4EF7_n; auto352C4EF7_i += 1) {
        UnitCreate(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, PointFromId(1799870089), 90.0);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
        UnitCreate(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(51)), 90.0);
    }
    autoE9DCEBAE_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (autoE9DCEBAE_i = 1; autoE9DCEBAE_i <= autoE9DCEBAE_n; autoE9DCEBAE_i += 1) {
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(93)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(779)), c_orderQueueReplace);
        Wait(RandomFixed(0.25, 0.4), c_timeGame);
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(86)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(779)), c_orderQueueReplace);
        UnitCreate(1, "ZerglingBurrowed", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(95)), 270.0);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_constructionYardZergGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(779)), c_orderQueueReplace);
        Wait(RandomFixed(0.25, 0.4), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardEscorttoStation_Init () {
    gt_ConstructionYardEscorttoStation = TriggerCreate("gt_ConstructionYardEscorttoStation_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Remove Officers at Station
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardRemoveOfficersatStation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGroupHasUnit(gv_constructionYardOfficerGroup, EventUnit()) == true))) {
            return false;
        }

        if (!((gv_constructionYardUPLArrives == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    gv_constructionYardOfficersRescued += 1;
    TriggerEnable(gt_DefeatConstructionOfficersDead, false);
    TriggerDestroy(gt_DefeatConstructionOfficersDead);
    TriggerExecute(gt_ConstructionYardVictory, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardRemoveOfficersatStation_Init () {
    gt_ConstructionYardRemoveOfficersatStation = TriggerCreate("gt_ConstructionYardRemoveOfficersatStation_Func");
    TriggerAddEventUnitRegion(gt_ConstructionYardRemoveOfficersatStation, null, RegionFromId(194), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Construction Yard Victory
//--------------------------------------------------------------------------------------------------
bool gt_ConstructionYardVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto1B5555B4_n = 50;
    int auto1B5555B4_i;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveDestroy(gv_constructionYardMoveToOfficers);
    ObjectiveSetState(gv_constructionYardEscortOfficers, c_objectiveStateCompleted);
    TriggerExecute(gt_UltraliskPreCinematic, true, false);
    for (auto1B5555B4_i = 1; auto1B5555B4_i <= auto1B5555B4_n; auto1B5555B4_i += 1) {
        PointSet(PointFromId(1390074654), UnitGetPosition(gv_myraDavis));
        Wait(2.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ConstructionYardVictory_Init () {
    gt_ConstructionYardVictory = TriggerCreate("gt_ConstructionYardVictory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Pre-Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskPreCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00098", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00099", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00100", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00101", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00102", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00103", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_UltraliskQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskPreCinematic_Init () {
    gt_UltraliskPreCinematic = TriggerCreate("gt_UltraliskPreCinematic_Func");
    TriggerAddEventChatMessage(gt_UltraliskPreCinematic, c_playerAny, "ultra", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Ultralisk Bossbar Show
//--------------------------------------------------------------------------------------------------
bool gt_BossUltraliskBossbarShow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == true)) {
        lib1926661B_gf_DisplayBossBarLotC(gv_bossUltralisk_Bossbar, StringExternal("Param/Value/9B946048"), "Assets\\Textures\\btn-unit-zerg-ultralisk.dds", gv_bossUltralisk_MaxLife, "Zerg");
        TriggerExecute(gt_BossUltraliskBossbarUpdate, false, false);
    }
    else {
        UnitSetPropertyFixed(gv_ultraliskUnit, c_unitPropLifeMax, 1250.0);
        lib1926661B_gf_DisplayBossBarLotC(gv_bossUltralisk_Bossbar, StringExternal("Param/Value/9F9423E4"), "Assets\\Textures\\btn-unit-zerg-ultralisk.dds", gv_bossUltralisk_MaxLife2, "Zerg");
        TriggerExecute(gt_BossUltraliskBossbarUpdate, false, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossUltraliskBossbarShow_Init () {
    gt_BossUltraliskBossbarShow = TriggerCreate("gt_BossUltraliskBossbarShow_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Ultralisk Bossbar Update
//--------------------------------------------------------------------------------------------------
bool gt_BossUltraliskBossbarUpdate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_ultraliskUnit) == true))) {
            return false;
        }

        if (!((EventUnit() == gv_ultraliskUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_SetBossBarCurrentValueLotC(gv_bossUltralisk_Bossbar, FixedToInt(UnitGetPropertyFixed(gv_ultraliskUnit, c_unitPropLife, c_unitPropCurrent)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossUltraliskBossbarUpdate_Init () {
    gt_BossUltraliskBossbarUpdate = TriggerCreate("gt_BossUltraliskBossbarUpdate_Func");
    TriggerAddEventUnitProperty(gt_BossUltraliskBossbarUpdate, null, c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Section Begins
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskSectionBegins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto1B6EAD88_g;
    int auto1B6EAD88_u;
    unit auto1B6EAD88_var;
    unitgroup auto82B4A03D_g;
    int auto82B4A03D_u;
    unit auto82B4A03D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_UltraliskReinforcements2, true);
    TriggerEnable(gt_UltraliskVictoryRuns, true);
    TriggerEnable(gt_UltraliskVictoryRuns2, true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "PathingBlocker4x4Diagonal", 0, 1, PointFromId(2141030243));
    gv_ultraliskPathBlockers[1] = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "PathingBlocker4x4Diagonal", 0, 1, PointFromId(1346305446));
    gv_ultraliskPathBlockers[2] = UnitLastCreated();
    gv_ultraliskSectionActive = 1;
    UnitSetPropertyFixed(gv_ultraliskUnit, c_unitPropLifePercent, 95.0);
    Wait(1.3, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00095", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_BossUltraliskBossbarShow, true, false);
    auto1B6EAD88_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(260), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1B6EAD88_u = UnitGroupCount(auto1B6EAD88_g, c_unitCountAll);
    for (;; auto1B6EAD88_u -= 1) {
        auto1B6EAD88_var = UnitGroupUnitFromEnd(auto1B6EAD88_g, auto1B6EAD88_u);
        if (auto1B6EAD88_var == null) { break; }
        UnitIssueOrder(auto1B6EAD88_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_ultraliskUnit)), c_orderQueueReplace);
    }
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingBoss", UnitGetPosition(gv_ultraliskUnit), ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.75);
    PingSetUnit(PingLastCreated(), gv_ultraliskUnit);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/AABE1438"));
    gv_ultraliskPing = PingLastCreated();
    Wait(0.33, c_timeGame);
    ObjectiveDestroy(gv_constructionYardOfficersLive);
    ObjectiveCreate(StringExternal("Param/Value/83E8D947"), StringExternal("Param/Value/5D6C3C53"), c_objectiveStateActive, true);
    gv_ultraliskObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_ultraliskObjective, PlayerGroupAll(), true);
    Wait(2.5, c_timeGame);
    auto82B4A03D_g = gv_ultralisk_Infantry;
    auto82B4A03D_u = UnitGroupCount(auto82B4A03D_g, c_unitCountAll);
    for (;; auto82B4A03D_u -= 1) {
        auto82B4A03D_var = UnitGroupUnitFromEnd(auto82B4A03D_g, auto82B4A03D_u);
        if (auto82B4A03D_var == null) { break; }
        libNtve_gf_ShareVisionofUnit(auto82B4A03D_var, false, gv_pLAYER_01_USER);
    }
    TriggerExecute(gt_TipGasTrucks, true, false);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingSimple", UnitGetPosition(UnitFromId(1516123329)), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/0633C29F"));
    libNtve_gf_ShareVisionofUnit(UnitFromId(1516123329), true, gv_pLAYER_01_USER);
    SoundPlayForPlayer(SoundLink("UI_PingAdvanced_Attack", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    PingSetScale(PingLastCreated(), 0.45);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_TerranMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/38AA93DF"), UnitGetPosition(UnitFromId(1516123329)));
    gv_ultraliskTruckReticle1 = libNtve_gf_ActorLastCreated();
    gv_ultraliskTruckReticleTextTag1 = TextTagLastCreated();
    gv_ultraliskGasTruckPing1 = PingLastCreated();
    Wait(0.5, c_timeGame);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingSimple", UnitGetPosition(UnitFromId(1469531919)), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/81BD50A2"));
    libNtve_gf_ShareVisionofUnit(UnitFromId(1469531919), true, gv_pLAYER_01_USER);
    SoundPlayForPlayer(SoundLink("UI_PingAdvanced_Attack", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    PingSetScale(PingLastCreated(), 0.45);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_TerranMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/7CB300EF"), UnitGetPosition(UnitFromId(1469531919)));
    gv_ultraliskTruckReticle2 = libNtve_gf_ActorLastCreated();
    gv_ultraliskTruckReticleTextTag2 = TextTagLastCreated();
    gv_ultraliskGasTruckPing2 = PingLastCreated();
    Wait(0.5, c_timeGame);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingSimple", UnitGetPosition(UnitFromId(930332417)), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/55F045A0"));
    libNtve_gf_ShareVisionofUnit(UnitFromId(930332417), true, gv_pLAYER_01_USER);
    SoundPlayForPlayer(SoundLink("UI_PingAdvanced_Attack", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    PingSetScale(PingLastCreated(), 0.45);
    gv_ultraliskGasTruckPing3 = PingLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_TerranMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/F8CD11B3"), UnitGetPosition(UnitFromId(930332417)));
    gv_ultraliskTruckReticle3 = libNtve_gf_ActorLastCreated();
    gv_ultraliskTruckReticleTextTag3 = TextTagLastCreated();
    Wait(0.5, c_timeGame);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingSimple", UnitGetPosition(UnitFromId(399483068)), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetTooltip(PingLastCreated(), StringExternal("Param/Value/42BD1068"));
    libNtve_gf_ShareVisionofUnit(UnitFromId(399483068), true, gv_pLAYER_01_USER);
    SoundPlayForPlayer(SoundLink("UI_PingAdvanced_Attack", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    PingSetScale(PingLastCreated(), 0.45);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_TerranMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/6A953A86"), UnitGetPosition(UnitFromId(399483068)));
    gv_ultraliskTruckReticle4 = libNtve_gf_ActorLastCreated();
    gv_ultraliskTruckReticleTextTag4 = TextTagLastCreated();
    gv_ultraliskGasTruckPing4 = PingLastCreated();
    while (true) {
        if ((UnitHasBehavior2(gv_ultraliskUnit, "YetiCharging") == true)) {
            Wait(1.0, c_timeGame);
        }
        else {
            UnitIssueOrder(gv_ultraliskUnit, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
            Wait(2.0, c_timeGame);
        }
    }
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskSectionBegins_Init () {
    gt_UltraliskSectionBegins = TriggerCreate("gt_UltraliskSectionBegins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Reinforcements Hard
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskReinforcementsHard_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rOLL;

    // Automatic Variable Declarations
    int autoAD554CA5_val;
    const int autoBA29D510_n = 8;
    int autoBA29D510_i;
    const int auto8674D4C1_n = 8;
    int auto8674D4C1_i;
    const int autoC4370B86_n = 8;
    int autoC4370B86_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_UltraliskReinforcements2, true);
    while (true) {
        Wait(RandomFixed(2.5, 5.0), c_timeGame);
        if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == true) && (((UnitGroupCount(gv_ultraliskZergSupportGroup1, c_unitCountAlive) + UnitGroupCount(gv_ultraliskZergSupportGroup2, c_unitCountAlive)) + UnitGroupCount(gv_ultraliskZergSupportGroup3, c_unitCountAlive)) < gv_ultraliskMaximumSupportZerg)) {
            lv_rOLL = RandomInt(0, 3);
            autoAD554CA5_val = lv_rOLL;
            if (autoAD554CA5_val == 0) {
                UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                for (autoBA29D510_i = 1; autoBA29D510_i <= autoBA29D510_n; autoBA29D510_i += 1) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(4)));
                    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                    UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                    Wait(RandomFixed(0.0, 0.25), c_timeGame);
                }
            }
            else if (autoAD554CA5_val == 1) {
                libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                for (auto8674D4C1_i = 1; auto8674D4C1_i <= auto8674D4C1_n; auto8674D4C1_i += 1) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)));
                    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                    UnitGroupAdd(gv_ultraliskZergSupportGroup3, UnitLastCreated());
                    Wait(RandomFixed(0.0, 0.25), c_timeGame);
                }
            }
            else if (autoAD554CA5_val == 2) {
                for (autoC4370B86_i = 1; autoC4370B86_i <= autoC4370B86_n; autoC4370B86_i += 1) {
                    libNtve_gf_UnitCreateFacingPoint(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(60)), UnitGetPosition(gv_myraDavis));
                    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
                    UnitGroupAdd(gv_ultraliskZergSupportGroup1, UnitLastCreated());
                    Wait(2.25, c_timeGame);
                    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                }
            }
            else {
            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskReinforcementsHard_Init () {
    gt_UltraliskReinforcementsHard = TriggerCreate("gt_UltraliskReinforcementsHard_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Reinforcements Normal
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskReinforcementsNormal_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_rOLL;

    // Automatic Variable Declarations
    int auto5A11135C_val;
    const int auto2F433D05_n = 4;
    int auto2F433D05_i;
    const int auto3B461596_n = 4;
    int auto3B461596_i;
    const int auto552DEC3E_n = 4;
    int auto552DEC3E_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_UltraliskReinforcements2, true);
    while (true) {
        Wait(RandomFixed(2.5, 5.0), c_timeGame);
        if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == false) && (((UnitGroupCount(gv_ultraliskZergSupportGroup1, c_unitCountAlive) + UnitGroupCount(gv_ultraliskZergSupportGroup2, c_unitCountAlive)) + UnitGroupCount(gv_ultraliskZergSupportGroup3, c_unitCountAlive)) < gv_ultraliskMaximumSupportZerg2)) {
            lv_rOLL = RandomInt(0, 3);
            auto5A11135C_val = lv_rOLL;
            if (auto5A11135C_val == 0) {
                UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                for (auto2F433D05_i = 1; auto2F433D05_i <= auto2F433D05_n; auto2F433D05_i += 1) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(4)));
                    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                    UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                    Wait(RandomFixed(0.0, 0.25), c_timeGame);
                }
            }
            else if (auto5A11135C_val == 1) {
                libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(31)));
                UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                UnitGroupAdd(gv_ultraliskZergSupportGroup2, UnitLastCreated());
                for (auto3B461596_i = 1; auto3B461596_i <= auto3B461596_n; auto3B461596_i += 1) {
                    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(31)));
                    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                    UnitGroupAdd(gv_ultraliskZergSupportGroup3, UnitLastCreated());
                    Wait(RandomFixed(0.0, 0.25), c_timeGame);
                }
            }
            else if (auto5A11135C_val == 2) {
                for (auto552DEC3E_i = 1; auto552DEC3E_i <= auto552DEC3E_n; auto552DEC3E_i += 1) {
                    libNtve_gf_UnitCreateFacingPoint(1, "ZerglingBurrowed", 0, 4, RegionRandomPoint(RegionFromId(60)), UnitGetPosition(gv_myraDavis));
                    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
                    UnitGroupAdd(gv_ultraliskZergSupportGroup1, UnitLastCreated());
                    Wait(2.25, c_timeGame);
                    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
                }
            }
            else {
            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskReinforcementsNormal_Init () {
    gt_UltraliskReinforcementsNormal = TriggerCreate("gt_UltraliskReinforcementsNormal_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Reinforcements 2
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskReinforcements2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto8D8BDB9A_g;
    int auto8D8BDB9A_u;
    unit auto8D8BDB9A_var;
    unitgroup autoA30CB083_g;
    int autoA30CB083_u;
    unit autoA30CB083_var;
    unitgroup autoD65FFA0A_g;
    int autoD65FFA0A_u;
    unit autoD65FFA0A_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto8D8BDB9A_g = gv_ultraliskZergSupportGroup1;
    auto8D8BDB9A_u = UnitGroupCount(auto8D8BDB9A_g, c_unitCountAll);
    for (;; auto8D8BDB9A_u -= 1) {
        auto8D8BDB9A_var = UnitGroupUnitFromEnd(auto8D8BDB9A_g, auto8D8BDB9A_u);
        if (auto8D8BDB9A_var == null) { break; }
        UnitIssueOrder(auto8D8BDB9A_var, OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
    }
    Wait(RandomFixed(5.0, 13.0), c_timeGame);
    autoA30CB083_g = gv_ultraliskZergSupportGroup2;
    autoA30CB083_u = UnitGroupCount(autoA30CB083_g, c_unitCountAll);
    for (;; autoA30CB083_u -= 1) {
        autoA30CB083_var = UnitGroupUnitFromEnd(autoA30CB083_g, autoA30CB083_u);
        if (autoA30CB083_var == null) { break; }
        UnitIssueOrder(autoA30CB083_var, OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
    }
    Wait(RandomFixed(5.0, 13.0), c_timeGame);
    autoD65FFA0A_g = gv_ultraliskZergSupportGroup3;
    autoD65FFA0A_u = UnitGroupCount(autoD65FFA0A_g, c_unitCountAll);
    for (;; autoD65FFA0A_u -= 1) {
        autoD65FFA0A_var = UnitGroupUnitFromEnd(autoD65FFA0A_g, autoD65FFA0A_u);
        if (autoD65FFA0A_var == null) { break; }
        UnitIssueOrder(autoD65FFA0A_var, OrderTargetingPoint(AbilityCommand("move", 1), RegionRandomPoint(RegionFromId(100))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskReinforcements2_Init () {
    gt_UltraliskReinforcements2 = TriggerCreate("gt_UltraliskReinforcements2_Func");
    TriggerEnable(gt_UltraliskReinforcements2, false);
    TriggerAddEventTimePeriodic(gt_UltraliskReinforcements2, RandomFixed(30.0, 44.0), c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TruckPingDeath1
//--------------------------------------------------------------------------------------------------
bool gt_TruckPingDeath1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_ultraliskGasTruckPing1);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle1);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag1);
    Wait(0.35, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode", UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TruckPingDeath1_Init () {
    gt_TruckPingDeath1 = TriggerCreate("gt_TruckPingDeath1_Func");
    TriggerAddEventUnitDied(gt_TruckPingDeath1, UnitRefFromUnit(UnitFromId(1516123329)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: TruckPingDeath2
//--------------------------------------------------------------------------------------------------
bool gt_TruckPingDeath2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_ultraliskGasTruckPing2);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle2);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag2);
    Wait(0.35, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode", UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TruckPingDeath2_Init () {
    gt_TruckPingDeath2 = TriggerCreate("gt_TruckPingDeath2_Func");
    TriggerAddEventUnitDied(gt_TruckPingDeath2, UnitRefFromUnit(UnitFromId(1469531919)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: TruckPingDeath3
//--------------------------------------------------------------------------------------------------
bool gt_TruckPingDeath3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_ultraliskGasTruckPing3);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle3);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag3);
    Wait(0.35, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode", UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TruckPingDeath3_Init () {
    gt_TruckPingDeath3 = TriggerCreate("gt_TruckPingDeath3_Func");
    TriggerAddEventUnitDied(gt_TruckPingDeath3, UnitRefFromUnit(UnitFromId(930332417)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: TruckPingDeath4
//--------------------------------------------------------------------------------------------------
bool gt_TruckPingDeath4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_ultraliskGasTruckPing4);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle4);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag4);
    Wait(0.35, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode", UnitGetPosition(EventUnit()));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TruckPingDeath4_Init () {
    gt_TruckPingDeath4 = TriggerCreate("gt_TruckPingDeath4_Func");
    TriggerAddEventUnitDied(gt_TruckPingDeath4, UnitRefFromUnit(UnitFromId(399483068)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Damaged By Gas Truck
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskDamagedByGasTruck_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(EventUnit()) == true))) {
            return false;
        }

        if (!(((EventUnitDamageSourceUnit() == UnitFromId(1516123329)) || (EventUnitDamageSourceUnit() == UnitFromId(930332417)) || (EventUnitDamageSourceUnit() == UnitFromId(1469531919)) || (EventUnitDamageSourceUnit() == UnitFromId(399483068))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(0.1, c_timeGame);
    UnitBehaviorAddPlayer(EventUnit(), "pt4xUnitSpeed", gv_pLAYER_01_USER, 1);
    libNtve_gf_AttachModelToUnit(EventUnit(), "GenericFire_Large", "Ref_Center");
    Wait(0.2, c_timeGame);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.35, 2.0, 100.0, 5.0);
    SoundPlayForPlayer(SoundLink("M2UltraRoar", 0), c_maxPlayers, PlayerGroupAll(), 130.0, 0.2);
    SoundWait(SoundLastPlayed(), 0.2, c_soundOffsetEnd);
    CameraShakeStop(gv_pLAYER_01_USER);
    Wait(2.25, c_timeGame);
    libNtve_gf_KillModel(libNtve_gf_ActorLastCreated());
    Wait(2.25, c_timeGame);
    UnitBehaviorRemove(EventUnit(), "pt4xUnitSpeed", 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskDamagedByGasTruck_Init () {
    gt_UltraliskDamagedByGasTruck = TriggerCreate("gt_UltraliskDamagedByGasTruck_Func");
    TriggerAddEventUnitDamaged(gt_UltraliskDamagedByGasTruck, UnitRefFromVariable("gv_ultraliskUnit"), c_unitDamageTypeAny, c_unitDamageEither, "GasTruckExplosion");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Damaged By Gas Truck Quote
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskDamagedByGasTruckQuote_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitIsAlive(EventUnit()) == true))) {
            return false;
        }

        if (!(((EventUnitDamageSourceUnit() == UnitFromId(1516123329)) || (EventUnitDamageSourceUnit() == UnitFromId(930332417)) || (EventUnitDamageSourceUnit() == UnitFromId(1469531919)) || (EventUnitDamageSourceUnit() == UnitFromId(399483068))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00096", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskDamagedByGasTruckQuote_Init () {
    gt_UltraliskDamagedByGasTruckQuote = TriggerCreate("gt_UltraliskDamagedByGasTruckQuote_Func");
    TriggerAddEventUnitDamaged(gt_UltraliskDamagedByGasTruckQuote, UnitRefFromVariable("gv_ultraliskUnit"), c_unitDamageTypeAny, c_unitDamageEither, "GasTruckExplosion");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Despawn
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_ultraliskSectionActive == 1))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Ultralisk"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskDespawn_Init () {
    gt_UltraliskDespawn = TriggerCreate("gt_UltraliskDespawn_Func");
    TriggerAddEventUnitRegion(gt_UltraliskDespawn, null, RegionFromId(4), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Ultralisk Dies
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskUltraliskDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_ultraliskUnit == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerStop(gt_UltraliskVictoryRuns);
    TriggerEnable(gt_UltraliskVictoryRuns, false);
    lib1926661B_gf_ShowHideBossBarLotC(gv_bossUltralisk_Bossbar, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00097", null, false, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_UltraliskVictoryRuns2, false, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskUltraliskDies_Init () {
    gt_UltraliskUltraliskDies = TriggerCreate("gt_UltraliskUltraliskDies_Func");
    TriggerAddEventUnitDied(gt_UltraliskUltraliskDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Victory Runs
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskVictoryRuns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitIsAlive(gv_ultraliskUnit) == true))) {
            return false;
        }

        if (!((UnitGetPropertyFixed(gv_ultraliskUnit, c_unitPropLife, c_unitPropCurrent) < 200.0))) {
            return false;
        }

        if (!((UnitGetType(gv_ultraliskUnit) == "Ultralisk"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerStop(gt_UltraliskVictoryRuns2);
    TriggerEnable(gt_UltraliskVictoryRuns2, false);
    TriggerEnable(gt_UltraliskUltraliskDies, false);
    lib1926661B_gf_ShowHideBossBarLotC(gv_bossUltralisk_Bossbar, false);
    TriggerStop(gt_UltraliskSectionBegins);
    TriggerStop(gt_UltraliskReinforcementsHard);
    TriggerStop(gt_UltraliskReinforcements2);
    TriggerEnable(gt_UltraliskSectionBegins, false);
    TriggerEnable(gt_UltraliskReinforcementsHard, false);
    TriggerEnable(gt_UltraliskReinforcements2, false);
    TriggerEnable(gt_UltraliskVictoryRuns, false);
    UnitIssueOrder(gv_ultraliskUnit, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(4))), c_orderQueueReplace);
    Wait(3.0, c_timeGame);
    UnitSetPropertyFixed(gv_ultraliskUnit, c_unitPropMovementSpeed, 6.0);
    PingDestroy(gv_ultraliskGasTruckPing1);
    PingDestroy(gv_ultraliskGasTruckPing2);
    PingDestroy(gv_ultraliskGasTruckPing3);
    PingDestroy(gv_ultraliskGasTruckPing4);
    Wait(1.2, c_timeGame);
    ObjectiveDestroy(gv_constructionYardEscortOfficers);
    ObjectiveSetState(gv_ultraliskObjective, c_objectiveStateCompleted);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/1B350696"));
    Wait(3.0, c_timeGame);
    PingDestroy(gv_ultraliskPing);
    Wait(6.0, c_timeGame);
    TriggerExecute(gt_UPLQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskVictoryRuns_Init () {
    gt_UltraliskVictoryRuns = TriggerCreate("gt_UltraliskVictoryRuns_Func");
    TriggerEnable(gt_UltraliskVictoryRuns, false);
    TriggerAddEventTimePeriodic(gt_UltraliskVictoryRuns, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Victory Death
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskVictoryRuns2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_UltraliskUltraliskDies, false);
    lib1926661B_gf_ShowHideBossBarLotC(gv_bossUltralisk_Bossbar, false);
    TriggerStop(gt_UltraliskSectionBegins);
    TriggerStop(gt_UltraliskReinforcementsHard);
    TriggerStop(gt_UltraliskReinforcements2);
    TriggerEnable(gt_UltraliskSectionBegins, false);
    TriggerEnable(gt_UltraliskReinforcementsHard, false);
    TriggerEnable(gt_UltraliskReinforcements2, false);
    TriggerEnable(gt_UltraliskVictoryRuns2, false);
    UnitIssueOrder(gv_ultraliskUnit, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(4))), c_orderQueueReplace);
    Wait(3.0, c_timeGame);
    UnitSetPropertyFixed(gv_ultraliskUnit, c_unitPropMovementSpeed, 6.0);
    PingDestroy(gv_ultraliskGasTruckPing1);
    PingDestroy(gv_ultraliskGasTruckPing2);
    PingDestroy(gv_ultraliskGasTruckPing3);
    PingDestroy(gv_ultraliskGasTruckPing4);
    Wait(1.2, c_timeGame);
    ObjectiveDestroy(gv_constructionYardEscortOfficers);
    ObjectiveSetState(gv_ultraliskObjective, c_objectiveStateCompleted);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/E3C1E564"));
    Wait(3.0, c_timeGame);
    PingDestroy(gv_ultraliskPing);
    Wait(6.0, c_timeGame);
    TriggerExecute(gt_UPLQ, true, false);
    UnitRemove(gv_ultraliskPathBlockers[1]);
    UnitRemove(gv_ultraliskPathBlockers[2]);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskVictoryRuns2_Init () {
    gt_UltraliskVictoryRuns2 = TriggerCreate("gt_UltraliskVictoryRuns2_Func");
    TriggerEnable(gt_UltraliskVictoryRuns2, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Begins
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionBegins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto8F4A3E7D_g;
    int auto8F4A3E7D_u;
    unit auto8F4A3E7D_var;
    unitgroup auto2086A50C_g;
    int auto2086A50C_u;
    unit auto2086A50C_var;
    unitgroup auto8B349FFB_g;
    int auto8B349FFB_u;
    unit auto8B349FFB_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ArtifactIncinerator, true);
    TriggerExecute(gt_UPLSectionIncineratorSpawn, true, false);
    libNtve_gf_ShowHideUnit(UnitFromId(289073661), true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    Wait(1.0, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2Part2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    TriggerExecute(gt_UPLSectionZerglingSpawn, true, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00114", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveCreate(StringExternal("Param/Value/F76004F9"), StringExternal("Param/Value/56070D0C"), c_objectiveStateActive, true);
    gv_uPLSectionBaseObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_uPLSectionBaseObjective, PlayerGroupAll(), true);
    libVCMI_gf_CreateObjectivePing(true, PointFromId(1602090627), StringExternal("Param/Value/E440F0E4"));
    gv_uPLSectionBasePing = PingLastCreated();
    libNtve_gf_ChangeUnitDamage(UnitFromId(755740427), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_ChangeUnitDamage(UnitFromId(897368184), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    auto8F4A3E7D_g = UnitGroup("CargoTruckUnitBarrels", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto8F4A3E7D_u = UnitGroupCount(auto8F4A3E7D_g, c_unitCountAll);
    for (;; auto8F4A3E7D_u -= 1) {
        auto8F4A3E7D_var = UnitGroupUnitFromEnd(auto8F4A3E7D_g, auto8F4A3E7D_u);
        if (auto8F4A3E7D_var == null) { break; }
        UnitRemove(auto8F4A3E7D_var);
    }
    auto2086A50C_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(203), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto2086A50C_u = UnitGroupCount(auto2086A50C_g, c_unitCountAll);
    for (;; auto2086A50C_u -= 1) {
        auto2086A50C_var = UnitGroupUnitFromEnd(auto2086A50C_g, auto2086A50C_u);
        if (auto2086A50C_var == null) { break; }
        UnitGroupAdd(gv_uPLSectionBaseGroup, auto2086A50C_var);
        libNtve_gf_ShowHideUnit(auto2086A50C_var, true);
        UnitSetOwner(auto2086A50C_var, gv_pLAYER_04_ROACHES, true);
    }
    TriggerDestroy(gt_UPLSectionIncineratorFace);
    TriggerExecute(gt_TipIncineratorUnit, true, false);
    Wait(0.5, c_timeGame);
    gv_uPLSectionActive = 1;
    Wait(2.0, c_timeReal);
    auto8B349FFB_g = gv_uPLSectionIncineratorGroup;
    auto8B349FFB_u = UnitGroupCount(auto8B349FFB_g, c_unitCountAll);
    for (;; auto8B349FFB_u -= 1) {
        auto8B349FFB_var = UnitGroupUnitFromEnd(auto8B349FFB_g, auto8B349FFB_u);
        if (auto8B349FFB_var == null) { break; }
        UnitSetState(auto8B349FFB_var, c_unitStateTurnSuppressed, true);
        UnitSetState(auto8B349FFB_var, c_unitStateFidget, true);
        libNtve_gf_RescueUnit(auto8B349FFB_var, gv_pLAYER_01_USER, true);
    }
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionBegins_Init () {
    gt_UPLSectionBegins = TriggerCreate("gt_UPLSectionBegins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Reload
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionReload_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFAB867BB_g;
    int autoFAB867BB_u;
    unit autoFAB867BB_var;

    // Conditions
    if (testConds) {
        if (!((gv_uPLSectionActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoFAB867BB_g = gv_uPLSectionIncineratorGroup;
    autoFAB867BB_u = UnitGroupCount(autoFAB867BB_g, c_unitCountAll);
    for (;; autoFAB867BB_u -= 1) {
        autoFAB867BB_var = UnitGroupUnitFromEnd(autoFAB867BB_g, autoFAB867BB_u);
        if (autoFAB867BB_var == null) { break; }
        UnitSetState(autoFAB867BB_var, c_unitStateTurnSuppressed, true);
        UnitSetState(autoFAB867BB_var, c_unitStateFidget, true);
        libNtve_gf_RescueUnit(autoFAB867BB_var, gv_pLAYER_01_USER, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionReload_Init () {
    gt_UPLSectionReload = TriggerCreate("gt_UPLSectionReload_Func");
    TriggerAddEventLoadGameDone(gt_UPLSectionReload);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Zergling Spawn
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionZerglingSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto573F4B8D_n = 10;
    int auto573F4B8D_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto573F4B8D_i = 1; auto573F4B8D_i <= auto573F4B8D_n; auto573F4B8D_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 2), "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(1976146853));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), gv_myraDavis), c_orderQueueReplace);
        Wait(RandomFixed(0.5, 1.1), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionZerglingSpawn_Init () {
    gt_UPLSectionZerglingSpawn = TriggerCreate("gt_UPLSectionZerglingSpawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Incinerator Spawn
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionIncineratorSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(652601262)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(17186846)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(231159657)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1472866143)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1655962839)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1628163811)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1064768311)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    Wait(1.75, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(201022119));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1863708693)), c_orderQueueReplace);
    UnitGroupAdd(gv_uPLSectionIncineratorGroup, UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionIncineratorSpawn_Init () {
    gt_UPLSectionIncineratorSpawn = TriggerCreate("gt_UPLSectionIncineratorSpawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Incinerator Face
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionIncineratorFace_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "InfantryFlamethrower"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitFacePoint(EventUnit(), libNtve_gf_PointFacingAngle(PointFromId(1066928014), 270.0), 0.0);
    UnitSetState(EventUnit(), c_unitStateTurnSuppressed, false);
    UnitSetState(EventUnit(), c_unitStateFidget, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionIncineratorFace_Init () {
    gt_UPLSectionIncineratorFace = TriggerCreate("gt_UPLSectionIncineratorFace_Func");
    TriggerAddEventUnitRegion(gt_UPLSectionIncineratorFace, null, RegionFromId(214), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Unburrow
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionUnburrow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9D0F2F7E_g;
    int auto9D0F2F7E_u;
    unit auto9D0F2F7E_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_uPLSectionActive == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto9D0F2F7E_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(213), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto9D0F2F7E_u = UnitGroupCount(auto9D0F2F7E_g, c_unitCountAll);
    for (;; auto9D0F2F7E_u -= 1) {
        auto9D0F2F7E_var = UnitGroupUnitFromEnd(auto9D0F2F7E_g, auto9D0F2F7E_u);
        if (auto9D0F2F7E_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto9D0F2F7E_var, true);
        UnitSetOwner(auto9D0F2F7E_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto9D0F2F7E_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitBehaviorAdd(auto9D0F2F7E_var, "ColonistWander", gv_myraDavis, 1);
        Wait(RandomFixed(0.5, 1.5), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionUnburrow_Init () {
    gt_UPLSectionUnburrow = TriggerCreate("gt_UPLSectionUnburrow_Func");
    TriggerAddEventUnitRegion(gt_UPLSectionUnburrow, null, RegionFromId(213), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Section Victory
//--------------------------------------------------------------------------------------------------
bool gt_UPLSectionVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_uPLSectionActive == 1))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_uPLSectionBaseGroup) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveDestroy(gv_ultraliskObjective);
    ObjectiveSetState(gv_uPLSectionBaseObjective, c_objectiveStateCompleted);
    PingDestroy(gv_uPLSectionBasePing);
    Wait(4.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00115", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(gt_WomenandChildrenBegins, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSectionVictory_Init () {
    gt_UPLSectionVictory = TriggerCreate("gt_UPLSectionVictory_Func");
    TriggerAddEventUnitDied(gt_UPLSectionVictory, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordBreaksThrough
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordBreaksThrough_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_womenandChildrenOverlordMayor > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/011F3891"));
    ObjectiveSetName(gv_womenandChildrenOverlordMob, StringExternal("Param/Value/9BA9057C"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordBreaksThrough_Init () {
    gt_MayorOverlordBreaksThrough = TriggerCreate("gt_MayorOverlordBreaksThrough_Func");
    TriggerEnable(gt_MayorOverlordBreaksThrough, false);
    TriggerAddEventTimePeriodic(gt_MayorOverlordBreaksThrough, 0.3, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordGetsToRoof
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordGetsToRoof_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_ROACHES))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_womenandChildrenOverlordMayor += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordGetsToRoof_Init () {
    gt_MayorOverlordGetsToRoof = TriggerCreate("gt_MayorOverlordGetsToRoof_Func");
    TriggerAddEventUnitRegion(gt_MayorOverlordGetsToRoof, null, RegionFromId(102), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord1
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1774063307));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord1 = UnitLastCreated();
    UnitIssueOrder(gv_overlord1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2058737147)), c_orderQueueReplace);
    libNtve_gf_ChangeUnitDamage(gv_overlord1, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord1), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing1 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord1), PointFromId(2058737147)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing1);
    UnitRemove(gv_overlord1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord1_Init () {
    gt_MayorOverlord1 = TriggerCreate("gt_MayorOverlord1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord2
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(192855913));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord2 = UnitLastCreated();
    UnitIssueOrder(gv_overlord2, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2058737147)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_ChangeUnitDamage(gv_overlord2, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord2), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing2 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord2), PointFromId(2058737147)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing2);
    UnitRemove(gv_overlord2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord2_Init () {
    gt_MayorOverlord2 = TriggerCreate("gt_MayorOverlord2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord3
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(991187782));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord3 = UnitLastCreated();
    UnitIssueOrder(gv_overlord3, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2058737147)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_ChangeUnitDamage(gv_overlord3, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord3), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing3 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord3), PointFromId(2058737147)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing3);
    UnitRemove(gv_overlord3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord3_Init () {
    gt_MayorOverlord3 = TriggerCreate("gt_MayorOverlord3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord4
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(947337077));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord4 = UnitLastCreated();
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2058737147)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_ChangeUnitDamage(gv_overlord4, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord4), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing4 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord4), PointFromId(2058737147)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing4);
    UnitRemove(gv_overlord4);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord4_Init () {
    gt_MayorOverlord4 = TriggerCreate("gt_MayorOverlord4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord5
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(745447960));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord5 = UnitLastCreated();
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1626576267)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_ChangeUnitDamage(gv_overlord5, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord5), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing5 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord5), PointFromId(1626576267)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing5);
    UnitRemove(gv_overlord5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord5_Init () {
    gt_MayorOverlord5 = TriggerCreate("gt_MayorOverlord5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord6
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(362495508));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord6 = UnitLastCreated();
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1626576267)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_ChangeUnitDamage(gv_overlord6, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord6), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing6 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord6), PointFromId(1626576267)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing6);
    UnitRemove(gv_overlord6);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord6_Init () {
    gt_MayorOverlord6 = TriggerCreate("gt_MayorOverlord6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlord7
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlord7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1182748385));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.2);
    gv_overlord7 = UnitLastCreated();
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1626576267)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenOverlordGroup, UnitLastCreated());
    libNtve_gf_ChangeUnitDamage(gv_overlord7, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    libNtve_gf_CreatePingFacingAngle(PlayerGroupAll(), "PingDiamond", UnitGetPosition(gv_overlord7), ColorWithAlpha(100.00, 0.00, 0.00, 0.00), 999.0, 270.0);
    PingSetScale(PingLastCreated(), 0.5);
    gv_overlordPing7 = PingLastCreated();
    PingSetUnit(PingLastCreated(), UnitLastCreated());
    while (!((DistanceBetweenPoints(UnitGetPosition(gv_overlord7), PointFromId(1626576267)) < 2.0))) {
        Wait(0.2, c_timeGame);
    }
    PingDestroy(gv_overlordPing7);
    UnitRemove(gv_overlord7);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlord7_Init () {
    gt_MayorOverlord7 = TriggerCreate("gt_MayorOverlord7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies1
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord1 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies1_Init () {
    gt_MayorOverlordDies1 = TriggerCreate("gt_MayorOverlordDies1_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies1, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies2
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord2 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies2_Init () {
    gt_MayorOverlordDies2 = TriggerCreate("gt_MayorOverlordDies2_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies3
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord3 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies3_Init () {
    gt_MayorOverlordDies3 = TriggerCreate("gt_MayorOverlordDies3_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies4
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord4 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing4);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies4_Init () {
    gt_MayorOverlordDies4 = TriggerCreate("gt_MayorOverlordDies4_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies4, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies5
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord5 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies5_Init () {
    gt_MayorOverlordDies5 = TriggerCreate("gt_MayorOverlordDies5_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies5, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies6
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord6 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing6);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies6_Init () {
    gt_MayorOverlordDies6 = TriggerCreate("gt_MayorOverlordDies6_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies6, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MayorOverlordDies7
//--------------------------------------------------------------------------------------------------
bool gt_MayorOverlordDies7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_overlord7 == EventUnit()))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_overlordPing7);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorOverlordDies7_Init () {
    gt_MayorOverlordDies7 = TriggerCreate("gt_MayorOverlordDies7_Func");
    TriggerAddEventUnitDied(gt_MayorOverlordDies7, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Begins
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenBegins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(gv_darren);
    gv_womenandChildrenSWATVan = 1;
    RegionPlayableMapSet(RegionFromId(218));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    TriggerExecute(gt_WomenandChildrenUnits, true, false);
    TriggerExecute(gt_WomenandChildrenTroopSpawn, true, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1245320377), 0.0, -1, 10.0, true);
    Wait(1.5, c_timeReal);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(141), "TruckSemi");
    libNtve_gf_ShowHideUnit(UnitFromId(1512054248), true);
    libNtve_gf_ShowHideUnit(UnitFromId(598198931), true);
    libNtve_gf_ShowHideUnit(UnitFromId(105532826), true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundPlayForPlayer(SoundLink("M2SwatVanEngineStart", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveCreate(StringExternal("Param/Value/60FEC3F8"), StringExternal("Param/Value/A2C99C37"), c_objectiveStateActive, true);
    gv_womenandChildrenSwatVanObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_womenandChildrenSwatVanObjective, PlayerGroupAll(), true);
    Wait(7.0, c_timeReal);
    TriggerExecute(gt_WomenandChildrenSWATVanPath1, true, true);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenBegins_Init () {
    gt_WomenandChildrenBegins = TriggerCreate("gt_WomenandChildrenBegins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Units
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF5C4F397_g;
    int autoF5C4F397_u;
    unit autoF5C4F397_var;
    unitgroup autoFCA27681_g;
    int autoFCA27681_u;
    unit autoFCA27681_var;
    int auto59BB978C_n;
    int auto59BB978C_i;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "FlameGrenadePickup", c_unitCreateIgnorePlacement, gv_pLAYER_00_NEUTRAL, PointFromId(303124966));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "FlashbangGrenadePickup", c_unitCreateIgnorePlacement, gv_pLAYER_00_NEUTRAL, PointFromId(1840137711));
    libNtve_gf_UnitCreateFacingPoint(1, "SwatVan", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(262527926), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    libNtve_gf_MakeUnitFacePoint(UnitLastCreated(), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0), 0.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.5);
    gv_womenandChildrenSWATVan1 = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(gv_womenandChildrenSWATVan1, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    libNtve_gf_ShareVisionofUnit(gv_womenandChildrenSWATVan1, true, gv_pLAYER_01_USER);
    libNtve_gf_UnitCreateFacingPoint(1, "SwatVan", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1381629772), UnitGetPosition(gv_womenandChildrenSWATVan1));
    UnitBehaviorAdd(UnitLastCreated(), "SuppressCollision", UnitLastCreated(), 1);
    libNtve_gf_MakeUnitFacePoint(UnitLastCreated(), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0), 0.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.5);
    gv_womenandChildrenSWATVan2 = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(gv_womenandChildrenSWATVan2, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    libNtve_gf_ShareVisionofUnit(gv_womenandChildrenSWATVan2, true, gv_pLAYER_01_USER);
    autoF5C4F397_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(261), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF5C4F397_u = UnitGroupCount(autoF5C4F397_g, c_unitCountAll);
    for (;; autoF5C4F397_u -= 1) {
        autoF5C4F397_var = UnitGroupUnitFromEnd(autoF5C4F397_g, autoF5C4F397_u);
        if (autoF5C4F397_var == null) { break; }
        UnitRemove(autoF5C4F397_var);
    }
    autoFCA27681_g = UnitGroup("InfantryFlamethrower", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFCA27681_u = UnitGroupCount(autoFCA27681_g, c_unitCountAll);
    for (;; autoFCA27681_u -= 1) {
        autoFCA27681_var = UnitGroupUnitFromEnd(autoFCA27681_g, autoFCA27681_u);
        if (autoFCA27681_var == null) { break; }
        UnitRemove(autoFCA27681_var);
    }
    UnitSetPosition(gv_myraDavis, PointFromId(1034812644), false);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_UnitCreateFacingPoint(1, "RoutheTank", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, libNtve_gf_PointFacingAngle(PointFromId(1392449024), 270.0), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0));
    auto59BB978C_n = lib1926661B_gf_DifficultyValueInteger(45, 111);
    for (auto59BB978C_i = 1; auto59BB978C_i <= auto59BB978C_n; auto59BB978C_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 1), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(217)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(262527926)), c_orderQueueReplace);
        UnitGroupAdd(gv_womenandChildrenZerglingSpawnGroup, UnitLastCreated());
        libNtve_gf_CreateUnitsWithDefaultFacing(RandomInt(1, 1), "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(217)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(262527926)), c_orderQueueReplace);
        gv_womenandChildrenActive = 1;
        Wait(0.33, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenUnits_Init () {
    gt_WomenandChildrenUnits = TriggerCreate("gt_WomenandChildrenUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Troop Spawn
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenTroopSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto281659C1_g;
    int auto281659C1_u;
    unit auto281659C1_var;
    unitgroup auto879EED9F_g;
    int auto879EED9F_u;
    unit auto879EED9F_var;
    const int auto3A6E21B1_n = 3;
    int auto3A6E21B1_i;
    const int auto95CA3C83_n = 5;
    int auto95CA3C83_i;
    const int auto6602BC2A_n = 5;
    int auto6602BC2A_i;

    // Actions
    if (!runActions) {
        return true;
    }

    auto281659C1_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto281659C1_u = UnitGroupCount(auto281659C1_g, c_unitCountAll);
    for (;; auto281659C1_u -= 1) {
        auto281659C1_var = UnitGroupUnitFromEnd(auto281659C1_g, auto281659C1_u);
        if (auto281659C1_var == null) { break; }
        UnitSetPosition(auto281659C1_var, RegionRandomPoint(RegionFromId(215)), false);
    }
    auto879EED9F_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(261), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto879EED9F_u = UnitGroupCount(auto879EED9F_g, c_unitCountAll);
    for (;; auto879EED9F_u -= 1) {
        auto879EED9F_var = UnitGroupUnitFromEnd(auto879EED9F_g, auto879EED9F_u);
        if (auto879EED9F_var == null) { break; }
        UnitRemove(auto879EED9F_var);
    }
    for (auto3A6E21B1_i = 1; auto3A6E21B1_i <= auto3A6E21B1_n; auto3A6E21B1_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(216)), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0));
        UnitGroupAdd(gv_womenandChildrenTroopGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(219))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(220))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(221))), c_orderQueueAddToEnd);
    }
    for (auto95CA3C83_i = 1; auto95CA3C83_i <= auto95CA3C83_n; auto95CA3C83_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "InfantryRifle", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(216)), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0));
        UnitGroupAdd(gv_womenandChildrenTroopGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(219))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(220))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(221))), c_orderQueueAddToEnd);
    }
    for (auto6602BC2A_i = 1; auto6602BC2A_i <= auto6602BC2A_n; auto6602BC2A_i += 1) {
        libNtve_gf_UnitCreateFacingPoint(1, "InfantryHeavy", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(216)), libNtve_gf_PointFacingAngle(PointFromId(1115511603), 270.0));
        UnitGroupAdd(gv_womenandChildrenTroopGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(219))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(220))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(221))), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenTroopSpawn_Init () {
    gt_WomenandChildrenTroopSpawn = TriggerCreate("gt_WomenandChildrenTroopSpawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children SWAT Van Path 1
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenSWATVanPath1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(gv_womenandChildrenSWATVan1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(281447938)), c_orderQueueReplace);
    UnitIssueOrder(gv_womenandChildrenSWATVan1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1746412592)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_womenandChildrenSWATVan1, Order(AbilityCommand("stop", 0)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_womenandChildrenSWATVan2, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(281447938)), c_orderQueueReplace);
    UnitIssueOrder(gv_womenandChildrenSWATVan2, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1446152784)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_womenandChildrenSWATVan2, Order(AbilityCommand("stop", 0)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenSWATVanPath1_Init () {
    gt_WomenandChildrenSWATVanPath1 = TriggerCreate("gt_WomenandChildrenSWATVanPath1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children SWAT Van Stop
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenSWATVanStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "SwatVan"))) {
            return false;
        }

        if (!((gv_womenandChildrenSWATVan == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2SwatVanAirBrakes", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/0DA8279D"));
    Wait(3.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00203", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_womenandChildrenSWATVan1, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00117", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00118", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_womenandChildrenSWATVan1, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00119", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00120", null, true, null, false);
    TechTreeUnitHelp(1, "DarrenRodgers", true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, UnitGetPosition(gv_womenandChildrenSWATVan1));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 200.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 200.0);
    gv_darren = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(gv_darren, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitSetState(gv_darren, c_unitStateSelectable, false);
    UnitSetInfoTip(UnitLastCreated(), StringExternal("Param/Value/F50F352A"));
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_darren, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00121", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00124", null, true, gv_myraDavis, false);
    libNtve_gf_MakeUnitFacePoint(gv_myraDavis, UnitGetPosition(gv_darren), 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_darren, "TalkIcon", "Ref_Origin");
    libNtve_gf_MakeUnitFacePoint(gv_darren, UnitGetPosition(gv_myraDavis), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00123", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(gv_womenandChildrenSWATVan1, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00125", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_WomenandChildrenSWATVanPath2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenSWATVanStop_Init () {
    gt_WomenandChildrenSWATVanStop = TriggerCreate("gt_WomenandChildrenSWATVanStop_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenSWATVanStop, null, RegionFromId(230), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children SWAT Van Path 2
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenSWATVanPath2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto076B8CFE_g;
    int auto076B8CFE_u;
    unit auto076B8CFE_var;
    unitgroup autoFC7A68FB_g;
    int autoFC7A68FB_u;
    unit autoFC7A68FB_var;
    unitgroup autoB34B062F_g;
    int autoB34B062F_u;
    unit autoB34B062F_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2SwatVanEngineStart", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveDestroy(gv_uPLSectionBaseObjective);
    ObjectiveDestroy(gv_womenandChildrenSwatVanObjective);
    ObjectiveCreate(StringExternal("Param/Value/E0612E55"), StringToText(""), c_objectiveStateActive, true);
    gv_womenandChildrenRCObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_womenandChildrenRCObjective, PlayerGroupAll(), true);
    ObjectiveCreate(StringExternal("Param/Value/BE92F28F"), StringToText(""), c_objectiveStateActive, true);
    gv_womenandChildrenDarrenAliveObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_womenandChildrenDarrenAliveObjective, PlayerGroupAll(), true);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(1951004678), StringExternal("Param/Value/62671437"));
    gv_womenandChildrenPing = PingLastCreated();
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/85F97B0C"));
    Wait(6.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    auto076B8CFE_g = gv_womenandChildrenTroopGroup;
    auto076B8CFE_u = UnitGroupCount(auto076B8CFE_g, c_unitCountAll);
    for (;; auto076B8CFE_u -= 1) {
        auto076B8CFE_var = UnitGroupUnitFromEnd(auto076B8CFE_g, auto076B8CFE_u);
        if (auto076B8CFE_var == null) { break; }
        UnitIssueOrder(auto076B8CFE_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(222))), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    UnitIssueOrder(gv_womenandChildrenSWATVan1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1976733053)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_womenandChildrenSWATVan1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(489215760)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_womenandChildrenSWATVan2, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1976733053)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_womenandChildrenSWATVan2, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(489215760)), c_orderQueueAddToEnd);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    libNtve_gf_ChangeUnitDamage(gv_darren, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    libNtve_gf_ShareVisionofUnit(gv_darren, true, gv_pLAYER_01_USER);
    UnitRemove(gv_womenandChildrenSWATVan1);
    UnitRemove(gv_womenandChildrenSWATVan2);
    UnitCreate(1, "DarrenRodgers", 0, gv_pLAYER_01_USER, RegionRandomPoint(RegionFromId(336)), 270.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifeMax, 200.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 200.0);
    gv_darren = UnitLastCreated();
    TechTreeUnitHelp(gv_pLAYER_01_USER, "DarrenRodgers", true);
    autoFC7A68FB_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFC7A68FB_u = UnitGroupCount(autoFC7A68FB_g, c_unitCountAll);
    for (;; autoFC7A68FB_u -= 1) {
        autoFC7A68FB_var = UnitGroupUnitFromEnd(autoFC7A68FB_g, autoFC7A68FB_u);
        if (autoFC7A68FB_var == null) { break; }
        UnitSetPosition(autoFC7A68FB_var, RegionRandomPoint(RegionFromId(336)), false);
        UnitIssueOrder(autoFC7A68FB_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    }
    RegionPlayableMapSet(RegionFromId(335));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(71964390), 0.0, -1, 10.0, true);
    autoB34B062F_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(235), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoB34B062F_u = UnitGroupCount(autoB34B062F_g, c_unitCountAll);
    for (;; autoB34B062F_u -= 1) {
        autoB34B062F_var = UnitGroupUnitFromEnd(autoB34B062F_g, autoB34B062F_u);
        if (autoB34B062F_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoB34B062F_var, true);
        UnitSetOwner(autoB34B062F_var, gv_pLAYER_04_ROACHES, true);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(1823946118), true);
    UnitSetState(UnitFromId(1823946118), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1823946118), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1823946118), c_unitStateSelectable, false);
    libNtve_gf_ShowHideUnit(UnitFromId(1494504782), true);
    UnitSetState(UnitFromId(1494504782), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1494504782), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(1494504782), c_unitStateSelectable, false);
    libNtve_gf_ShowHideUnit(UnitFromId(12445889), true);
    UnitSetState(UnitFromId(12445889), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(12445889), c_unitStateTargetable, false);
    UnitSetState(UnitFromId(12445889), c_unitStateSelectable, false);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1823946118), true);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1494504782), true);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(12445889), true);
    UnitSetInfoTip(UnitFromId(1823946118), StringExternal("Param/Value/54E1E795"));
    UnitSetInfoTip(UnitFromId(1494504782), StringExternal("Param/Value/460B7A00"));
    UnitSetInfoTip(UnitFromId(12445889), StringExternal("Param/Value/0E1F65DA"));
    gv_womenandChildrenDone = true;
    Wait(2.0, c_timeGame);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    lib1926661B_gf_SetHeroPanelUnit(2, gv_darren);
    lib1926661B_gf_ShowHideHeroPanel(2, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_darren, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M2Darren5", -1), StringExternal("Param/Value/FD092C1C"), StringExternal("Param/Value/81C4929A"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    UnitCreate(1, "Beacon_UPL", c_unitCreateIgnorePlacement, gv_pLAYER_00_NEUTRAL, PointFromId(1951004678), 270.0);
    gv_womenandChildrenHoldoutBeacon = UnitLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenSWATVanPath2_Init () {
    gt_WomenandChildrenSWATVanPath2 = TriggerCreate("gt_WomenandChildrenSWATVanPath2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Troop Despawn
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenTroopDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE))) {
            return false;
        }

        if (!((gv_womenandChildrenActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenTroopDespawn_Init () {
    gt_WomenandChildrenTroopDespawn = TriggerCreate("gt_WomenandChildrenTroopDespawn_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenTroopDespawn, null, RegionFromId(222), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Bullies1
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenBullies1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto34906A22_n;
    int auto34906A22_i;
    int autoE0C541D6_n;
    int autoE0C541D6_i;
    int autoC0FEFC20_n;
    int autoC0FEFC20_i;

    // Conditions
    if (testConds) {
        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((gv_womenandChildrenActive == 1))) {
            return false;
        }

        if (!((gv_womenandChildrenDone == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_womenandChildrenRedZoneBullies1 = 1;
    auto34906A22_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (auto34906A22_i = 1; auto34906A22_i <= auto34906A22_n; auto34906A22_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(226)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitGroupAdd(gv_womenandChildrenRedZoneZerg1, UnitLastCreated());
    }
    autoE0C541D6_n = lib1926661B_gf_DifficultyValueInteger(5, 14);
    for (autoE0C541D6_i = 1; autoE0C541D6_i <= autoE0C541D6_n; autoE0C541D6_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(227)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitGroupAdd(gv_womenandChildrenRedZoneZerg1, UnitLastCreated());
    }
    autoC0FEFC20_n = lib1926661B_gf_DifficultyValueInteger(3, 8);
    for (autoC0FEFC20_i = 1; autoC0FEFC20_i <= autoC0FEFC20_n; autoC0FEFC20_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(228)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitGroupAdd(gv_womenandChildrenRedZoneZerg1, UnitLastCreated());
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenBullies1_Init () {
    gt_WomenandChildrenBullies1 = TriggerCreate("gt_WomenandChildrenBullies1_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenBullies1, null, RegionFromId(224), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Bullies2
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenBullies2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoAD07B7C5_n;
    int autoAD07B7C5_i;
    int autoB96EE7F7_n;
    int autoB96EE7F7_i;
    int auto7B12ADA9_n;
    int auto7B12ADA9_i;

    // Conditions
    if (testConds) {
        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((gv_womenandChildrenActive == 1))) {
            return false;
        }

        if (!((gv_womenandChildrenDone == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_womenandChildrenRedZoneBullies2 = 1;
    autoAD07B7C5_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (autoAD07B7C5_i = 1; autoAD07B7C5_i <= autoAD07B7C5_n; autoAD07B7C5_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(226)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    autoB96EE7F7_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (autoB96EE7F7_i = 1; autoB96EE7F7_i <= autoB96EE7F7_n; autoB96EE7F7_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(227)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    auto7B12ADA9_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
    for (auto7B12ADA9_i = 1; auto7B12ADA9_i <= auto7B12ADA9_n; auto7B12ADA9_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(228)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenBullies2_Init () {
    gt_WomenandChildrenBullies2 = TriggerCreate("gt_WomenandChildrenBullies2_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenBullies2, null, RegionFromId(225), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Overlords Spawn
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenOverlordsSpawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_overlord1;
    unit lv_overlord2;
    unit lv_overlord3;
    unit lv_overlord4;

    // Automatic Variable Declarations
    unitgroup auto50FEB8BC_g;
    int auto50FEB8BC_u;
    unit auto50FEB8BC_var;
    unitgroup auto46C1A006_g;
    int auto46C1A006_u;
    unit auto46C1A006_var;
    unitgroup auto1CA11429_g;
    int auto1CA11429_u;
    unit auto1CA11429_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((gv_myraDavis == EventUnit()) || (gv_darren == EventUnit())))) {
            return false;
        }

        if (!((gv_womenandChildrenActive == 1))) {
            return false;
        }

        if (!((gv_womenandChildrenDone == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(845953311));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord1 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(2, 4));
    UnitIssueOrder(lv_overlord1, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), UnitGetPosition(gv_darren)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(845953311));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord2 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(1, 3));
    UnitIssueOrder(lv_overlord2, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(138797341));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord3 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(2, 4));
    UnitIssueOrder(lv_overlord3, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), UnitGetPosition(gv_darren)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(138797341));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord4 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(1, 3));
    UnitIssueOrder(lv_overlord4, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
    Wait(5.0, c_timeReal);
    MinimapPing(PlayerGroupAll(), UnitGetPosition(lv_overlord1), 5.0, Color(100.00, 0.00, 0.00));
    MinimapPing(PlayerGroupAll(), UnitGetPosition(lv_overlord2), 5.0, Color(100.00, 0.00, 0.00));
    MinimapPing(PlayerGroupAll(), UnitGetPosition(lv_overlord3), 5.0, Color(100.00, 0.00, 0.00));
    MinimapPing(PlayerGroupAll(), UnitGetPosition(lv_overlord4), 5.0, Color(100.00, 0.00, 0.00));
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00126", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    auto50FEB8BC_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto50FEB8BC_u = UnitGroupCount(auto50FEB8BC_g, c_unitCountAll);
    for (;; auto50FEB8BC_u -= 1) {
        auto50FEB8BC_var = UnitGroupUnitFromEnd(auto50FEB8BC_g, auto50FEB8BC_u);
        if (auto50FEB8BC_var == null) { break; }
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50FEB8BC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    Wait(5.0, c_timeGame);
    auto46C1A006_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto46C1A006_u = UnitGroupCount(auto46C1A006_g, c_unitCountAll);
    for (;; auto46C1A006_u -= 1) {
        auto46C1A006_var = UnitGroupUnitFromEnd(auto46C1A006_g, auto46C1A006_u);
        if (auto46C1A006_var == null) { break; }
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto46C1A006_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    Wait(5.0, c_timeGame);
    auto1CA11429_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto1CA11429_u = UnitGroupCount(auto1CA11429_g, c_unitCountAll);
    for (;; auto1CA11429_u -= 1) {
        auto1CA11429_var = UnitGroupUnitFromEnd(auto1CA11429_g, auto1CA11429_u);
        if (auto1CA11429_var == null) { break; }
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto1CA11429_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00127", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(5.0, c_timeGame);
    UnitIssueOrder(lv_overlord1, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord2, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord3, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord4, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenOverlordsSpawn_Init () {
    gt_WomenandChildrenOverlordsSpawn = TriggerCreate("gt_WomenandChildrenOverlordsSpawn_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenOverlordsSpawn, null, RegionFromId(235), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Overlord Despawn
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenOverlordDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_ROACHES))) {
            return false;
        }

        if (!((gv_womenandChildrenActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenOverlordDespawn_Init () {
    gt_WomenandChildrenOverlordDespawn = TriggerCreate("gt_WomenandChildrenOverlordDespawn_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenOverlordDespawn, null, RegionFromId(236), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Darren Dies
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenDarrenDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_darren == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_womenandChildrenDarrenAliveObjective, c_objectiveStateFailed);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenDarrenDies_Init () {
    gt_WomenandChildrenDarrenDies = TriggerCreate("gt_WomenandChildrenDarrenDies_Func");
    TriggerAddEventUnitDied(gt_WomenandChildrenDarrenDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Holdout Overlords Spawn
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenHoldoutOverlordsSpawn_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_overlord1;
    unit lv_overlord2;
    unit lv_overlord3;
    unit lv_overlord4;
    unit lv_overlord5;
    unit lv_overlord6;
    unit lv_overlord7;
    unit lv_overlord8;

    // Automatic Variable Declarations
    unitgroup auto18B21A82_g;
    int auto18B21A82_u;
    unit auto18B21A82_var;
    unitgroup autoB825053D_g;
    int autoB825053D_u;
    unit autoB825053D_var;
    unitgroup autoA48E7369_g;
    int autoA48E7369_u;
    unit autoA48E7369_var;
    unitgroup auto92AF8CDC_g;
    int auto92AF8CDC_u;
    unit auto92AF8CDC_var;
    unitgroup autoA1D4FB17_g;
    int autoA1D4FB17_u;
    unit autoA1D4FB17_var;
    unitgroup autoAD64BCAD_g;
    int autoAD64BCAD_u;
    unit autoAD64BCAD_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_womenandChildrenDone == true))) {
            return false;
        }

        if (!((gv_womenandChildrenActive == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(915621503));
    UnitKill(gv_womenandChildrenHoldoutBeacon);
    RegionPlayableMapSet(RegionFromId(338));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00204", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_darren, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M2Darren6", -1), StringExternal("Param/Value/214D570B"), StringExternal("Param/Value/2E82616A"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1564685289));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 3.0);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    lv_overlord1 = UnitLastCreated();
    gv_womenandChildrenHoldoutSection = true;
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(1, 4));
    UnitIssueOrder(lv_overlord1, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(256591832), 270.0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1278611125));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 3.0);
    lv_overlord2 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(1, 3));
    UnitIssueOrder(lv_overlord2, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(1747443889), 270.0)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1288798552));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 3.0);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    lv_overlord3 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 2));
    UnitIssueOrder(lv_overlord3, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(221888739), 270.0)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1488256493));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 3.0);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    lv_overlord4 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 2));
    UnitIssueOrder(lv_overlord4, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(1874136862), 270.0)), c_orderQueueReplace);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    Wait(2.0, c_timeReal);
    auto18B21A82_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto18B21A82_u = UnitGroupCount(auto18B21A82_g, c_unitCountAll);
    for (;; auto18B21A82_u -= 1) {
        auto18B21A82_var = UnitGroupUnitFromEnd(auto18B21A82_g, auto18B21A82_u);
        if (auto18B21A82_var == null) { break; }
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto18B21A82_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(585126680));
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    lv_overlord5 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 2));
    UnitIssueOrder(lv_overlord5, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(1589533483), 270.0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    autoB825053D_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    autoB825053D_u = UnitGroupCount(autoB825053D_g, c_unitCountAll);
    for (;; autoB825053D_u -= 1) {
        autoB825053D_var = UnitGroupUnitFromEnd(autoB825053D_g, autoB825053D_u);
        if (autoB825053D_var == null) { break; }
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoB825053D_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1378081639));
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord6 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Roach", lib1926661B_gf_DifficultyValueInteger(0, 2));
    UnitIssueOrder(lv_overlord6, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(1570950312), 270.0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    autoA48E7369_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    autoA48E7369_u = UnitGroupCount(autoA48E7369_g, c_unitCountAll);
    for (;; autoA48E7369_u -= 1) {
        autoA48E7369_var = UnitGroupUnitFromEnd(autoA48E7369_g, autoA48E7369_u);
        if (autoA48E7369_var == null) { break; }
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA48E7369_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(594026114));
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord7 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(2, 4));
    UnitIssueOrder(lv_overlord7, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(1993154198), 270.0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    auto92AF8CDC_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto92AF8CDC_u = UnitGroupCount(auto92AF8CDC_g, c_unitCountAll);
    for (;; auto92AF8CDC_u -= 1) {
        auto92AF8CDC_var = UnitGroupUnitFromEnd(auto92AF8CDC_g, auto92AF8CDC_u);
        if (auto92AF8CDC_var == null) { break; }
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(auto92AF8CDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "OverlordTransport", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(391697225));
    UnitGroupAdd(gv_womenandChildrenHoldoutZergUnitGroup, UnitLastCreated());
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 2.0);
    lv_overlord8 = UnitLastCreated();
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(2, 4));
    UnitIssueOrder(lv_overlord8, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), libNtve_gf_PointFacingAngle(PointFromId(1298271495), 270.0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    autoA1D4FB17_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    autoA1D4FB17_u = UnitGroupCount(autoA1D4FB17_g, c_unitCountAll);
    for (;; autoA1D4FB17_u -= 1) {
        autoA1D4FB17_var = UnitGroupUnitFromEnd(autoA1D4FB17_g, autoA1D4FB17_u);
        if (autoA1D4FB17_var == null) { break; }
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoA1D4FB17_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    Wait(5.0, c_timeGame);
    autoAD64BCAD_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(335), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    autoAD64BCAD_u = UnitGroupCount(autoAD64BCAD_g, c_unitCountAll);
    for (;; autoAD64BCAD_u -= 1) {
        autoAD64BCAD_var = UnitGroupUnitFromEnd(autoAD64BCAD_g, autoAD64BCAD_u);
        if (autoAD64BCAD_var == null) { break; }
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
        UnitIssueOrder(autoAD64BCAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueAddToEnd);
    }
    UnitIssueOrder(lv_overlord1, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord2, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord3, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord4, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord5, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord6, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord7, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(lv_overlord8, OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1234787780), 270.0)), c_orderQueueReplace);
    TriggerExecute(gt_WomenandChildrenPart2Start, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenHoldoutOverlordsSpawn_Init () {
    gt_WomenandChildrenHoldoutOverlordsSpawn = TriggerCreate("gt_WomenandChildrenHoldoutOverlordsSpawn_Func");
    TriggerAddEventUnitRegion(gt_WomenandChildrenHoldoutOverlordsSpawn, null, RegionFromId(334), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Part 2 Start
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenPart2Start_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_WomenandChildrenSomeOverlordsDie, true);
    TriggerEnable(gt_MayorOverlordBreaksThrough, true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Osprey", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(337)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(339))), c_orderQueueReplace);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Osprey", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(337)));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(339))), c_orderQueueReplace);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    Wait(8.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    ObjectiveSetState(gv_womenandChildrenRCObjective, c_objectiveStateCompleted);
    PingDestroy(gv_womenandChildrenPing);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/A21D4C8F"));
    Wait(6.0, c_timeReal);
    libVCUI_gf_HideCampaignDirective();
    UnitRemove(UnitFromId(598198931));
    UnitRemove(UnitFromId(105532826));
    RegionPlayableMapSet(RegionFromId(335));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00128", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_MayorOverlord1, true, false);
    TriggerExecute(gt_MayorOverlord2, true, false);
    TriggerExecute(gt_MayorOverlord3, true, false);
    TriggerExecute(gt_MayorOverlord4, true, false);
    TriggerExecute(gt_MayorOverlord5, true, false);
    TriggerExecute(gt_MayorOverlord6, true, false);
    TriggerExecute(gt_MayorOverlord7, true, false);
    ObjectiveCreate(StringExternal("Param/Value/52377BBF"), StringExternal("Param/Value/AEC6F631"), c_objectiveStateActive, true);
    gv_womenandChildrenOverlordMob = ObjectiveLastCreated();
    ObjectiveShow(gv_womenandChildrenOverlordMob, PlayerGroupAll(), true);
    gv_womenandChildrenOverlordPortion = 1;
    gv_womenandChildrenOverlordMayor = 0;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenPart2Start_Init () {
    gt_WomenandChildrenPart2Start = TriggerCreate("gt_WomenandChildrenPart2Start_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children All Overlords Die
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenAllOverlordsDie_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF9F6C888_g;
    int autoF9F6C888_u;
    unit autoF9F6C888_var;
    unitgroup auto36491CD8_g;
    int auto36491CD8_u;
    unit auto36491CD8_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_womenandChildrenOverlordGroup) == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_womenandChildrenOverlordMayor == 0))) {
            return false;
        }

        if (!((gv_womenandChildrenOverlordPortion == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_WomenandChildrenSomeOverlordsDie, false);
    autoF9F6C888_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF9F6C888_u = UnitGroupCount(autoF9F6C888_g, c_unitCountAll);
    for (;; autoF9F6C888_u -= 1) {
        autoF9F6C888_var = UnitGroupUnitFromEnd(autoF9F6C888_g, autoF9F6C888_u);
        if (autoF9F6C888_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(autoF9F6C888_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    auto36491CD8_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto36491CD8_u = UnitGroupCount(auto36491CD8_g, c_unitCountAll);
    for (;; auto36491CD8_u -= 1) {
        auto36491CD8_var = UnitGroupUnitFromEnd(auto36491CD8_g, auto36491CD8_u);
        if (auto36491CD8_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto36491CD8_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    ObjectiveSetState(gv_womenandChildrenOverlordMob, c_objectiveStateCompleted);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Cinematic, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00129", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_MayorQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenAllOverlordsDie_Init () {
    gt_WomenandChildrenAllOverlordsDie = TriggerCreate("gt_WomenandChildrenAllOverlordsDie_Func");
    TriggerAddEventUnitDied(gt_WomenandChildrenAllOverlordsDie, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Women and Children Some Overlords Die
//--------------------------------------------------------------------------------------------------
bool gt_WomenandChildrenSomeOverlordsDie_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto8A5F8095_g;
    int auto8A5F8095_u;
    unit auto8A5F8095_var;
    unitgroup auto973AC54C_g;
    int auto973AC54C_u;
    unit auto973AC54C_var;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_womenandChildrenOverlordGroup) == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_womenandChildrenOverlordMayor > 0))) {
            return false;
        }

        if (!((gv_womenandChildrenOverlordPortion == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_WomenandChildrenAllOverlordsDie, false);
    auto8A5F8095_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto8A5F8095_u = UnitGroupCount(auto8A5F8095_g, c_unitCountAll);
    for (;; auto8A5F8095_u -= 1) {
        auto8A5F8095_var = UnitGroupUnitFromEnd(auto8A5F8095_g, auto8A5F8095_u);
        if (auto8A5F8095_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto8A5F8095_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    auto973AC54C_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto973AC54C_u = UnitGroupCount(auto973AC54C_g, c_unitCountAll);
    for (;; auto973AC54C_u -= 1) {
        auto973AC54C_var = UnitGroupUnitFromEnd(auto973AC54C_g, auto973AC54C_u);
        if (auto973AC54C_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto973AC54C_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    ObjectiveDestroy(gv_womenandChildrenRCObjective);
    ObjectiveSetState(gv_womenandChildrenOverlordMob, c_objectiveStateFailed);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00130", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_MayorQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_WomenandChildrenSomeOverlordsDie_Init () {
    gt_WomenandChildrenSomeOverlordsDie = TriggerCreate("gt_WomenandChildrenSomeOverlordsDie_Func");
    TriggerEnable(gt_WomenandChildrenSomeOverlordsDie, false);
    TriggerAddEventTimePeriodic(gt_WomenandChildrenSomeOverlordsDie, 0.3, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Tower Section Lobby Fight Ends
//--------------------------------------------------------------------------------------------------
bool gt_HysonTowerSectionLobbyFightEnds_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoB5314996_n;
    int autoB5314996_i;

    // Actions
    if (!runActions) {
        return true;
    }

    SoundStop(DataTableGetSound(true, "LobbyMusic"), true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundPlayForPlayer(SoundLink("M2DistantSirens122", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.3, 2.0, 100.0, 0.0);
    Wait(3.0, c_timeReal);
    CameraShakeStop(1);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(UnitFromId(334945370), "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00134", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    UnitIssueOrder(UnitFromId(334945370), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2016599310)), c_orderQueueReplace);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(334945370), true);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.3, 2.0, 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("M2HysonTowerInteriorExplosion", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2HysonFireAlarm", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Large, libNtve_ge_ExplosionType_Terran, PointFromId(1286820415));
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Large, libNtve_ge_ExplosionType_Terran, PointFromId(49394034));
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionEntireMap(), "CaveEntrance");
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionEntireMap(), "TheVoid_RubblePile");
    ActorSend(ActorFromDoodad(DoodadFromId(1213839139)), "SetOpacity 1.000000 0.400000");
    ActorSend(ActorFromDoodad(DoodadFromId(1978995409)), "SetOpacity 1.000000 0.400000");
    ActorSend(ActorFromDoodad(DoodadFromId(1712522682)), "SetOpacity 1.000000 0.400000");
    ActorSend(ActorFromDoodad(DoodadFromId(707187509)), "SetOpacity 1.000000 0.400000");
    gv_hysonTowerHiddenDoodads = 1;
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Large, libNtve_ge_ExplosionType_Terran, PointFromId(49394034));
    Wait(0.14, c_timeGame);
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Large, libNtve_ge_ExplosionType_Terran, PointFromId(136160525));
    Wait(0.14, c_timeGame);
    libNtve_gf_CreateExplosionAtPoint(libNtve_ge_ExplosionSize_Large, libNtve_ge_ExplosionType_Terran, PointFromId(1286820415));
    Wait(1.4, c_timeGame);
    CameraShakeStop(1);
    Wait(1.2, c_timeGame);
    autoB5314996_n = lib1926661B_gf_DifficultyValueInteger(3, 7);
    for (autoB5314996_i = 1; autoB5314996_i <= autoB5314996_n; autoB5314996_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(136160525));
        UnitGroupAdd(gv_hysonTowerRoachGroup, UnitLastCreated());
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(RandomFixed(lib1926661B_gf_DifficultyValueReal(2.2, 1.1), lib1926661B_gf_DifficultyValueReal(4.4, 2.2)), c_timeGame);
        gv_hysonTowerRoachPart = 1;
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00135", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(gt_HysonTowerBeginUpstairsSection, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonTowerSectionLobbyFightEnds_Init () {
    gt_HysonTowerSectionLobbyFightEnds = TriggerCreate("gt_HysonTowerSectionLobbyFightEnds_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Tower Begin Upstairs Section
//--------------------------------------------------------------------------------------------------
bool gt_HysonTowerBeginUpstairsSection_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_hysonTowerRoachGroup) == true))) {
            return false;
        }

        if (!((gv_hysonTowerRoachPart == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitSetOwner(gv_hyson_Sergeant, gv_pLAYER_02_POLICE, true);
    libNtve_gf_ChangeUnitDamage(gv_hyson_Sergeant, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(gv_hyson_Sergeant, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1073877181)), c_orderQueueReplace);
    libNtve_gf_ShowHideUnit(UnitFromId(1453725960), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1373902576), true);
    ObjectiveCreate(StringExternal("Param/Value/F74C8DF1"), StringToText(""), c_objectiveStateActive, true);
    gv_hysonTowerSectionObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_hysonTowerSectionObjective, PlayerGroupAll(), true);
    gv_hysonTowerUpstairsAccessible = 1;
    MinimapPing(PlayerGroupAll(), RegionGetCenter(RegionFromId(104)), 5.0, Color(100.00, 100.00, 0.00));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonTowerBeginUpstairsSection_Init () {
    gt_HysonTowerBeginUpstairsSection = TriggerCreate("gt_HysonTowerBeginUpstairsSection_Func");
    TriggerEnable(gt_HysonTowerBeginUpstairsSection, false);
    TriggerAddEventTimePeriodic(gt_HysonTowerBeginUpstairsSection, 0.3, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Tower Floor 2
//--------------------------------------------------------------------------------------------------
bool gt_HysonTowerFloor2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_hysonTowerUpstairsAccessible == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitUncommandable(gv_myraDavis, true);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(gv_darren, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraLockInput(gv_pLAYER_01_USER, false);
    Wait(3.0, c_timeReal);
    UnitSetPosition(gv_myraDavis, PointFromId(1416291906), false);
    UnitSetPosition(gv_darren, PointFromId(1416291906), false);
    libNtve_gf_MakeUnitUncommandable(gv_myraDavis, false);
    Wait(0.5, c_timeReal);
    RegionPlayableMapSet(RegionFromId(111));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1212335790), 0.0, -1, 10.0, true);
    UnitSetOwner(gv_hyson_Sergeant, gv_pLAYER_05_POLICE_NEUTRAL, true);
    UnitSelect(gv_hyson_Sergeant, gv_pLAYER_01_USER, false);
    lib1926661B_gf_ShowHideHeroPanel(3, false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    ObjectiveSetName(gv_hysonTowerSectionObjective, StringExternal("Param/Value/46FCE483"));
    gv_bossTunnelerSectionActive = 1;
    Wait(2.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2HysonBossGrowl", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(4.0, c_timeReal);
    TriggerExecute(gt_BossTunnelerStart, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonTowerFloor2_Init () {
    gt_HysonTowerFloor2 = TriggerCreate("gt_HysonTowerFloor2_Func");
    TriggerAddEventUnitRegion(gt_HysonTowerFloor2, null, RegionFromId(104), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Start
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_BossTunnelerSpawnPointStart, true, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2RiverwalkSewerAmbience2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerStart_Init () {
    gt_BossTunnelerStart = TriggerCreate("gt_BossTunnelerStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Win
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerWin_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE9A895D2_g;
    int autoE9A895D2_u;
    unit autoE9A895D2_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((EventUnit() == gv_bossTunnelerUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_BossTunnelerBossbarUpdate, false);
    TriggerEnable(gt_BossTunnelerDealDamage, false);
    TriggerDestroy(gt_BossTunnelerSpawnPoint1);
    TriggerDestroy(gt_BossTunnelerSpawnPoint2);
    TriggerDestroy(gt_BossTunnelerSpawnPoint3);
    TriggerDestroy(gt_BossTunnelerSpawnPoint4);
    TriggerDestroy(gt_BossTunnelerSpawnPoint5);
    TriggerDestroy(gt_BossTunnelerSpawnPoint6);
    TriggerDestroy(gt_BossTunnelerSpawnPoint7);
    lib1926661B_gf_SetBossBarCurrentValueLotC(gv_bossTunneler_Bossbar, 0);
    autoE9A895D2_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(111), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE9A895D2_u = UnitGroupCount(autoE9A895D2_g, c_unitCountAll);
    for (;; autoE9A895D2_u -= 1) {
        autoE9A895D2_var = UnitGroupUnitFromEnd(autoE9A895D2_g, autoE9A895D2_u);
        if (autoE9A895D2_var == null) { break; }
        UnitKill(autoE9A895D2_var);
    }
    Wait(1.0, c_timeGame);
    TriggerExecute(gt_HysonTunnelerBossVictory, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerWin_Init () {
    gt_BossTunnelerWin = TriggerCreate("gt_BossTunnelerWin_Func");
    TriggerAddEventUnitDied(gt_BossTunnelerWin, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Bossbar Show
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerBossbarShow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_DisplayBossBarLotC(gv_bossTunneler_Bossbar, StringExternal("Param/Value/E5EC2420"), "Assets\\Textures\\btn-building-zerg-nydusworm.dds", 2750, "Zerg");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerBossbarShow_Init () {
    gt_BossTunnelerBossbarShow = TriggerCreate("gt_BossTunnelerBossbarShow_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Bossbar Update
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerBossbarUpdate_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }

        if (!((EventUnit() == gv_bossTunnelerUnit))) {
            return false;
        }

        if (!((libNtve_gf_UnitIsHidden(EventUnit()) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_SetBossBarCurrentValueLotC(gv_bossTunneler_Bossbar, FixedToInt(UnitGetPropertyFixed(gv_bossTunnelerUnit, c_unitPropLife, c_unitPropCurrent)));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerBossbarUpdate_Init () {
    gt_BossTunnelerBossbarUpdate = TriggerCreate("gt_BossTunnelerBossbarUpdate_Func");
    TriggerAddEventUnitProperty(gt_BossTunnelerBossbarUpdate, null, c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Constant Aggression
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerConstantAggression_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto08DEC0DB_g;
    int auto08DEC0DB_u;
    unit auto08DEC0DB_var;

    // Conditions
    if (testConds) {
        if (!((gv_bossTunnelerSectionActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto08DEC0DB_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(111), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto08DEC0DB_u = UnitGroupCount(auto08DEC0DB_g, c_unitCountAll);
    for (;; auto08DEC0DB_u -= 1) {
        auto08DEC0DB_var = UnitGroupUnitFromEnd(auto08DEC0DB_g, auto08DEC0DB_u);
        if (auto08DEC0DB_var == null) { break; }
        UnitIssueOrder(auto08DEC0DB_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerConstantAggression_Init () {
    gt_BossTunnelerConstantAggression = TriggerCreate("gt_BossTunnelerConstantAggression_Func");
    TriggerAddEventTimePeriodic(gt_BossTunnelerConstantAggression, 3.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point Start
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPointStart_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int auto283E6E70_n = 3;
    int auto283E6E70_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_darren, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M2Darren7", -1), StringExternal("Param/Value/3C32DC84"), StringExternal("Param/Value/5CDB2897"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    Wait(1.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_myraDavis));
    lv_localNydusWorm = UnitLastCreated();
    gv_bossTunnelerUnit = UnitLastCreated();
    UnitSetPropertyFixed(gv_bossTunnelerUnit, c_unitPropLifeMax, gv_bossTunneler_MaxLife);
    UnitSetPropertyFixed(gv_bossTunnelerUnit, c_unitPropLifePercent, 100.0);
    TriggerExecute(gt_BossTunnelerBossbarShow, true, false);
    TriggerEnable(gt_BossTunnelerDealDamage, true);
    ObjectiveDestroy(gv_womenandChildrenOverlordMob);
    ObjectiveCreate(StringExternal("Param/Value/B61002EE"), StringToText(""), c_objectiveStateActive, true);
    gv_bossTunnelerKillObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_bossTunnelerKillObjective, PlayerGroupAll(), true);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_localNydusWorm), 0.0, 100.0, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_darren, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M2Darren8", -1), StringExternal("Param/Value/707B5443"), StringExternal("Param/Value/78C54DA8"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(2.7, c_timeGame);
    for (auto283E6E70_i = 1; auto283E6E70_i <= auto283E6E70_n; auto283E6E70_i += 1) {
        if ((UnitIsAlive(lv_localNydusWorm) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_localNydusWorm), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_localNydusWorm));
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_localNydusWorm), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_localNydusWorm));
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_localNydusWorm), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_localNydusWorm));
            Wait(4.0, c_timeGame);
        }

    }
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossTunnelerUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossTunnelerUnit));
    libNtve_gf_CreateActorAtPoint("OspreyLandingDust", UnitGetPosition(gv_bossTunnelerUnit));
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_localNydusWorm), 0.0, 150.0, 0.0);
    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
    Wait(0.25, c_timeGame);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossTunnelerUnit));
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
    Wait(1.5, c_timeGame);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossTunnelerUnit));
    libNtve_gf_CreateActorAtPoint("OspreyLandingDust", UnitGetPosition(gv_bossTunnelerUnit));
    Wait(0.25, c_timeGame);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossTunnelerUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossTunnelerUnit));
    Wait(6.5, c_timeGame);
    TriggerExecute(gt_BossTunnelerSpawnPoint1, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPointStart_Init () {
    gt_BossTunnelerSpawnPointStart = TriggerCreate("gt_BossTunnelerSpawnPointStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point1
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int auto9FC8D31E_n = 3;
    int auto9FC8D31E_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(808863983));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(2040898196)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(808863983), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (auto9FC8D31E_i = 1; auto9FC8D31E_i <= auto9FC8D31E_n; auto9FC8D31E_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(2, 5), "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(1, 3), "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(5.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roach", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(lib1926661B_gf_DifficultyValueInteger(7, 4), c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(808863983));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(808863983));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(808863983));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(808863983));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(808863983));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(808863983));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(808863983));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(551267662)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint5, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint1_Init () {
    gt_BossTunnelerSpawnPoint1 = TriggerCreate("gt_BossTunnelerSpawnPoint1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point2
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int autoF48D90EF_n = 3;
    int autoF48D90EF_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(827349964));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(2136947206)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(827349964), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (autoF48D90EF_i = 1; autoF48D90EF_i <= autoF48D90EF_n; autoF48D90EF_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(4, "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(4.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(1, 3), "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(5.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(1, 2), "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(6.0, c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(827349964));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(827349964));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(827349964));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(827349964));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(827349964));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(827349964));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(827349964));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(2136947206)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint6, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint2_Init () {
    gt_BossTunnelerSpawnPoint2 = TriggerCreate("gt_BossTunnelerSpawnPoint2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point3
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int auto3D0E2742_n = 3;
    int auto3D0E2742_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(473983788));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(2019511522)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(473983788), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (auto3D0E2742_i = 1; auto3D0E2742_i <= auto3D0E2742_n; auto3D0E2742_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(3, 8), "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(3, 8), "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(3, 8), "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(4.0, c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(473983788));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(473983788));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(473983788));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(473983788));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(473983788));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(473983788));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(473983788));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(2019511522)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint1, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint3_Init () {
    gt_BossTunnelerSpawnPoint3 = TriggerCreate("gt_BossTunnelerSpawnPoint3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point4
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int autoEA4AE3F7_n = 3;
    int autoEA4AE3F7_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(2140990963));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(687357493)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(2140990963), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (autoEA4AE3F7_i = 1; autoEA4AE3F7_i <= autoEA4AE3F7_n; autoEA4AE3F7_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(1, 3), "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(11.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(2, 4), "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(9.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(1, 3), "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(11.0, c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(2140990963));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(2140990963));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(2140990963));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(2140990963));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(2140990963));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(2140990963));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(2140990963));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(687357493)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint7, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint4_Init () {
    gt_BossTunnelerSpawnPoint4 = TriggerCreate("gt_BossTunnelerSpawnPoint4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point5
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int autoFBB34C7C_n = 3;
    int autoFBB34C7C_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1686555955));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(322054087)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm2", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(1686555955), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (autoFBB34C7C_i = 1; autoFBB34C7C_i <= autoFBB34C7C_n; autoFBB34C7C_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(3, 6), "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(0, 1), "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(1, 2), "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(4.0, c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(1686555955));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(1686555955));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(1686555955));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(1686555955));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(1686555955));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(1686555955));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(1686555955));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(322054087)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint2, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint5_Init () {
    gt_BossTunnelerSpawnPoint5 = TriggerCreate("gt_BossTunnelerSpawnPoint5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point6
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int auto8E6CD1D5_n = 3;
    int auto8E6CD1D5_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(563381180));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(551267662)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm2", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(563381180), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (auto8E6CD1D5_i = 1; auto8E6CD1D5_i <= auto8E6CD1D5_n; auto8E6CD1D5_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(3.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(0, 1), "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(3.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(lib1926661B_gf_DifficultyValueInteger(0, 1), "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(3.0, c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(563381180));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(563381180));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(563381180));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(563381180));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(563381180));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(563381180));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(563381180));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(38709233)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint4, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint6_Init () {
    gt_BossTunnelerSpawnPoint6 = TriggerCreate("gt_BossTunnelerSpawnPoint6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Spawn Point7
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerSpawnPoint7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_localNydusWorm;

    // Automatic Variable Declarations
    const int auto1E2C69AB_n = 3;
    int auto1E2C69AB_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(gv_bossTunnelerUnit) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(35803561));
    UnitSetState(UnitLastCreated(), c_unitStateHighlightable, false);
    UnitSetState(UnitLastCreated(), c_unitStateSelectable, false);
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    ActorSend(ActorFromDoodad(DoodadFromId(551267662)), "SetOpacity 1.000000 1.000000");
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitSetPosition(gv_bossTunnelerUnit, PointFromId(35803561), false);
    libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, true);
    UnitRemove(UnitLastCreated());
    for (auto1E2C69AB_i = 1; auto1E2C69AB_i <= auto1E2C69AB_n; auto1E2C69AB_i += 1) {
        if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossTunnelerUnit));
            Wait(4.0, c_timeGame);
        }

    }
    if ((UnitIsAlive(gv_bossTunnelerUnit) == true)) {
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(35803561));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(35803561));
        libNtve_gf_CreateActorAtPoint("OspreyLandingDust", PointFromId(35803561));
        SoundPlayAtPointForPlayer(SoundLink("M2NydusWormDives", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_bossTunnelerUnit), 0.0, 150.0, 0.0);
        CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 3.0);
        Wait(0.25, c_timeGame);
        libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_bossTunnelerUnit), c_animNameDefault, "Unburrow", 0, c_animTimeDefault);
        Wait(1.5, c_timeGame);
        libNtve_gf_ShowHideUnit(gv_bossTunnelerUnit, false);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(35803561));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(35803561));
        Wait(0.25, c_timeGame);
        libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", PointFromId(35803561));
        libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", PointFromId(35803561));
        Wait(6.5, c_timeGame);
        ActorSend(ActorFromDoodad(DoodadFromId(551267662)), "SetOpacity 0.000000 5.000000");
        TriggerExecute(gt_BossTunnelerSpawnPoint3, true, false);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerSpawnPoint7_Init () {
    gt_BossTunnelerSpawnPoint7 = TriggerCreate("gt_BossTunnelerSpawnPoint7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss Tunneler Deal Damage
//--------------------------------------------------------------------------------------------------
bool gt_BossTunnelerDealDamage_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0FD0AE6F_g;
    int auto0FD0AE6F_u;
    unit auto0FD0AE6F_var;

    // Conditions
    if (testConds) {
        if (!((UnitIsValid(gv_bossTunnelerUnit) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitIsHidden(gv_bossTunnelerUnit) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0FD0AE6F_g = UnitGroup(null, gv_pLAYER_01_USER, RegionCircle(UnitGetPosition(gv_bossTunnelerUnit), 1.25), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto0FD0AE6F_u = UnitGroupCount(auto0FD0AE6F_g, c_unitCountAll);
    for (;; auto0FD0AE6F_u -= 1) {
        auto0FD0AE6F_var = UnitGroupUnitFromEnd(auto0FD0AE6F_g, auto0FD0AE6F_u);
        if (auto0FD0AE6F_var == null) { break; }
        UnitDamage(gv_bossTunnelerUnit, "DamageNormal", auto0FD0AE6F_var, 20.0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossTunnelerDealDamage_Init () {
    gt_BossTunnelerDealDamage = TriggerCreate("gt_BossTunnelerDealDamage_Func");
    TriggerEnable(gt_BossTunnelerDealDamage, false);
    TriggerAddEventTimePeriodic(gt_BossTunnelerDealDamage, 2.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Tunneler Boss Victory
//--------------------------------------------------------------------------------------------------
bool gt_HysonTunnelerBossVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossTunnelerUnit == EventUnit()))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_ShowHideBossBarLotC(gv_bossTunneler_Bossbar, false);
    ObjectiveSetState(gv_bossTunnelerKillObjective, c_objectiveStateCompleted);
    ObjectiveSetState(gv_hysonTowerSectionObjective, c_objectiveStateCompleted);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    TriggerExecute(gt_HysonQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonTunnelerBossVictory_Init () {
    gt_HysonTunnelerBossVictory = TriggerCreate("gt_HysonTunnelerBossVictory_Func");
    TriggerAddEventUnitDied(gt_HysonTunnelerBossVictory, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Section Start
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelSectionStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoEFBFF465_g;
    int autoEFBFF465_u;
    unit autoEFBFF465_var;
    unitgroup auto1652665F_g;
    int auto1652665F_u;
    unit auto1652665F_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ArtifactFrancine, true);
    libNtve_gf_ShowHideUnit(UnitFromId(1630771552), true);
    TriggerExecute(gt_RiotTunnelAmbient, true, false);
    gv_riotTunnelSection = 1;
    TriggerEnable(gt_RiotTunnelSectionAttack, true);
    VisFillArea(gv_pLAYER_01_USER, RegionEntireMap(), c_fillTypeUnexplored, false);
    VisRevealerDestroy(gv_mayorSectionRevealer);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1029471211), 4.0, -1, 10.0, true);
    ActorSend(ActorFromDoodad(DoodadFromId(1238481767)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1710793133)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(956306192)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(599768319)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1074785507)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1514720393)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1089901231)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1583538801)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(940757999)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1585713485)), "SetOpacity 0.000000 1.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(1731482149)), "SetOpacity 0.000000 1.000000");
    autoEFBFF465_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(340), UnitFilter((1 << c_targetFilterStructure), 0, 0, (1 << (c_targetFilterGroundUnit - 32))), 0);
    autoEFBFF465_u = UnitGroupCount(autoEFBFF465_g, c_unitCountAll);
    for (;; autoEFBFF465_u -= 1) {
        autoEFBFF465_var = UnitGroupUnitFromEnd(autoEFBFF465_g, autoEFBFF465_u);
        if (autoEFBFF465_var == null) { break; }
        UnitSetState(autoEFBFF465_var, c_unitStateHighlightable, false);
        UnitSetState(autoEFBFF465_var, c_unitStateSelectable, false);
        UnitSetState(autoEFBFF465_var, c_unitStateTargetable, false);
        UnitSetState(autoEFBFF465_var, c_unitStateTargetable, false);
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "RusellPeters", 0, gv_pLAYER_01_USER, PointFromId(459827937));
    gv_riotTunnelSergeant = UnitLastCreated();
    UnitSetPosition(gv_myraDavis, libNtve_gf_PointFacingAngle(PointFromId(1943124572), 270.0), false);
    UnitCreate(1, "InfantryHeavy", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, PointFromId(1330009133), 270.0);
    gv_riotTunnelCorporal = UnitLastCreated();
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropMovementSpeed, 3.375);
    UnitSetPropertyFixed(gv_riotTunnelSergeant, c_unitPropMovementSpeed, 2.5);
    libNtve_gf_ChangeUnitDamage(gv_riotTunnelSergeant, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    libNtve_gf_MakeUnitInvulnerable(gv_myraDavis, false);
    UnitGroupAdd(gv_riotTunnelGroup, gv_myraDavis);
    libNtve_gf_MakeUnitInvulnerable(gv_riotTunnelSergeant, false);
    UnitGroupAdd(gv_riotTunnelGroup, gv_riotTunnelSergeant);
    libNtve_gf_MakeUnitInvulnerable(gv_riotTunnelCorporal, false);
    UnitGroupAdd(gv_riotTunnelGroup, gv_riotTunnelCorporal);
    UnitRemove(UnitFromId(1199587030));
    UnitSetInfoTip(gv_riotTunnelSergeant, StringExternal("Param/Value/A204EB50"));
    Wait(0.5, c_timeGame);
    VisFillArea(gv_pLAYER_01_USER, RegionEntireMap(), c_fillTypeUnexplored, false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    lib1926661B_gf_SetHeroPanelUnit(2, gv_riotTunnelSergeant);
    lib1926661B_gf_ShowHideHeroPanel(2, true);
    TechTreeUnitHelp(1, "RusellPeters", true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00152", null, true, gv_myraDavis, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2RiotTunnel", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    ObjectiveCreate(StringExternal("Param/Value/594BEB06"), StringExternal("Param/Value/BA7701F7"), c_objectiveStateActive, true);
    gv_riotTunnelObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_riotTunnelObjective, PlayerGroupAll(), true);
    ObjectiveCreate(StringExternal("Param/Value/FCF3B30F"), StringExternal("Param/Value/EEC028E0"), c_objectiveStateActive, true);
    gv_riotTunnelSergeantLives = ObjectiveLastCreated();
    ObjectiveShow(gv_riotTunnelSergeantLives, PlayerGroupAll(), true);
    libVCMI_gf_CreateObjectivePing(true, PointFromId(406911585), StringExternal("Param/Value/690D3192"));
    gv_riotFrancinePing = PingLastCreated();
    if ((UnitIsAlive(gv_darren) == true)) {
        UnitRemove(gv_darren);
        SoundPlayAtPointForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_myraDavis), 0.0, 100.0, 0.0);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/2D303983"));
    }
    else {
        SoundPlayAtPointForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(gv_myraDavis), 0.0, 100.0, 0.0);
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7DE47500"));
    }
    auto1652665F_g = UnitGroup("Larva", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1652665F_u = UnitGroupCount(auto1652665F_g, c_unitCountAll);
    for (;; auto1652665F_u -= 1) {
        auto1652665F_var = UnitGroupUnitFromEnd(auto1652665F_g, auto1652665F_u);
        if (auto1652665F_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto1652665F_var, true);
        UnitSetState(auto1652665F_var, c_unitStateHighlightable, false);
        UnitSetState(auto1652665F_var, c_unitStateTargetable, false);
        UnitSetState(auto1652665F_var, c_unitStateSelectable, false);
    }
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelSectionStart_Init () {
    gt_RiotTunnelSectionStart = TriggerCreate("gt_RiotTunnelSectionStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Ambient
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelAmbient_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(26.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2DistantGunfire1", -1), c_maxPlayers, PlayerGroupAll(), 175.0, 0.0);
    Wait(32.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2DistantGunfire2", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    Wait(22.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2DistantScreamandRoar", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelAmbient_Init () {
    gt_RiotTunnelAmbient = TriggerCreate("gt_RiotTunnelAmbient_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Unburrow1
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelUnburrow1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto605C5219_g;
    int auto605C5219_u;
    unit auto605C5219_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_riotTunnelSection == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "InstallationRoof");
    auto605C5219_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(7), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto605C5219_u = UnitGroupCount(auto605C5219_g, c_unitCountAll);
    for (;; auto605C5219_u -= 1) {
        auto605C5219_var = UnitGroupUnitFromEnd(auto605C5219_g, auto605C5219_u);
        if (auto605C5219_var == null) { break; }
        UnitSetOwner(auto605C5219_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto605C5219_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto605C5219_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(auto605C5219_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto605C5219_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(auto605C5219_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto605C5219_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        Wait(RandomFixed(0.7, 1.35), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelUnburrow1_Init () {
    gt_RiotTunnelUnburrow1 = TriggerCreate("gt_RiotTunnelUnburrow1_Func");
    TriggerAddEventUnitRegion(gt_RiotTunnelUnburrow1, null, RegionFromId(7), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Unburrow2
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelUnburrow2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE7636481_g;
    int autoE7636481_u;
    unit autoE7636481_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_riotTunnelSection == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoE7636481_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(252), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE7636481_u = UnitGroupCount(autoE7636481_g, c_unitCountAll);
    for (;; autoE7636481_u -= 1) {
        autoE7636481_var = UnitGroupUnitFromEnd(autoE7636481_g, autoE7636481_u);
        if (autoE7636481_var == null) { break; }
        UnitSetOwner(autoE7636481_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(autoE7636481_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoE7636481_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(autoE7636481_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoE7636481_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(autoE7636481_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoE7636481_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        Wait(RandomFixed(0.7, 1.35), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelUnburrow2_Init () {
    gt_RiotTunnelUnburrow2 = TriggerCreate("gt_RiotTunnelUnburrow2_Func");
    TriggerAddEventUnitRegion(gt_RiotTunnelUnburrow2, null, RegionFromId(252), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Unburrow3
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelUnburrow3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDF70CC16_g;
    int autoDF70CC16_u;
    unit autoDF70CC16_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_riotTunnelSection == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoDF70CC16_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(253), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDF70CC16_u = UnitGroupCount(autoDF70CC16_g, c_unitCountAll);
    for (;; autoDF70CC16_u -= 1) {
        autoDF70CC16_var = UnitGroupUnitFromEnd(autoDF70CC16_g, autoDF70CC16_u);
        if (autoDF70CC16_var == null) { break; }
        UnitSetOwner(autoDF70CC16_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(autoDF70CC16_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoDF70CC16_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(autoDF70CC16_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoDF70CC16_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(autoDF70CC16_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoDF70CC16_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        Wait(RandomFixed(0.7, 1.35), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelUnburrow3_Init () {
    gt_RiotTunnelUnburrow3 = TriggerCreate("gt_RiotTunnelUnburrow3_Func");
    TriggerAddEventUnitRegion(gt_RiotTunnelUnburrow3, null, RegionFromId(253), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Unburrow4
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelUnburrow4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto6DC4733E_g;
    int auto6DC4733E_u;
    unit auto6DC4733E_var;

    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((gv_riotTunnelSection == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto6DC4733E_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(254), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6DC4733E_u = UnitGroupCount(auto6DC4733E_g, c_unitCountAll);
    for (;; auto6DC4733E_u -= 1) {
        auto6DC4733E_var = UnitGroupUnitFromEnd(auto6DC4733E_g, auto6DC4733E_u);
        if (auto6DC4733E_var == null) { break; }
        UnitSetOwner(auto6DC4733E_var, gv_pLAYER_04_ROACHES, true);
        UnitIssueOrder(auto6DC4733E_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto6DC4733E_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(auto6DC4733E_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto6DC4733E_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        UnitIssueOrder(auto6DC4733E_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(auto6DC4733E_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
        Wait(RandomFixed(0.7, 1.35), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelUnburrow4_Init () {
    gt_RiotTunnelUnburrow4 = TriggerCreate("gt_RiotTunnelUnburrow4_Func");
    TriggerAddEventUnitRegion(gt_RiotTunnelUnburrow4, null, RegionFromId(254), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Section Attack
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelSectionAttack_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDE5AB815_g;
    int autoDE5AB815_u;
    unit autoDE5AB815_var;

    // Conditions
    if (testConds) {
        if (!((gv_riotTunnelSection == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoDE5AB815_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(251), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDE5AB815_u = UnitGroupCount(autoDE5AB815_g, c_unitCountAll);
    for (;; autoDE5AB815_u -= 1) {
        autoDE5AB815_var = UnitGroupUnitFromEnd(autoDE5AB815_g, autoDE5AB815_u);
        if (autoDE5AB815_var == null) { break; }
        UnitIssueOrder(autoDE5AB815_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitGroupRandomUnit(gv_riotTunnelGroup, c_unitCountAlive)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelSectionAttack_Init () {
    gt_RiotTunnelSectionAttack = TriggerCreate("gt_RiotTunnelSectionAttack_Func");
    TriggerEnable(gt_RiotTunnelSectionAttack, false);
    TriggerAddEventTimePeriodic(gt_RiotTunnelSectionAttack, 8.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Section Reveal
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelSectionReveal_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00153", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(RandomInt(9, 14), c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M02_1|Line00154", null, true, gv_myraDavis, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    PingSetPosition(gv_riotFrancinePing, PointFromId(354266817));
    PingSetTooltip(gv_riotFrancinePing, StringExternal("Param/Value/5FAC3F37"));
    MinimapPing(PlayerGroupAll(), PointFromId(354266817), 4.0, Color(100.00, 100.00, 0.00));
    ObjectiveDestroy(gv_riotTunnelObjective);
    ObjectiveCreate(StringExternal("Param/Value/CCACD85A"), StringExternal("Param/Value/71043360"), c_objectiveStateActive, true);
    gv_riotTunnelObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_riotTunnelObjective, PlayerGroupAll(), true);
    libNtve_gf_ShowHideUnit(UnitFromId(634069422), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelSectionReveal_Init () {
    gt_RiotTunnelSectionReveal = TriggerCreate("gt_RiotTunnelSectionReveal_Func");
    TriggerAddEventUnitRegion(gt_RiotTunnelSectionReveal, null, RegionFromId(7), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Tunnel Beacon
//--------------------------------------------------------------------------------------------------
bool gt_RiotTunnelBeacon_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitTypeTestFlag(UnitGetType(EventUnit()), c_unitFlagMissile) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_riotTunnelSection == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_riotTunnelObjective, c_objectiveStateCompleted);
    ObjectiveSetState(gv_riotTunnelSergeantLives, c_objectiveStateCompleted);
    libNtve_gf_ChangeUnitDamage(gv_myraDavis, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(gv_riotTunnelSergeant, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    libNtve_gf_ChangeUnitDamage(gv_riotTunnelCorporal, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitKill(UnitFromId(634069422));
    Wait(2.0, c_timeReal);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    TriggerEnable(gt_RiotTunnelSectionAttack, false);
    TriggerExecute(gt_FrancineBossSetup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotTunnelBeacon_Init () {
    gt_RiotTunnelBeacon = TriggerCreate("gt_RiotTunnelBeacon_Func");
    TriggerAddEventUnitRegion(gt_RiotTunnelBeacon, null, RegionFromId(265), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Eggs
//--------------------------------------------------------------------------------------------------
bool gt_BossHKEggs_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_egg;

    // Automatic Variable Declarations
    const int autoC151EF07_n = 50;
    int autoC151EF07_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((lib1926661B_gf_DifficultyValueBoolean(false, true) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "HunterKiller"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoC151EF07_i = 1; autoC151EF07_i <= autoC151EF07_n; autoC151EF07_i += 1) {
        Wait(14.0, c_timeGame);
        if ((UnitIsAlive(gv_bossHKUnit) == true)) {
            UnitIssueOrder(gv_bossHKUnit, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
            UnitSetState(gv_bossHKUnit, c_unitStateMoveSuppressed, false);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossHKUnit));
            SoundPlayForPlayer(SoundLink("Egg_Birth", -1), c_maxPlayers, PlayerGroupAll(), 135.0, 0.0);
            gv_bossEgg = UnitLastCreated();
            libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
            Wait(2.0, c_timeGame);
            UnitSetState(gv_bossHKUnit, c_unitStateMoveSuppressed, true);
            Wait(RandomInt(6, 9), c_timeGame);
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(gv_bossEgg));
            UnitKill(gv_bossEgg);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKEggs_Init () {
    gt_BossHKEggs = TriggerCreate("gt_BossHKEggs_Func");
    TriggerAddEventUnitRegion(gt_BossHKEggs, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Constant Aggression
//--------------------------------------------------------------------------------------------------
bool gt_BossHKConstantAggression_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto93BE5477_g;
    int auto93BE5477_u;
    unit auto93BE5477_var;

    // Conditions
    if (testConds) {
        if (!((gv_bossFrancineSectionActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto93BE5477_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(258), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto93BE5477_u = UnitGroupCount(auto93BE5477_g, c_unitCountAll);
    for (;; auto93BE5477_u -= 1) {
        auto93BE5477_var = UnitGroupUnitFromEnd(auto93BE5477_g, auto93BE5477_u);
        if (auto93BE5477_var == null) { break; }
        UnitIssueOrder(auto93BE5477_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(gv_myraDavis)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKConstantAggression_Init () {
    gt_BossHKConstantAggression = TriggerCreate("gt_BossHKConstantAggression_Func");
    TriggerEnable(gt_BossHKConstantAggression, false);
    TriggerAddEventTimePeriodic(gt_BossHKConstantAggression, 0.3, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount1
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 0))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    Wait(7.0, c_timeGame);
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    SoundPlayForPlayer(SoundLink("M2HKGrowl2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = 1;
    Wait(10.0, c_timeGame);
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount1_Init () {
    gt_BossHKDeathSplitCount1 = TriggerCreate("gt_BossHKDeathSplitCount1_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount1, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount2
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 1))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    SoundPlayForPlayer(SoundLink("M2HKGrowl3", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = 2;
    Wait(12.0, c_timeGame);
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount2_Init () {
    gt_BossHKDeathSplitCount2 = TriggerCreate("gt_BossHKDeathSplitCount2_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount3
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;
    unit lv_larva5;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 2))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath3", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva5 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva5 = UnitLastCreated();
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    SoundPlayForPlayer(SoundLink("M2HKGrowl4", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = lib1926661B_gf_DifficultyValueInteger(2, 3);
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount3_Init () {
    gt_BossHKDeathSplitCount3 = TriggerCreate("gt_BossHKDeathSplitCount3_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount4
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount4_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;
    unit lv_larva5;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 3))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva5 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva5 = UnitLastCreated();
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(5, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(4, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    SoundPlayForPlayer(SoundLink("M2HKGrowl1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKSplitCount = 4;
    gv_bossHKUnit = UnitLastCreated();
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount4_Init () {
    gt_BossHKDeathSplitCount4 = TriggerCreate("gt_BossHKDeathSplitCount4_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount4, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount5
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount5_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;
    unit lv_larva5;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 4))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva5 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva5 = UnitLastCreated();
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    Wait(5.0, c_timeGame);
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    SoundPlayForPlayer(SoundLink("M2HKGrowl1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = 5;
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount5_Init () {
    gt_BossHKDeathSplitCount5 = TriggerCreate("gt_BossHKDeathSplitCount5_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount5, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount6
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount6_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;
    unit lv_larva5;
    unit lv_larva6;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 5))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva5 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva6 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva5 = UnitLastCreated();
    UnitKill(lv_larva6);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva6));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva6 = UnitLastCreated();
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    Wait(5.0, c_timeGame);
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    UnitKill(lv_larva6);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva6));
    SoundPlayForPlayer(SoundLink("M2HKGrowl2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = 6;
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount6_Init () {
    gt_BossHKDeathSplitCount6 = TriggerCreate("gt_BossHKDeathSplitCount6_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount6, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount7
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount7_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;
    unit lv_larva5;
    unit lv_larva6;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 6))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath3", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva5 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva6 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva5 = UnitLastCreated();
    UnitKill(lv_larva6);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva6));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva6 = UnitLastCreated();
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    Wait(3.0, c_timeGame);
    UnitKill(lv_larva6);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva6));
    SoundPlayForPlayer(SoundLink("M2HKGrowl3", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = 7;
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    Wait(9.0, c_timeGame);
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount7_Init () {
    gt_BossHKDeathSplitCount7 = TriggerCreate("gt_BossHKDeathSplitCount7_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount7, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Death SplitCount8
//--------------------------------------------------------------------------------------------------
bool gt_BossHKDeathSplitCount8_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_larva1;
    unit lv_larva2;
    unit lv_larva3;
    unit lv_larva4;
    unit lv_larva5;
    unit lv_larva6;
    unit lv_larva7;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((gv_bossHKSplitCount == 7))) {
            return false;
        }

        if (!((EventUnit() == gv_bossHKUnit))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKEggs);
    UnitKill(gv_bossEgg);
    SoundPlayForPlayer(SoundLink("M2HKDeath2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("ZergBloodLargeBuilding", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateActorAtPoint("DefaultExplosionZergLarge", UnitGetPosition(gv_bossHKUnit));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva1 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva2 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva3 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva4 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva5 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva6 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "LarvalQueen", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, UnitGetPosition(gv_bossHKUnit));
    lv_larva7 = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateStatusBar, true);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropMovementSpeed, 5.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 5.0);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(258))), c_orderQueueAddToEnd);
    Wait(4.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva1 = UnitLastCreated();
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva2 = UnitLastCreated();
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva3 = UnitLastCreated();
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva4 = UnitLastCreated();
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva5 = UnitLastCreated();
    UnitKill(lv_larva6);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva6));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva6 = UnitLastCreated();
    UnitKill(lv_larva7);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Egg", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva7));
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Minimal);
    lv_larva7 = UnitLastCreated();
    Wait(6.0, c_timeGame);
    UnitKill(lv_larva1);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva1));
    UnitKill(lv_larva2);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva2));
    Wait(5.0, c_timeGame);
    UnitKill(lv_larva3);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva3));
    Wait(8.0, c_timeGame);
    UnitKill(lv_larva7);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "HunterKiller", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva7));
    SoundPlayForPlayer(SoundLink("M2HKGrowl4", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    gv_bossHKUnit = UnitLastCreated();
    gv_bossHKSplitCount = 7;
    Wait(7.0, c_timeGame);
    UnitKill(lv_larva5);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva5));
    UnitKill(lv_larva6);
    libNtve_gf_CreateUnitsWithDefaultFacing(6, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva6));
    Wait(12.0, c_timeGame);
    UnitKill(lv_larva4);
    libNtve_gf_CreateUnitsWithDefaultFacing(2, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_larva4));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKDeathSplitCount8_Init () {
    gt_BossHKDeathSplitCount8 = TriggerCreate("gt_BossHKDeathSplitCount8_Func");
    TriggerAddEventUnitDied(gt_BossHKDeathSplitCount8, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve1TimerAppear
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve1TimerAppear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 1))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_bossValveTimer, 42.0, false, c_timeGame);
    gv_bossValveTimer = TimerLastStarted();
    lib1926661B_gf_CreateTimerWindowLotC(TimerLastStarted(), StringExternal("Param/Value/CDE05308"), true, false, 1);
    SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn1", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_BossHKValve1Closed, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve1TimerAppear_Init () {
    gt_BossHKValve1TimerAppear = TriggerCreate("gt_BossHKValve1TimerAppear_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve1TimerAppear, null, RegionFromId(255), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve1TimerStop
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve1TimerStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 1))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKValve1TimerStart);
    TimerPause(gv_bossValveTimer, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve1TimerStop_Init () {
    gt_BossHKValve1TimerStop = TriggerCreate("gt_BossHKValve1TimerStop_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve1TimerStop, null, RegionFromId(255), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve1TimerStart
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve1TimerStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 1))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TimerGetRemaining(gv_bossValveTimer) > 20.0)) {
        SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn1", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    }
    else {
        SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn2", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    }
    Wait(2.0, c_timeGame);
    TimerPause(gv_bossValveTimer, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve1TimerStart_Init () {
    gt_BossHKValve1TimerStart = TriggerCreate("gt_BossHKValve1TimerStart_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve1TimerStart, null, RegionFromId(255), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve1Closed
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve1Closed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TimerGetElapsed(gv_bossValveTimer) > 40.0))) {
            return false;
        }

        if (!((gv_bossObjectiveValveStatus == 1))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(1.0, c_timeGame);
    UnitKill(UnitFromId(786519845));
    SoundPlayForPlayer(SoundLink("M2FrancineWheelCloseOff", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    SoundPlayForPlayer(SoundLink("M2FrancineBossAlarm1", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    ObjectiveDestroy(gv_riotTunnelObjective);
    ObjectiveSetState(gv_bossObjectiveWheel1, c_objectiveStateCompleted);
    ObjectiveCreate(StringExternal("Param/Value/85D1F824"), StringExternal("Param/Value/F36E471D"), c_objectiveStateActive, true);
    gv_bossObjectiveWheel2 = ObjectiveLastCreated();
    ObjectiveShow(gv_bossObjectiveWheel2, PlayerGroupAll(), true);
    libNtve_gf_ShowHideUnit(UnitFromId(110221622), true);
    VisRevealerDestroy(gv_bossValveRevealer);
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(256));
    gv_bossValveRevealer = VisRevealerLastCreated();
    Wait(1.0, c_timeGame);
    gv_bossObjectiveValveStatus = 2;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve1Closed_Init () {
    gt_BossHKValve1Closed = TriggerCreate("gt_BossHKValve1Closed_Func");
    TriggerEnable(gt_BossHKValve1Closed, false);
    TriggerAddEventTimePeriodic(gt_BossHKValve1Closed, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve2TimerAppear
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve2TimerAppear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 2))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_bossValveTimer, 27.0, false, c_timeGame);
    gv_bossValveTimer2 = TimerLastStarted();
    lib1926661B_gf_CreateTimerWindowLotC(TimerLastStarted(), StringExternal("Param/Value/478AFAB9"), true, false, 1);
    SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn1", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_BossHKValve2Closed, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve2TimerAppear_Init () {
    gt_BossHKValve2TimerAppear = TriggerCreate("gt_BossHKValve2TimerAppear_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve2TimerAppear, null, RegionFromId(256), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve2TimerStop
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve2TimerStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 2))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKValve2TimerStart);
    TimerPause(gv_bossValveTimer2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve2TimerStop_Init () {
    gt_BossHKValve2TimerStop = TriggerCreate("gt_BossHKValve2TimerStop_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve2TimerStop, null, RegionFromId(256), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve2TimerStart
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve2TimerStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 2))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TimerGetRemaining(gv_bossValveTimer) > 15.0)) {
        SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn3", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    }
    else {
        SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn1", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    }
    Wait(2.0, c_timeGame);
    TimerPause(gv_bossValveTimer2, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve2TimerStart_Init () {
    gt_BossHKValve2TimerStart = TriggerCreate("gt_BossHKValve2TimerStart_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve2TimerStart, null, RegionFromId(256), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve2Closed
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve2Closed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto48448DCC_n = 4;
    int auto48448DCC_i;

    // Conditions
    if (testConds) {
        if (!((TimerGetElapsed(gv_bossValveTimer2) > 25.0))) {
            return false;
        }

        if (!((gv_bossObjectiveValveStatus == 2))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(1.0, c_timeGame);
    UnitKill(UnitFromId(110221622));
    SoundPlayForPlayer(SoundLink("M2FrancineWheelCloseOff", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    SoundPlayForPlayer(SoundLink("M2FrancineBossAlarm1", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    ObjectiveDestroy(gv_bossObjectiveWheel1);
    ObjectiveSetState(gv_bossObjectiveWheel2, c_objectiveStateCompleted);
    ObjectiveCreate(StringExternal("Param/Value/BDB34013"), StringExternal("Param/Value/3253051E"), c_objectiveStateActive, true);
    gv_bossObjectiveWheel3 = ObjectiveLastCreated();
    ObjectiveShow(gv_bossObjectiveWheel3, PlayerGroupAll(), true);
    libNtve_gf_ShowHideUnit(UnitFromId(458309337), true);
    VisRevealerDestroy(gv_bossValveRevealer);
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(257));
    gv_bossValveRevealer = VisRevealerLastCreated();
    Wait(1.0, c_timeGame);
    gv_bossObjectiveValveStatus = 3;
    for (auto48448DCC_i = 1; auto48448DCC_i <= auto48448DCC_n; auto48448DCC_i += 1) {
        SoundPlayForPlayer(SoundLink("M2FrancineBossAlarm2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
        DataTableSetSound(true, "bossalarm2", SoundLastPlayed());
        Wait(55.5, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve2Closed_Init () {
    gt_BossHKValve2Closed = TriggerCreate("gt_BossHKValve2Closed_Func");
    TriggerEnable(gt_BossHKValve2Closed, false);
    TriggerAddEventTimePeriodic(gt_BossHKValve2Closed, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve3TimeAppear
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve3TimeAppear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 3))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TimerStart(gv_bossValveTimer, 28.0, false, c_timeGame);
    gv_bossValveTimer3 = TimerLastStarted();
    lib1926661B_gf_CreateTimerWindowLotC(TimerLastStarted(), StringExternal("Param/Value/887FB14D"), true, false, 1);
    SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn1", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    TriggerEnable(gt_BossHKValve3Closed, true);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve3TimeAppear_Init () {
    gt_BossHKValve3TimeAppear = TriggerCreate("gt_BossHKValve3TimeAppear_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve3TimeAppear, null, RegionFromId(257), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve3TimerStop
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve3TimerStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 3))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_BossHKValve3TimerStart);
    TimerPause(gv_bossValveTimer3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve3TimerStop_Init () {
    gt_BossHKValve3TimerStop = TriggerCreate("gt_BossHKValve3TimerStop_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve3TimerStop, null, RegionFromId(257), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve3TimerStart
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve3TimerStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_bossObjectiveValveStatus == 3))) {
            return false;
        }

        if (!((gv_myraDavis == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((TimerGetRemaining(gv_bossValveTimer) > 13.0)) {
        SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn1", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    }
    else {
        SoundPlayForPlayer(SoundLink("M2FrancineWheelTurn3", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    }
    Wait(2.0, c_timeGame);
    TimerPause(gv_bossValveTimer3, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve3TimerStart_Init () {
    gt_BossHKValve3TimerStart = TriggerCreate("gt_BossHKValve3TimerStart_Func");
    TriggerAddEventUnitRegion(gt_BossHKValve3TimerStart, null, RegionFromId(257), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Boss HK Valve3Closed
//--------------------------------------------------------------------------------------------------
bool gt_BossHKValve3Closed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TimerGetElapsed(gv_bossValveTimer3) > 26.0))) {
            return false;
        }

        if (!((gv_bossObjectiveValveStatus == 3))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeGame);
    ObjectiveDestroy(gv_bossObjectiveWheel2);
    ObjectiveSetState(gv_bossObjectiveWheel3, c_objectiveStateCompleted);
    UnitKill(UnitFromId(458309337));
    SoundPlayForPlayer(SoundLink("M2FrancineWheelCloseOff", -1), c_maxPlayers, PlayerGroupAll(), 125.0, 0.0);
    VisRevealerDestroy(gv_bossValveRevealer);
    TriggerStop(gt_BossHKValve2Closed);
    SoundStop(DataTableGetSound(true, "bossalarm2"), true);
    TriggerExecute(gt_FrancineBossVictory, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BossHKValve3Closed_Init () {
    gt_BossHKValve3Closed = TriggerCreate("gt_BossHKValve3Closed_Func");
    TriggerEnable(gt_BossHKValve3Closed, false);
    TriggerAddEventTimePeriodic(gt_BossHKValve3Closed, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Boss Setup
//--------------------------------------------------------------------------------------------------
bool gt_FrancineBossSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_ArtifactFrancine, false);
    UnitKill(UnitFromId(1630771552));
    TriggerEnable(gt_BossHKConstantAggression, true);
    gv_bossHKUnit = UnitFromId(1278873071);
    RegionPlayableMapSet(RegionFromId(258));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    FogSetStartHeight(-16.0);
    GameSetLighting("HybridLabInner", 0.0);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(111), c_fillTypeUnexplored, false);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(gv_darren, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(gv_riotTunnelSergeant, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(gv_hyson_Sergeant, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(gv_riotTunnelCorporal, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetPosition(gv_myraDavis, PointFromId(1365672758), false);
    libNtve_gf_ChangeUnitDamage(gv_myraDavis, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    UnitRemove(gv_riotTunnelCorporal);
    UnitRemove(gv_riotTunnelSergeant);
    lib1926661B_gf_ShowHideHeroPanel(2, false);
    UnitSetOwner(gv_hyson_Sergeant, gv_pLAYER_02_POLICE, true);
    UnitSetOwner(gv_riotTunnelCorporal, gv_pLAYER_02_POLICE, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M2FrancineCoolantRoomAmbience", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(309992325), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundPlayForPlayer(SoundLink("M2AlertPositive", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/7CDA755A"));
    TriggerExecute(gt_TipSergeantPeters, true, false);
    Wait(6.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    TriggerExecute(gt_TipCoolantCloseoff, true, false);
    Wait(2.0, c_timeGame);
    TriggerExecute(gt_FrancineBossAppearsandTip, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineBossSetup_Init () {
    gt_FrancineBossSetup = TriggerCreate("gt_FrancineBossSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Boss Appears and Tip
//--------------------------------------------------------------------------------------------------
bool gt_FrancineBossAppearsandTip_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_bossFrancineSectionActive = 1;
    ObjectiveCreate(StringExternal("Param/Value/52D81602"), StringExternal("Param/Value/A8D52D14"), c_objectiveStateActive, true);
    gv_bossObjectiveWheel1 = ObjectiveLastCreated();
    ObjectiveShow(gv_bossObjectiveWheel1, PlayerGroupAll(), true);
    gv_bossObjectiveValveStatus = 1;
    SoundPlayForPlayer(SoundLink("M2HKGrowl1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libNtve_gf_ShowHideUnit(UnitFromId(786519845), true);
    Wait(5.0, c_timeReal);
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(255));
    gv_bossValveRevealer = VisRevealerLastCreated();
    UnitIssueOrder(UnitFromId(1278873071), Order(AbilityCommand("BurrowHunterKillerUp", 0)), c_orderQueueReplace);
    TriggerExecute(gt_BossHKEggs, false, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2RiverwalkSewerAmbience2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineBossAppearsandTip_Init () {
    gt_FrancineBossAppearsandTip = TriggerCreate("gt_FrancineBossAppearsandTip_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Boss Victory
//--------------------------------------------------------------------------------------------------
bool gt_FrancineBossVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/3287B659"));
    libNtve_gf_ChangeUnitDamage(gv_myraDavis, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    SoundPlayForPlayer(SoundLink("M2FrancineAlarm", -1), c_maxPlayers, PlayerGroupAll(), 140.0, 0.0);
    Wait(5.0, c_timeReal);
    TriggerStop(gt_BossHKDeathSplitCount1);
    TriggerStop(gt_BossHKDeathSplitCount2);
    TriggerStop(gt_BossHKDeathSplitCount3);
    TriggerStop(gt_BossHKDeathSplitCount4);
    TriggerStop(gt_BossHKDeathSplitCount5);
    TriggerStop(gt_BossHKDeathSplitCount6);
    TriggerStop(gt_BossHKDeathSplitCount7);
    TriggerStop(gt_BossHKDeathSplitCount8);
    TriggerDestroy(gt_BossHKDeathSplitCount8);
    TriggerDestroy(gt_BossHKDeathSplitCount7);
    TriggerDestroy(gt_BossHKDeathSplitCount6);
    TriggerDestroy(gt_BossHKDeathSplitCount5);
    TriggerDestroy(gt_BossHKDeathSplitCount4);
    TriggerDestroy(gt_BossHKDeathSplitCount3);
    TriggerDestroy(gt_BossHKDeathSplitCount2);
    TriggerDestroy(gt_BossHKDeathSplitCount1);
    TriggerDestroy(gt_BossHKConstantAggression);
    TriggerExecute(gt_VictorySequence, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineBossVictory_Init () {
    gt_FrancineBossVictory = TriggerCreate("gt_FrancineBossVictory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat Civilians Lost
//--------------------------------------------------------------------------------------------------
bool gt_StatCiviliansLost_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "UPLCivilianMale"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "UPLCivilianFemale"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_CiviliansLost += 1;
    gv_stat_CiviliansLostDeniseSection += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StatCiviliansLost_Init () {
    gt_StatCiviliansLost = TriggerCreate("gt_StatCiviliansLost_Func");
    TriggerAddEventUnitDied(gt_StatCiviliansLost, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat_FirenadeKillWindow
//--------------------------------------------------------------------------------------------------
bool gt_Stat_FirenadeKillWindow_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_killCountTemp;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnitDamageSourceUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_DavisFireKills += 1;
    gv_stat_DavisFireTemp += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stat_FirenadeKillWindow_Init () {
    gt_Stat_FirenadeKillWindow = TriggerCreate("gt_Stat_FirenadeKillWindow_Func");
    TriggerAddEventUnitDamaged(gt_Stat_FirenadeKillWindow, null, c_unitDamageTypeAny, c_unitDamageFatal, "MyraDavisFlameGrenadeDoTDamageApply2");
    TriggerAddEventUnitDamaged(gt_Stat_FirenadeKillWindow, null, c_unitDamageTypeAny, c_unitDamageFatal, "MyraDavisFlameGrenadeDoTDamageApply");
    TriggerAddEventUnitDamaged(gt_Stat_FirenadeKillWindow, null, c_unitDamageTypeAny, c_unitDamageFatal, "MyraDavisFlameGrenadeDamage2");
    TriggerAddEventUnitDamaged(gt_Stat_FirenadeKillWindow, null, c_unitDamageTypeAny, c_unitDamageFatal, "MyraDavisFlameGrenadeDamage");
    TriggerAddEventUnitDamaged(gt_Stat_FirenadeKillWindow, null, c_unitDamageTypeAny, c_unitDamageFatal, "MyraDavisFlameGrenadeDoTDamage2");
    TriggerAddEventUnitDamaged(gt_Stat_FirenadeKillWindow, null, c_unitDamageTypeAny, c_unitDamageFatal, "MyraDavisFlameGrenadeDoTDamage");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat_FirenadeLaunch
//--------------------------------------------------------------------------------------------------
bool gt_Stat_FirenadeLaunch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_DavisFireTemp = 0;
    TriggerEnable(gt_Stat_FirenadeKillWindow, true);
    Wait(7.0, c_timeGame);
    TriggerEnable(gt_Stat_FirenadeKillWindow, false);
    if ((gv_stat_DavisFireTemp > 9) && (lib1926661B_gf_DifficultyValueBoolean(false, true) == true)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M02-P1-Hard", gv_pLAYER_01_USER);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stat_FirenadeLaunch_Init () {
    gt_Stat_FirenadeLaunch = TriggerCreate("gt_Stat_FirenadeLaunch_Func");
    TriggerAddEventUnitAbility(gt_Stat_FirenadeLaunch, null, AbilityCommand("MyraDavisFlameGrenade", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat_GrenadesUsed
//--------------------------------------------------------------------------------------------------
bool gt_Stat_GrenadesUsed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "FlameGrenadePickup") || (UnitGetType(EventUnit()) == "FlashbangGrenadePickup")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_PickupsUsed += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stat_GrenadesUsed_Init () {
    gt_Stat_GrenadesUsed = TriggerCreate("gt_Stat_GrenadesUsed_Func");
    TriggerAddEventUnitDied(gt_Stat_GrenadesUsed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat AUD 36 Dies
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAUD36Dies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_aUD36, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/8EADE29D"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAUD36Dies_Init () {
    gt_DefeatAUD36Dies = TriggerCreate("gt_DefeatAUD36Dies_Func");
    TriggerAddEventUnitDied(gt_DefeatAUD36Dies, UnitRefFromVariable("gv_aUD36Unit"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat AUD 109 Dies
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAUD109Dies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_aUD109, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/C6762EB6"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAUD109Dies_Init () {
    gt_DefeatAUD109Dies = TriggerCreate("gt_DefeatAUD109Dies_Func");
    TriggerAddEventUnitDied(gt_DefeatAUD109Dies, UnitRefFromUnit(UnitFromId(1467093865)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat AUD 499 Dies
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAUD499Dies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_aUD499, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/A37B51B4"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAUD499Dies_Init () {
    gt_DefeatAUD499Dies = TriggerCreate("gt_DefeatAUD499Dies_Func");
    TriggerAddEventUnitDied(gt_DefeatAUD499Dies, UnitRefFromUnit(UnitFromId(2053525746)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat AUD 499 Civilians Die
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAUD499CiviliansDie_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_aUD499RescueSectionBegins == 1))) {
            return false;
        }

        if (!((gv_aUD499DeadPresidents > 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_aUD499Survives, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/1DC22496"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAUD499CiviliansDie_Init () {
    gt_DefeatAUD499CiviliansDie = TriggerCreate("gt_DefeatAUD499CiviliansDie_Func");
    TriggerAddEventTimePeriodic(gt_DefeatAUD499CiviliansDie, 0.3, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Construction Officers Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatConstructionOfficersDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_constructionYardOfficersRescued == 0))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(2140304394)) == false))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(295891017)) == false))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(471247181)) == false))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1796183197)) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerStop(gt_ConstructionYardAttackWaves);
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_constructionYardOfficersLive, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/05C517C1"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatConstructionOfficersDead_Init () {
    gt_DefeatConstructionOfficersDead = TriggerCreate("gt_DefeatConstructionOfficersDead_Func");
    TriggerAddEventTimePeriodic(gt_DefeatConstructionOfficersDead, 0.75, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Davis Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatDavisDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_davisMustSurvive, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/1EF81727"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatDavisDead_Init () {
    gt_DefeatDavisDead = TriggerCreate("gt_DefeatDavisDead_Func");
    TriggerAddEventUnitDied(gt_DefeatDavisDead, UnitRefFromVariable("gv_myraDavis"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Rex Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatRexDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_riverWalkCityEngineer, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/CA62D542"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatRexDead_Init () {
    gt_DefeatRexDead = TriggerCreate("gt_DefeatRexDead_Func");
    TriggerAddEventUnitDied(gt_DefeatRexDead, UnitRefFromVariable("gv_riverWalkRexTheEngineer"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Darren Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatDarrenDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_womenandChildrenDarrenAliveObjective, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/D32EE56C"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatDarrenDead_Init () {
    gt_DefeatDarrenDead = TriggerCreate("gt_DefeatDarrenDead_Func");
    TriggerAddEventUnitDied(gt_DefeatDarrenDead, UnitRefFromVariable("gv_darren"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Riot Tunnel Sergeant Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatRiotTunnelSergeantDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_riotTunnelSergeantLives, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/4B254747"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatRiotTunnelSergeantDead_Init () {
    gt_DefeatRiotTunnelSergeantDead = TriggerCreate("gt_DefeatRiotTunnelSergeantDead_Func");
    TriggerAddEventUnitDied(gt_DefeatRiotTunnelSergeantDead, UnitRefFromVariable("gv_riotTunnelSergeant"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat SWAT Van Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatSWATVanDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_swatVanSectionObjective, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/B9FEC223"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatSWATVanDead_Init () {
    gt_DefeatSWATVanDead = TriggerCreate("gt_DefeatSWATVanDead_Func");
    TriggerAddEventUnitDied(gt_DefeatSWATVanDead, UnitRefFromUnit(UnitFromId(1721063265)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat SWAT Van Women and Children Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatSWATVanWomenandChildrenDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_womenandChildrenSWATVan == 1))) {
            return false;
        }

        if (!(((gv_womenandChildrenSWATVan1 == EventUnit()) || (gv_womenandChildrenSWATVan2 == EventUnit())))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    TransmissionClearAll();
    Wait(2.0, c_timeReal);
    ObjectiveSetState(gv_womenandChildrenSwatVanObjective, c_objectiveStateFailed);
    SoundPlayForPlayer(SoundLink("M2AlertNegative", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/9746ED07"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatSWATVanWomenandChildrenDead_Init () {
    gt_DefeatSWATVanWomenandChildrenDead = TriggerCreate("gt_DefeatSWATVanWomenandChildrenDead_Func");
    TriggerAddEventUnitDied(gt_DefeatSWATVanWomenandChildrenDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Sequence
//--------------------------------------------------------------------------------------------------
bool gt_VictorySequence_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_gameOver = true;
    Wait(2.0, c_timeReal);
    lib1926661B_gf_RunMissionVictorySequence(gt_FrancineQ);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictorySequence_Init () {
    gt_VictorySequence = TriggerCreate("gt_VictorySequence_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory
//--------------------------------------------------------------------------------------------------
bool gt_Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((GameGetMissionTime() <= (60.0 * 60.0)) && (lib1926661B_gf_DifficultyValueBoolean(false, true) == true)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M02-P1-Brutal", 1);
    }
    if ((gv_stat_PickupsUsed <= 3) && (lib1926661B_gf_DifficultyValueBoolean(false, true) == true)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M02-P1-Feat", 1);
    }
    lib1926661B_gf_AddVictoryPanelStatistic("UnitsKilledCount");
    lib1926661B_gf_AddVictoryPanelStatistic("StructuresKilledCount");
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Fire Grenade Kills", IntToString(gv_stat_DavisFireKills));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Civilians Lost", IntToString(gv_stat_CiviliansLost));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Lore Collected", (IntToString(gv_stats_LorePickup) + "/6"));
    lib1926661B_gf_EndCampaignMission(gv_pLAYER_01_USER, c_gameOverVictory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Victory_Init () {
    gt_Victory = TriggerCreate("gt_Victory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat
//--------------------------------------------------------------------------------------------------
bool gt_Defeat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_EndCampaignMission(gv_pLAYER_01_USER, c_gameOverDefeat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Defeat_Init () {
    gt_Defeat = TriggerCreate("gt_Defeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Cheat
//--------------------------------------------------------------------------------------------------
bool gt_VictoryCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_VictoryCheat, false);
    TriggerEnable(gt_DefeatCheat, false);
    TriggerEnable(gt_Defeat, false);
    gv_gameOver = true;
    lib1926661B_gf_RunMissionVictorySequence(gt_Victory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryCheat_Init () {
    gt_VictoryCheat = TriggerCreate("gt_VictoryCheat_Func");
    TriggerAddEventPlayerLeft(gt_VictoryCheat, gv_pLAYER_01_USER, c_gameResultVictory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Cheat
//--------------------------------------------------------------------------------------------------
bool gt_DefeatCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_VictoryCheat, false);
    TriggerEnable(gt_DefeatCheat, false);
    TriggerEnable(gt_Victory, false);
    gv_gameOver = true;
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatCheat_Init () {
    gt_DefeatCheat = TriggerCreate("gt_DefeatCheat_Func");
    TriggerAddEventPlayerLeft(gt_DefeatCheat, gv_pLAYER_01_USER, c_gameResultDefeat);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Q
//--------------------------------------------------------------------------------------------------
bool gt_IntroQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_IntroSetup, true, true);
    TriggerExecute(gt_IntroCinematic, true, true);
    TriggerExecute(gt_IntroCinematicEnd, true, true);
    TriggerExecute(gt_IntroCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroQ_Init () {
    gt_IntroQ = TriggerCreate("gt_IntroQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Setup
//--------------------------------------------------------------------------------------------------
bool gt_IntroSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    unitgroup autoE48F8163_g;
    int autoE48F8163_u;
    unit autoE48F8163_var;
    unitgroup auto87BCF0D6_g;
    int auto87BCF0D6_u;
    unit auto87BCF0D6_var;
    const int auto828EE871_ae = 3;
    int auto828EE871_var;
    unitgroup auto5F49FA95_g;
    int auto5F49FA95_u;
    unit auto5F49FA95_var;
    unitgroup autoB01495FA_g;
    int autoB01495FA_u;
    unit autoB01495FA_var;
    const int auto495ABD6F_ae = 31;
    int auto495ABD6F_var;
    const int autoA3047833_ae = 31;
    int autoA3047833_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 0.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    gv_inCinematic = true;
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateFidgetingEnabled, false);
    GameTimeOfDayPause(true);
    autoE48F8163_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE48F8163_u = UnitGroupCount(autoE48F8163_g, c_unitCountAll);
    for (;; autoE48F8163_u -= 1) {
        autoE48F8163_var = UnitGroupUnitFromEnd(autoE48F8163_g, autoE48F8163_u);
        if (autoE48F8163_var == null) { break; }
        if ((libNtve_gf_UnitIsPaused(autoE48F8163_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, autoE48F8163_var);
            libNtve_gf_PauseUnit(autoE48F8163_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    auto87BCF0D6_g = gv_cinematicHiddenUnits;
    auto87BCF0D6_u = UnitGroupCount(auto87BCF0D6_g, c_unitCountAll);
    for (;; auto87BCF0D6_u -= 1) {
        auto87BCF0D6_var = UnitGroupUnitFromEnd(auto87BCF0D6_g, auto87BCF0D6_u);
        if (auto87BCF0D6_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto87BCF0D6_var, false);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(1029858056), true);
    libNtve_gf_ShowHideUnit(UnitFromId(967068166), true);
    libNtve_gf_CreateUnitsAtPoint2(1, "MyraDavisOfficer", 0, gv_pLAYER_01_USER, PointFromId(26));
    gv_introCine_Davis = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorRemove(gv_introCine_Davis, "MyraDavisPistol", 1);
    UnitBehaviorRemove(gv_introCine_Davis, "MyraDavisRifle", 1);
    UnitBehaviorRemove(gv_introCine_Davis, "MyraDavisShotgun", 1);
    UnitCreate(1, "UPLPoliceCruiser", 0, gv_pLAYER_01_USER, PointFromId(461025479), 45.0);
    gv_introCine_DavisCruiser = UnitLastCreated();
    UnitSetState(gv_introCine_DavisCruiser, c_unitStateFidget, true);
    UnitSetState(gv_introCine_DavisCruiser, c_unitStateMoveSuppressed, false);
    UnitBehaviorAdd(gv_introCine_DavisCruiser, "UPLPoliceCruiserSirenLights", gv_introCine_DavisCruiser, 1);
    UnitGroupAdd(gv_introCinematicDavisCruiserGroup, gv_introCine_DavisCruiser);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorAdd(gv_introCine_DavisCruiser, "UPLPoliceCruiserOpenLeft", gv_introCine_DavisCruiser, 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, PointFromId(1638888557));
    gv_introCine_TrafficCruisers[1] = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorAdd(gv_introCine_TrafficCruisers[1], "UPLPoliceCruiserSirenLights", gv_introCine_TrafficCruisers[1], 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, PointFromId(1583709265));
    gv_introCine_TrafficCruisers[2] = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorAdd(gv_introCine_TrafficCruisers[2], "UPLPoliceCruiserSirenLights", gv_introCine_TrafficCruisers[2], 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, PointFromId(483314341));
    gv_introCine_FastCruiser = UnitLastCreated();
    UnitSetPropertyFixed(gv_introCine_FastCruiser, c_unitPropBaseMovementSpeed, 12.0);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorAdd(gv_introCine_FastCruiser, "UPLPoliceCruiserSirenLights", gv_introCine_FastCruiser, 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(371128420));
    gv_introCine_AccidentOfficers[1] = UnitLastCreated();
    UnitSetState(gv_introCine_AccidentOfficers[1], c_unitStateTurnSuppressed, false);
    UnitBehaviorRemove(gv_introCine_AccidentOfficers[1], "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(gv_introCine_AccidentOfficers[1], "UPLPoliceOfficerPistol", gv_introCine_AccidentOfficers[1], 1);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(241348293));
    gv_introCine_AccidentOfficers[2] = UnitLastCreated();
    UnitSetState(gv_introCine_AccidentOfficers[2], c_unitStateTurnSuppressed, false);
    UnitBehaviorRemove(gv_introCine_AccidentOfficers[2], "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(gv_introCine_AccidentOfficers[2], "UPLPoliceOfficerPistol", gv_introCine_AccidentOfficers[2], 1);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1887232722));
    gv_introCine_AccidentOfficers[3] = UnitLastCreated();
    UnitSetState(gv_introCine_AccidentOfficers[3], c_unitStateTurnSuppressed, false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    auto828EE871_var = 1;
    for ( ; auto828EE871_var <= auto828EE871_ae; auto828EE871_var += 1 ) {
        UnitBehaviorRemove(gv_introCine_AccidentOfficers[auto828EE871_var], "UPLPoliceOfficerRifle", 1);
        UnitBehaviorRemove(gv_introCine_AccidentOfficers[auto828EE871_var], "UPLPoliceOfficerPistol", 1);
        UnitBehaviorRemove(gv_introCine_AccidentOfficers[auto828EE871_var], "UPLPoliceOfficerShotgun", 1);
    }
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_introCine_AccidentOfficers[1]), c_animNameDefault, "Talk", c_animFlagPlayForever, c_animTimeDefault);
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_AccidentOfficers[2]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_AccidentOfficers[3]), "AnimGroupApply A A {} Instant");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionFromId(146), "BloodSplats");
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(547271785));
    gv_introCine_AccidentCivilians[1] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(547271785));
    gv_introCine_AccidentCivilians[2] = UnitLastCreated();
    auto5F49FA95_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5F49FA95_u = UnitGroupCount(auto5F49FA95_g, c_unitCountAll);
    for (;; auto5F49FA95_u -= 1) {
        auto5F49FA95_var = UnitGroupUnitFromEnd(auto5F49FA95_g, auto5F49FA95_u);
        if (auto5F49FA95_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(auto5F49FA95_var), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(auto5F49FA95_var, c_unitPropBaseMovementSpeed, 0.7);
    }
    autoB01495FA_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB01495FA_u = UnitGroupCount(autoB01495FA_g, c_unitCountAll);
    for (;; autoB01495FA_u -= 1) {
        autoB01495FA_var = UnitGroupUnitFromEnd(autoB01495FA_g, autoB01495FA_u);
        if (autoB01495FA_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(autoB01495FA_var), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(autoB01495FA_var, c_unitPropBaseMovementSpeed, 0.7);
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(744555580));
    gv_introCine_Civilians[2] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1989179375));
    gv_introCine_Civilians[3] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(2))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1125114628));
    gv_introCine_Civilians[4] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(421316030));
    gv_introCine_Civilians[5] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(1))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1315409267));
    gv_introCine_Civilians[6] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(6))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1596370919));
    gv_introCine_Civilians[7] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(915148919));
    gv_introCine_Civilians[8] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(903139829));
    gv_introCine_Civilians[9] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(6))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(2019341113));
    gv_introCine_Civilians[10] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(738361757));
    gv_introCine_Civilians[11] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(6))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(701624616));
    gv_introCine_Civilians[12] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(138825402));
    gv_introCine_Civilians[13] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(1))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(297195625));
    gv_introCine_Civilians[14] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1122736750));
    gv_introCine_Civilians[15] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(1))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(2100224804));
    gv_introCine_Civilians[16] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(5))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(31633285));
    gv_introCine_Civilians[17] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(2))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(742064424));
    gv_introCine_Civilians[18] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(747637491));
    gv_introCine_Civilians[19] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(3))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1183482098));
    gv_introCine_Civilians[20] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(2124409543));
    gv_introCine_Civilians[21] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(3))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(592274806));
    gv_introCine_Civilians[22] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(6))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(961174019));
    gv_introCine_Civilians[23] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1237893902));
    gv_introCine_Civilians[24] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(7))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(2021321999));
    gv_introCine_Civilians[25] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(813747887));
    gv_introCine_Civilians[26] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(3))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(497389614));
    gv_introCine_Civilians[27] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(4))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(311512299));
    gv_introCine_Civilians[28] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(1))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(513979641));
    gv_introCine_Civilians[29] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(2))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1289497953));
    gv_introCine_Civilians[30] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(5))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(951894192));
    gv_introCine_Civilians[31] = UnitLastCreated();
    ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(1))));
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1265815560));
    gv_introCine_TicketCivilian = UnitLastCreated();
    gv_introCine_Civilians[1] = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    auto495ABD6F_var = 1;
    for ( ; auto495ABD6F_var <= auto495ABD6F_ae; auto495ABD6F_var += 1 ) {
        ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[auto495ABD6F_var]), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(gv_introCine_Civilians[auto495ABD6F_var], c_unitPropBaseMovementSpeed, 0.7);
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "CivilianCarsUnit", 0, gv_pLAYER_00_NEUTRAL, PointFromId(936620278));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "NewsHelicopter", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1795083351));
    gv_introCine_NewsHelo = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetPropertyFixed(gv_introCine_NewsHelo, c_unitPropHeight, 8.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "TruckSemiUnit", 0, gv_pLAYER_00_NEUTRAL, PointFromId(2019076699));
    gv_introCine_BigRig = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "TruckSemiUnit", 0, gv_pLAYER_00_NEUTRAL, PointFromId(2097261000));
    gv_introCine_Trucks = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "CruiserBike", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1509743677));
    gv_introCine_FinalTruck = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLAnimalControlOfficer", 0, gv_pLAYER_03_CIVILIANS, PointFromId(1686344836));
    gv_introCine_AnimalControl = UnitLastCreated();
    UnitSetState(gv_introCine_AnimalControl, c_unitStateTurnSuppressed, false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1571634987));
    gv_introCine_OfficerApartments = UnitLastCreated();
    UnitSetState(gv_introCine_OfficerApartments, c_unitStateTurnSuppressed, false);
    UnitBehaviorRemove(gv_introCine_OfficerApartments, "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(gv_introCine_OfficerApartments, "UPLPoliceOfficerPistol", 1);
    UnitBehaviorRemove(gv_introCine_OfficerApartments, "UPLPoliceOfficerShotgun", 1);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_ShowHideUnit(UnitFromId(991392342), true);
    libNtve_gf_PauseUnit(UnitFromId(991392342), false);
    libNtve_gf_ShowHideUnit(UnitFromId(559084893), true);
    libNtve_gf_PauseUnit(UnitFromId(559084893), false);
    autoA3047833_var = 1;
    for ( ; autoA3047833_var <= autoA3047833_ae; autoA3047833_var += 1 ) {
        UnitSetTeamColorIndex(gv_introCine_Civilians[autoA3047833_var], PlayerGetColorIndex(RandomInt(1, 12), true));
    }
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[10]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[10]), "AnimGroupApply A A {} Instant");
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[10]), c_animNameDefault, "Talk", c_animFlagPlayForever, c_animTimeDefault);
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[11]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[11]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[12]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[12]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[23]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[23]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[31]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[31]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[24]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[24]), "AnimGroupApply A A {} Instant");
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[24]), c_animNameDefault, "Talk", c_animFlagPlayForever, c_animTimeDefault);
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[25]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[25]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[26]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[26]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[27]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[27]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[28]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[28]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[29]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[29]), "AnimGroupApply A A {} Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[30]), "AnimGroupRemove Slow Instant");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[30]), "AnimGroupApply A A {} Instant");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroSetup_Init () {
    gt_IntroSetup = TriggerCreate("gt_IntroSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto167CAB65_g;
    int auto167CAB65_u;
    unit auto167CAB65_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(208), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2IntroMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    Wait(0.5, c_timeReal);
    gf_DisplayTitleCard();
    Wait(4.2, c_timeReal);
    CameraApplyInfo(1, CameraInfoFromId(477), 11.0, -1, 10.0, true);
    CinematicFade(true, 15.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(5.0, c_timeReal);
    CinematicFade(true, 5.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    CameraApplyInfo(1, CameraInfoFromId(87), 18.0, -1, 10.0, true);
    Wait(6.0, c_timeReal);
    SoundPlayAtPointForPlayer(SoundLink("M2IntroCinematicNewsCopterFlyby", -1), c_maxPlayers, PlayerGroupAll(), PointFromId(27), 0.0, 75.0, 0.0);
    UnitIssueOrder(gv_introCine_NewsHelo, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(674292937)), c_orderQueueReplace);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_introCine_Davis), c_animNameDefault, "Stand Work Start", c_animFlagPlayForever, c_animTimeDefault);
    Wait(8.35, c_timeReal);
    libNtve_gf_MakeUnitFacePoint(gv_introCine_Davis, libNtve_gf_PointFacingAngle(PointFromId(26), 270.0), 0.0);
    Wait(2.0, c_timeReal);
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[2]), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Civilians[3]), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
    UnitSetPropertyFixed(gv_introCine_Civilians[2], c_unitPropBaseMovementSpeed, 0.7);
    UnitSetPropertyFixed(gv_introCine_Civilians[3], c_unitPropBaseMovementSpeed, 0.7);
    UnitIssueOrder(gv_introCine_Civilians[20], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1063479534)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[21], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1063479534)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[3], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1063479534)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[19], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1063479534)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_TicketCivilian, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1469667422)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_TicketCivilian, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(436635000)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[13], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1267095119)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[2], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1267095119)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[14], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1253027467)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[22], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1611924274)), c_orderQueueAddToEnd);
    Wait(1.0, c_timeReal);
    Wait(4.0, c_timeReal);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(gv_introCine_Davis), c_animNameDefault, "Stand Work End", c_animFlagNonLooping, c_animTimeDefault);
    UnitSetState(gv_introCine_Davis, c_unitStateFidget, true);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(27)), c_orderQueueReplace);
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Davis), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
    UnitSetPropertyFixed(gv_introCine_Davis, c_unitPropBaseMovementSpeed, 1.0);
    Wait(2.3, c_timeReal);
    UnitRemove(gv_introCine_Davis);
    SoundPlayAtPointForPlayer(SoundLink("SpecialOpsDropship_Load", -1), c_maxPlayers, PlayerGroupAll(), PointFromId(27), 0.0, 75.0, 0.0);
    UnitBehaviorRemove(gv_introCine_DavisCruiser, "UPLPoliceCruiserOpenLeft", 1);
    UnitBehaviorRemove(gv_introCine_DavisCruiser, "UPLPoliceCruiserSirenLights", 1);
    Wait(1.5, c_timeGame);
    UnitSetState(gv_introCine_DavisCruiser, c_unitStateMoveSuppressed, true);
    UnitSetFacing(gv_introCine_DavisCruiser, 90.0, 2.0);
    Wait(2.0, c_timeReal);
    auto167CAB65_g = UnitGroup(null, c_playerAny, RegionFromId(32), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto167CAB65_u = UnitGroupCount(auto167CAB65_g, c_unitCountAll);
    for (;; auto167CAB65_u -= 1) {
        auto167CAB65_var = UnitGroupUnitFromEnd(auto167CAB65_g, auto167CAB65_u);
        if (auto167CAB65_var == null) { break; }
        libNtve_gf_PauseUnit(auto167CAB65_var, false);
        libNtve_gf_ShowHideUnit(auto167CAB65_var, true);
    }
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(39)), c_orderQueueReplace);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(40)), c_orderQueueAddToEnd);
    UnitSetPropertyFixed(gv_introCine_DavisCruiser, c_unitPropMovementSpeed, 2.3);
    Wait(1.0, c_timeReal);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_introCinematicDavisCruiserGroup, true, false);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(gv_introCine_Trucks, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(85)), c_orderQueueReplace);
    Wait(1.5, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2TrafficAccidentAmbience2", 0), c_maxPlayers, PlayerGroupAll(), 60.0, 0.0);
    Wait(1.0, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00001", null, true, null, false);
    Wait(2.0, c_timeReal);
    CameraApplyInfo(1, CameraInfoFromId(600710598), 5.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00002", null, true, null, false);
    Wait(0.5, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00003", null, true, null, false);
    CameraApplyInfo(1, CameraInfoFromId(90), 6.0, -1, 10.0, false);
    UnitSetPropertyFixed(gv_introCine_DavisCruiser, c_unitPropMovementSpeed, 2.0);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(192)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(193)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(204)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(194)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(205)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(195)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(196)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_BigRig, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(203)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[8], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1458599221)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[9], OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1458599221)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[5], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1088802440)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[4], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1088802440)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[6], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1483539320)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[7], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1483539320)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[17], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1948336946)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[16], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1948336946)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[15], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1948336946)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[18], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1253027467)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Civilians[13], OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1611924274)), c_orderQueueAddToEnd);
    Wait(5.5, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2TrafficAccidentAmbience23", 0), c_maxPlayers, PlayerGroupAll(), 80.0, 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00004", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00005", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00006", null, true, null, false);
    Wait(2.0, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00007", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00008", null, true, null, false);
    gf_CivilianCreatorCinematic(5, RegionFromId(10), RegionFromId(16));
    gf_CivilianCreatorCinematic(4, RegionFromId(12), RegionFromId(15));
    Wait(0.5, c_timeReal);
    TriggerExecute(gt_IntroCinematicRunningCivilianScreams, true, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00009", null, true, null, false);
    Wait(1.0, c_timeReal);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(182)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(183)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(184)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(185)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(186)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(187)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(188)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(189)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_DavisCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(190)), c_orderQueueAddToEnd);
    gf_CivilianCreatorCinematic(4, RegionFromId(13), RegionFromId(11));
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00010", null, true, null, false);
    SoundPlayForPlayer(SoundLink("M2TrafficAccidentAmbience22", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.0, c_timeReal);
    UnitIssueOrder(gv_introCine_FinalTruck, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(204078277)), c_orderQueueReplace);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00011", null, true, null, false);
    gf_CivilianCreatorCinematic(2, RegionFromId(13), RegionFromId(11));
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00012", null, true, null, false);
    Wait(0.2, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00013", null, true, null, false);
    Wait(0.25, c_timeReal);
    CameraApplyInfo(1, CameraInfoFromId(206), 9.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00014", null, true, null, false);
    CinematicFade(false, 2.3, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(1.0, c_timeReal);
    libHots_gf_PlaySoundLinkasMusic(SoundLink("ApproachApts", 0), false, false);
    gv_connellyApartmentsSectionActive = 1;
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(527), 0.0, -1, 10.0, true);
    UnitRemove(gv_introCine_DavisCruiser);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, PointFromId(190));
    gv_introCine_DavisCruiser = UnitLastCreated();
    UnitSetState(gv_introCine_DavisCruiser, c_unitStateStunned, true);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetState(gv_introCine_DavisCruiser, c_unitStateInvulnerable, true);
    libNtve_gf_CreateUnitsAtPoint2(1, "MyraDavisOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, PointFromId(526));
    gv_introCine_Davis = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Davis), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
    UnitAbilityRemove(gv_introCine_Davis, "MyraDavisFlashBangGrenade");
    UnitAbilityRemove(gv_introCine_Davis, "MyraDavisHealingPatch");
    UnitSetPropertyFixed(gv_introCine_Davis, c_unitPropMovementSpeed, 1.2);
    CinematicFade(true, 3.2, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    UnitBehaviorAdd(gv_introCine_DavisCruiser, "UPLPoliceCruiserSirenLights", gv_introCine_DavisCruiser, 1);
    UnitBehaviorAdd(gv_introCine_DavisCruiser, "UPLPoliceCruiserOpenLeft", gv_introCine_DavisCruiser, 1);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(531)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(537)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(541)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(542)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(668)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(669)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(690)), c_orderQueueAddToEnd);
    CameraApplyInfo(1, CameraInfoFromId(691), 6.0, -1, 10.0, true);
    Wait(1.0, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00015", null, true, gv_introCine_Davis, false);
    Wait(0.8, c_timeReal);
    CameraApplyInfo(1, CameraInfoFromId(530), 0.0, -1, 10.0, true);
    CameraApplyInfo(1, CameraInfoFromId(692), 6.5, -1, 10.0, true);
    Wait(0.7, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00016", null, true, null, false);
    Wait(0.5, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00017", null, true, null, false);
    CameraApplyInfo(1, CameraInfoFromId(671), 6.0, -1, 10.0, true);
    Wait(0.25, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00018", null, true, null, false);
    UnitSetPropertyFixed(gv_introCine_Davis, c_unitPropMovementSpeed, 1.18);
    Wait(0.25, c_timeReal);
    CameraApplyInfo(1, CameraInfoFromId(687), 5.0, -1, 10.0, true);
    TriggerExecute(gt_IntroCinematicAnimalControlDelayedPan, true, false);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00019", null, true, null, false);
    Wait(1.0, c_timeReal);
    libNtve_gf_MakeUnitLookAtUnit(gv_introCine_AnimalControl, "MedHeadOnlySubtle", gv_introCine_Davis, "Ref_Head Mount");
    libNtve_gf_MakeUnitLookAtUnit(gv_introCine_OfficerApartments, "MedHeadOnly", gv_introCine_Davis, "Ref_Head");
    Wait(1.0, c_timeGame);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(1.4, c_timeGame);
    SoundPlayForPlayer(SoundLink("UI_CheckboxSelect2", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(679416963), 0.0, -1, 10.0, true);
    CinematicFade(true, 0.1, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(0.5, c_timeGame);
    CinematicFade(false, 0.1, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(1.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("TreeViper_death", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(0.2, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(601549074), 0.0, -1, 10.0, true);
    CinematicFade(true, 0.1, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(0.6, c_timeGame);
    CinematicFade(false, 0.1, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(1.2, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(456742132), 0.0, -1, 10.0, true);
    SoundPlayForPlayer(SoundLink("Amb_ZergHordeQuad_Small", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    CameraApplyInfo(1, CameraInfoFromId(208466754), 0.7, -1, 10.0, true);
    CameraShakeStart(1, c_cameraPositionTarget, c_cameraDirectionZ, 0.024, 2.0, 100.0, 2.0);
    CinematicFade(true, 0.1, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(0.8, c_timeGame);
    CameraShakeStop(gv_pLAYER_01_USER);
    SoundStop(SoundLastPlayed(), true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1256697124), 0.0, -1, 10.0, true);
    UnitSetPropertyFixed(gv_introCine_OfficerApartments, c_unitPropLife, 1.0);
    UnitSetPropertyFixed(gv_introCine_AnimalControl, c_unitPropLife, 1.0);
    libNtve_gf_UnitCreateFacingPoint(1, "Zergling", 0, gv_pLAYER_04_ROACHES, PointFromId(694), UnitGetPosition(gv_introCine_OfficerApartments));
    UnitSetTeamColorIndex(UnitLastCreated(), 12);
    UnitSetState(UnitLastCreated(), c_unitStateInvulnerable, true);
    UnitSetState(gv_introCine_Davis, c_unitStateInvulnerable, true);
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), gv_introCine_OfficerApartments), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), gv_introCine_AnimalControl), c_orderQueueAddToEnd);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryCombat, true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDeath, true);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicRodentAttacks", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    TriggerExecute(gt_IntroCinematicDavisRodentTransmission, true, false);
    Wait(0.4, c_timeReal);
    libNtve_gf_MakeUnitLookAtUnit(gv_introCine_OfficerApartments, "FastStandingSubtle", UnitLastCreated(), "Ref_Center");
    Wait(0.4, c_timeReal);
    CinematicFade(false, 0.25, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(0.1, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2ScreamingMan4", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(0.75, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2ScreamingWoman2", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("ZergMothership_ChargeGunImpact", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("ShadowUnit_Small_DeathFX", 4), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(2.5, c_timeReal);
    while (!((UnitIsAlive(gv_introCine_AnimalControl) == false))) {
        Wait(0.06, c_timeGame);
    }
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDeath, false);
    Wait(1.0, c_timeGame);
    libNtve_gf_MakeUnitFacePoint(UnitLastCreated(), UnitGetPosition(gv_introCine_Davis), 5.0);
    libNtve_gf_MakeUnitFacePoint(gv_introCine_Davis, UnitGetPosition(UnitLastCreated()), 1.0);
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(146), "BloodSplats");
    CameraApplyInfo(1, CameraInfoFromId(670), 0.0, -1, 10.0, true);
    CinematicFade(true, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(1.5, c_timeGame);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00021", null, true, gv_introCine_Davis, false);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicZerglingGrowl", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.5, c_timeGame);
    libNtve_gf_PauseUnit(UnitLastCreated(), true);
    UnitSetState(UnitLastCreated(), c_unitStateInvulnerable, false);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    ActorSend(libNtve_gf_MainActorofUnit(gv_introCine_Davis), "AnimGroupRemove Slow Instant");
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingUnit(AbilityCommand("attack", 0), UnitLastCreated()), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicTranqGun", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.1, c_timeGame);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingUnit(AbilityCommand("attack", 0), UnitLastCreated()), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicTranqGun", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(0.75, c_timeGame);
    libNtve_gf_ChangeUnitDamage(UnitLastCreated(), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega);
    UnitSetState(UnitLastCreated(), c_unitStateInvulnerable, true);
    Wait(0.58, c_timeGame);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00022", null, true, gv_introCine_Davis, false);
    Wait(0.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2IntroCinematicZerglingRoar", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitBehaviorAdd(gv_introCine_Davis, "MyraDavisPistol", gv_introCine_Davis, 1);
    UnitBehaviorRemove(gv_introCine_Davis, "MyraDavisRifle", 1);
    UnitBehaviorRemove(gv_introCine_Davis, "MyraDavisShotgun", 1);
    libNtve_gf_PauseUnit(UnitLastCreated(), false);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("move", 0), gv_introCine_Davis), c_orderQueueReplace);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLife, 8.0);
    Wait(0.33, c_timeGame);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryCombat, false);
    UnitSetState(UnitLastCreated(), c_unitStateInvulnerable, false);
    UnitIssueOrder(gv_introCine_Davis, OrderTargetingUnit(AbilityCommand("attack", 0), UnitLastCreated()), c_orderQueueReplace);
    UnitSetState(gv_introCine_Davis, c_unitStateInvulnerable, false);
    while (!((UnitIsAlive(UnitLastCreated()) == false))) {
        Wait(0.06, c_timeGame);
    }
    Wait(1.4, c_timeGame);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematic_Init () {
    gt_IntroCinematic = TriggerCreate("gt_IntroCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, UnitLastCreatedGroup(), false, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(697), 0.0, -1, 10.0, true);
    TransmissionClearAll();
    SoundStopAllTriggerSounds(false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicEnd_Init () {
    gt_IntroCinematicEnd = TriggerCreate("gt_IntroCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_IntroCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup autoF8CC558F_g;
    int autoF8CC558F_u;
    unit autoF8CC558F_var;
    unitgroup autoB6547DEB_g;
    int autoB6547DEB_u;
    unit autoB6547DEB_var;
    unitgroup auto4FD4AEE7_g;
    int auto4FD4AEE7_u;
    unit auto4FD4AEE7_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_IntroCinematicAccidentAmbience, false);
    TriggerEnable(gt_IntroCinematicAccidentStop, false);
    TriggerEnable(gt_IntroCinematicCivilianRedirect, false);
    TriggerEnable(gt_IntroCinematicFinalTruckMove, false);
    TriggerEnable(gt_IntroCinematicCivilianRedirect, false);
    autoF8CC558F_g = gv_cinematicTempUnits;
    autoF8CC558F_u = UnitGroupCount(autoF8CC558F_g, c_unitCountAll);
    for (;; autoF8CC558F_u -= 1) {
        autoF8CC558F_var = UnitGroupUnitFromEnd(autoF8CC558F_g, autoF8CC558F_u);
        if (autoF8CC558F_var == null) { break; }
        UnitRemove(autoF8CC558F_var);
    }
    autoB6547DEB_g = gv_cinematicHiddenUnits;
    autoB6547DEB_u = UnitGroupCount(autoB6547DEB_g, c_unitCountAll);
    for (;; autoB6547DEB_u -= 1) {
        autoB6547DEB_var = UnitGroupUnitFromEnd(autoB6547DEB_g, autoB6547DEB_u);
        if (autoB6547DEB_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoB6547DEB_var, true);
    }
    auto4FD4AEE7_g = gv_cinematicPausedUnits;
    auto4FD4AEE7_u = UnitGroupCount(auto4FD4AEE7_g, c_unitCountAll);
    for (;; auto4FD4AEE7_u -= 1) {
        auto4FD4AEE7_var = UnitGroupUnitFromEnd(auto4FD4AEE7_g, auto4FD4AEE7_u);
        if (auto4FD4AEE7_var == null) { break; }
        libNtve_gf_PauseUnit(auto4FD4AEE7_var, false);
    }
    GameTimeOfDayPause(false);
    DialogDestroy(gv_titleCardDialog);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateFidgetingEnabled, true);
    VisExploreArea(gv_pLAYER_01_USER, RegionEntireMap(), false, false);
    TriggerExecute(gt_ParkSectionBegins, true, false);
    Wait(0.5, c_timeReal);
    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.5;
    }
    else {
        lv_fadeDuration = 1.0;
    }
    gv_inCinematic = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCleanup_Init () {
    gt_IntroCleanup = TriggerCreate("gt_IntroCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Animal Control Delayed Pan
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicAnimalControlDelayedPan_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(2.5, c_timeGame);
    CameraApplyInfo(1, CameraInfoFromId(670), 3.5, -1, 10.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicAnimalControlDelayedPan_Init () {
    gt_IntroCinematicAnimalControlDelayedPan = TriggerCreate("gt_IntroCinematicAnimalControlDelayedPan_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Accident Ambience
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicAccidentAmbience_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_PlayerInCinematicMode(gv_pLAYER_01_USER) == true))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "UPLPoliceCruiser"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundPlayForPlayer(SoundLink("M2TrafficAccidentAmbience", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "Accident", SoundLastPlayed());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicAccidentAmbience_Init () {
    gt_IntroCinematicAccidentAmbience = TriggerCreate("gt_IntroCinematicAccidentAmbience_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicAccidentAmbience, null, RegionFromId(118), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Accident Stop
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicAccidentStop_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_aUD24Blockade == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "UPLPoliceCruiser"))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundStop(DataTableGetSound(true, "Accident"), true);
    SoundPlayForPlayer(SoundLink("M2IntroFastCopDriveBy", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(8.5, c_timeReal);
    UnitIssueOrder(gv_introCine_FastCruiser, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1177443429)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicAccidentStop_Init () {
    gt_IntroCinematicAccidentStop = TriggerCreate("gt_IntroCinematicAccidentStop_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicAccidentStop, null, RegionFromId(119), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Final Truck Move
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicFinalTruckMove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "CruiserBike"))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1177443429)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicFinalTruckMove_Init () {
    gt_IntroCinematicFinalTruckMove = TriggerCreate("gt_IntroCinematicFinalTruckMove_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicFinalTruckMove, null, RegionFromId(123), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Running Civilian Screams
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicRunningCivilianScreams_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(2.0, c_timeGame);
    libVCMI_gf_PlaySoundCinematic(SoundLink("M2ScreamingWoman1", -1), PlayerGroupAll(), 35.0, 0.0);
    Wait(1.0, c_timeGame);
    libVCMI_gf_PlaySoundCinematic(SoundLink("M2ScreamingMan1", -1), PlayerGroupAll(), 50.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicRunningCivilianScreams_Init () {
    gt_IntroCinematicRunningCivilianScreams = TriggerCreate("gt_IntroCinematicRunningCivilianScreams_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Traffic Cops Face1
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicTrafficCopsFace1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitFacePoint(gv_introCine_AccidentOfficers[1], UnitGetPosition(gv_introCine_AccidentOfficers[3]), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_introCine_AccidentOfficers[3], UnitGetPosition(gv_introCine_AccidentOfficers[1]), 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicTrafficCopsFace1_Init () {
    gt_IntroCinematicTrafficCopsFace1 = TriggerCreate("gt_IntroCinematicTrafficCopsFace1_Func");
    TriggerEnable(gt_IntroCinematicTrafficCopsFace1, false);
    TriggerAddEventTimePeriodic(gt_IntroCinematicTrafficCopsFace1, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Civilian Redirect
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicCivilianRedirect_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(195)), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicCivilianRedirect_Init () {
    gt_IntroCinematicCivilianRedirect = TriggerCreate("gt_IntroCinematicCivilianRedirect_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicCivilianRedirect, null, RegionFromId(14), true);
    TriggerAddEventUnitRegion(gt_IntroCinematicCivilianRedirect, null, RegionFromId(20), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Davis Rodent Transmission
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicDavisRodentTransmission_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00020", null, true, gv_introCine_Davis, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicDavisRodentTransmission_Init () {
    gt_IntroCinematicDavisRodentTransmission = TriggerCreate("gt_IntroCinematicDavisRodentTransmission_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Despawn News Copter
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicDespawnNewsCopter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_introCine_NewsHelo == EventUnit()))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicDespawnNewsCopter_Init () {
    gt_IntroCinematicDespawnNewsCopter = TriggerCreate("gt_IntroCinematicDespawnNewsCopter_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicDespawnNewsCopter, null, RegionFromId(124), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Fountain Plays
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicFountainPlays_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2Fountain", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "fountain", SoundLastPlayed());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicFountainPlays_Init () {
    gt_IntroCinematicFountainPlays = TriggerCreate("gt_IntroCinematicFountainPlays_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicFountainPlays, null, RegionFromId(333), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Fountain Stops
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicFountainStops_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((EventUnit() == gv_myraDavis) || (EventUnit() == gv_davisCruiser)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundStop(DataTableGetSound(true, "fountain"), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicFountainStops_Init () {
    gt_IntroCinematicFountainStops = TriggerCreate("gt_IntroCinematicFountainStops_Func");
    TriggerAddEventUnitRegion(gt_IntroCinematicFountainStops, null, RegionFromId(333), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk  Q
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_UltraliskSetup, true, true);
    TriggerExecute(gt_UltraliskCinematic, true, true);
    TriggerExecute(gt_UltraliskCinematicEnd, true, true);
    TriggerExecute(gt_UltraliskCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskQ_Init () {
    gt_UltraliskQ = TriggerCreate("gt_UltraliskQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Setup
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto1CF8F10E_g;
    int auto1CF8F10E_u;
    unit auto1CF8F10E_var;
    unitgroup autoF793978D_g;
    int autoF793978D_u;
    unit autoF793978D_var;
    unitgroup auto19065B01_g;
    int auto19065B01_u;
    unit auto19065B01_var;
    unitgroup auto62907339_g;
    int auto62907339_u;
    unit auto62907339_var;
    unitgroup autoA7E0F02D_g;
    int autoA7E0F02D_u;
    unit autoA7E0F02D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2UPLTankUltraCinematic", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "tank", SoundLastPlayed());
    CinematicFade(false, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.0);
    Wait(1.0, c_timeReal);
    gv_inCinematic = true;
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    CameraSave(gv_pLAYER_01_USER);
    libNtve_gf_StoreUnitSelection(gv_pLAYER_01_USER, libNtve_ge_UnitSelectionStoreOption_ClearUnitSelection);
    RegionPlayableMapSet(RegionFromId(197));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, false);
    GameTimeOfDayPause(true);
    auto1CF8F10E_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto1CF8F10E_u = UnitGroupCount(auto1CF8F10E_g, c_unitCountAll);
    for (;; auto1CF8F10E_u -= 1) {
        auto1CF8F10E_var = UnitGroupUnitFromEnd(auto1CF8F10E_g, auto1CF8F10E_u);
        if (auto1CF8F10E_var == null) { break; }
        if ((libNtve_gf_UnitIsPaused(auto1CF8F10E_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, auto1CF8F10E_var);
            libNtve_gf_PauseUnit(auto1CF8F10E_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    autoF793978D_g = gv_cinematicHiddenUnits;
    autoF793978D_u = UnitGroupCount(autoF793978D_g, c_unitCountAll);
    for (;; autoF793978D_u -= 1) {
        autoF793978D_var = UnitGroupUnitFromEnd(autoF793978D_g, autoF793978D_u);
        if (autoF793978D_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoF793978D_var, false);
    }
    auto19065B01_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(33), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto19065B01_u = UnitGroupCount(auto19065B01_g, c_unitCountAll);
    for (;; auto19065B01_u -= 1) {
        auto19065B01_var = UnitGroupUnitFromEnd(auto19065B01_g, auto19065B01_u);
        if (auto19065B01_var == null) { break; }
        UnitRemove(auto19065B01_var);
    }
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    auto62907339_g = UnitGroup(null, c_playerAny, RegionFromId(97), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto62907339_u = UnitGroupCount(auto62907339_g, c_unitCountAll);
    for (;; auto62907339_u -= 1) {
        auto62907339_var = UnitGroupUnitFromEnd(auto62907339_g, auto62907339_u);
        if (auto62907339_var == null) { break; }
        libNtve_gf_PauseUnit(auto62907339_var, false);
    }
    autoA7E0F02D_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(97), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA7E0F02D_u = UnitGroupCount(autoA7E0F02D_g, c_unitCountAll);
    for (;; autoA7E0F02D_u -= 1) {
        autoA7E0F02D_var = UnitGroupUnitFromEnd(autoA7E0F02D_g, autoA7E0F02D_u);
        if (autoA7E0F02D_var == null) { break; }
        UnitRemove(autoA7E0F02D_var);
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "RoutheTank", 0, gv_pLAYER_02_POLICE, PointFromId(578239511));
    gv_ultraCine_Routhe = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetPropertyFixed(gv_ultraCine_Routhe, c_unitPropBaseMovementSpeed, 3.2);
    UnitSetPropertyFixed(gv_ultraCine_Routhe, c_unitPropLife, 25.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "SwatVan", 0, gv_pLAYER_02_POLICE, PointFromId(617598145));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetState(UnitLastCreated(), c_unitStateMoveSuppressed, false);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropLifePercent, 15.0);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, PointFromId(1027065465));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetState(UnitLastCreated(), c_unitStateStunned, true);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceCruiserSirenLights", UnitLastCreated(), 1);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, PointFromId(2140350211));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceCruiserSirenLights", UnitLastCreated(), 1);
    UnitSetState(UnitLastCreated(), c_unitStateStunned, true);
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    libNtve_gf_CreateUnitsAtPoint2(1, "InfantryHeavy", 0, gv_pLAYER_02_POLICE, PointFromId(451575726));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "InfantryHeavy", 0, gv_pLAYER_02_POLICE, PointFromId(1651758013));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "InfantryRifle", 0, gv_pLAYER_02_POLICE, PointFromId(422586434));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "InfantryRifle", 0, gv_pLAYER_02_POLICE, PointFromId(1518296275));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "InfantryRifle", 0, gv_pLAYER_02_POLICE, PointFromId(188004270));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(896612774));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1572381777));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerRifle", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerPistol", UnitLastCreated(), 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1568256798));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorRemove(UnitLastCreated(), "UPLRiotOfficerShotgun", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLRiotOfficerRifle", UnitLastCreated(), 1);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(642667994));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerPistol", 1);
    UnitBehaviorRemove(UnitLastCreated(), "UPLPoliceOfficerShotgun", 1);
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceOfficerRifle", UnitLastCreated(), 1);
    TriggerEnable(gt_UltraliskCinematicRoutheDies, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskSetup_Init () {
    gt_UltraliskSetup = TriggerCreate("gt_UltraliskSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto8964C415_g;
    int auto8964C415_u;
    unit auto8964C415_var;
    const int autoAC31C698_n = 13;
    int autoAC31C698_i;
    const int auto2AB27AF7_n = 8;
    int auto2AB27AF7_i;
    unitgroup auto562A4A99_g;
    int auto562A4A99_u;
    unit auto562A4A99_var;
    const int autoF55DA7F5_n = 8;
    int autoF55DA7F5_i;
    const int auto7D5505BB_n = 1;
    int auto7D5505BB_i;
    unitgroup autoE5C6F703_g;
    int autoE5C6F703_u;
    unit autoE5C6F703_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(768747866), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    auto8964C415_g = gv_cinematicTempUnits;
    auto8964C415_u = UnitGroupCount(auto8964C415_g, c_unitCountAll);
    for (;; auto8964C415_u -= 1) {
        auto8964C415_var = UnitGroupUnitFromEnd(auto8964C415_g, auto8964C415_u);
        if (auto8964C415_var == null) { break; }
        UnitIssueOrder(gv_ultraCine_Routhe, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    }
    CinematicFade(true, 1.3, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    UnitIssueOrder(gv_ultraCine_Routhe, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1580046551)), c_orderQueueReplace);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2RiverwalkSewerAmbience2", c_soundtrackCueAny, c_soundtrackIndexAny, true);
    UnitIssueOrder(gv_ultraCine_Routhe, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
    Wait(3.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2UltraRoar", 0), c_maxPlayers, PlayerGroupAll(), 150.0, 0.15);
    DataTableSetSound(true, "roar", SoundLastPlayed());
    Wait(0.1, c_timeReal);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.15, 2.0, 100.0, 6.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Ultralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, PointFromId(1723885203));
    gv_ultraCine_Ultralisk = UnitLastCreated();
    libNtve_gf_SendActorMessageToUnit(gv_ultraCine_Ultralisk, "ModelSwap Stank");
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_MakeUnitFacePoint(gv_ultraCine_Routhe, UnitGetPosition(UnitLastCreated()), 0.4);
    UnitIssueOrder(gv_ultraCine_Routhe, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    UnitBehaviorAdd(UnitLastCreated(), "TValerian03QueenOfBladesDontDie", libNtve_gf_AcquiredTarget(), 1);
    UnitIssueOrder(gv_ultraCine_Ultralisk, OrderTargetingUnit(AbilityCommand("attack", 0), gv_ultraCine_Routhe), c_orderQueueReplace);
    UnitIssueOrder(gv_ultraCine_Ultralisk, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1783044187)), c_orderQueueAddToEnd);
    for (autoAC31C698_i = 1; autoAC31C698_i <= autoAC31C698_n; autoAC31C698_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(99)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1783044187)), c_orderQueueReplace);
        Wait(0.08, c_timeGame);
    }
    SoundWait(SoundLastPlayed(), 0.0, c_soundOffsetEnd);
    CameraShakeStop(gv_pLAYER_01_USER);
    for (auto2AB27AF7_i = 1; auto2AB27AF7_i <= auto2AB27AF7_n; auto2AB27AF7_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(99)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1783044187)), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    auto562A4A99_g = UnitGroup(null, c_playerAny, RegionFromId(97), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto562A4A99_u = UnitGroupCount(auto562A4A99_g, c_unitCountAll);
    for (;; auto562A4A99_u -= 1) {
        auto562A4A99_var = UnitGroupUnitFromEnd(auto562A4A99_g, auto562A4A99_u);
        if (auto562A4A99_var == null) { break; }
        UnitBehaviorAdd(auto562A4A99_var, "HalfDamageDealt", auto562A4A99_var, 1);
    }
    for (autoF55DA7F5_i = 1; autoF55DA7F5_i <= autoF55DA7F5_n; autoF55DA7F5_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(99)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1783044187)), c_orderQueueReplace);
    }
    Wait(2.0, c_timeReal);
    for (auto7D5505BB_i = 1; auto7D5505BB_i <= auto7D5505BB_n; auto7D5505BB_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(4)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1783044187)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00104", null, true, gv_myraDavis, false);
    CameraApplyInfo(1, CameraInfoFromId(297122924), 8.5, -1, 10.0, true);
    Wait(9.0, c_timeReal);
    CinematicFade(false, 1.45, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    autoE5C6F703_g = UnitGroup(null, c_playerAny, RegionFromId(97), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE5C6F703_u = UnitGroupCount(autoE5C6F703_g, c_unitCountAll);
    for (;; autoE5C6F703_u -= 1) {
        autoE5C6F703_var = UnitGroupUnitFromEnd(autoE5C6F703_g, autoE5C6F703_u);
        if (autoE5C6F703_var == null) { break; }
        UnitBehaviorRemove(autoE5C6F703_var, "HalfDamageDealt", 1);
    }
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskCinematic_Init () {
    gt_UltraliskCinematic = TriggerCreate("gt_UltraliskCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskCinematicEnd_Init () {
    gt_UltraliskCinematicEnd = TriggerCreate("gt_UltraliskCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup auto99A15140_g;
    int auto99A15140_u;
    unit auto99A15140_var;
    unitgroup autoBAE12B87_g;
    int autoBAE12B87_u;
    unit autoBAE12B87_var;
    unitgroup autoFDAF25CF_g;
    int autoFDAF25CF_u;
    unit autoFDAF25CF_var;
    const int autoAC72B290_n = 3;
    int autoAC72B290_i;
    unitgroup autoCDBB7E00_g;
    int autoCDBB7E00_u;
    unit autoCDBB7E00_var;
    unitgroup auto6027289A_g;
    int auto6027289A_u;
    unit auto6027289A_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_UltraliskCinematicRoutheDies, false);
    SoundStop(DataTableGetSound(true, "roar"), true);
    SoundStop(DataTableGetSound(true, "tank"), true);
    auto99A15140_g = gv_cinematicTempUnits;
    auto99A15140_u = UnitGroupCount(auto99A15140_g, c_unitCountAll);
    for (;; auto99A15140_u -= 1) {
        auto99A15140_var = UnitGroupUnitFromEnd(auto99A15140_g, auto99A15140_u);
        if (auto99A15140_var == null) { break; }
        UnitRemove(auto99A15140_var);
    }
    autoBAE12B87_g = gv_cinematicHiddenUnits;
    autoBAE12B87_u = UnitGroupCount(autoBAE12B87_g, c_unitCountAll);
    for (;; autoBAE12B87_u -= 1) {
        autoBAE12B87_var = UnitGroupUnitFromEnd(autoBAE12B87_g, autoBAE12B87_u);
        if (autoBAE12B87_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoBAE12B87_var, true);
    }
    autoFDAF25CF_g = gv_cinematicPausedUnits;
    autoFDAF25CF_u = UnitGroupCount(autoFDAF25CF_g, c_unitCountAll);
    for (;; autoFDAF25CF_u -= 1) {
        autoFDAF25CF_var = UnitGroupUnitFromEnd(autoFDAF25CF_g, autoFDAF25CF_u);
        if (autoFDAF25CF_var == null) { break; }
        libNtve_gf_PauseUnit(autoFDAF25CF_var, false);
    }
    for (autoAC72B290_i = 1; autoAC72B290_i <= autoAC72B290_n; autoAC72B290_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(98)));
        UnitGroupAdd(gv_ultralisk_Infantry, UnitLastCreated());
        libNtve_gf_ShareVisionofUnit(UnitLastCreated(), true, gv_pLAYER_01_USER);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1783044187)), c_orderQueueReplace);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Ultralisk", 0, gv_pLAYER_04_ROACHES, PointFromId(1783044187));
    gv_ultraliskUnit = UnitLastCreated();
    libNtve_gf_SendActorMessageToUnit(gv_ultraliskUnit, "ModelSwap Stank");
    autoCDBB7E00_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(260), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoCDBB7E00_u = UnitGroupCount(autoCDBB7E00_g, c_unitCountAll);
    for (;; autoCDBB7E00_u -= 1) {
        autoCDBB7E00_var = UnitGroupUnitFromEnd(autoCDBB7E00_g, autoCDBB7E00_u);
        if (autoCDBB7E00_var == null) { break; }
        UnitSetPropertyFixed(autoCDBB7E00_var, c_unitPropLifeMax, 1.0);
        UnitSetPropertyFixed(autoCDBB7E00_var, c_unitPropLife, 1.0);
    }
    GameTimeOfDayPause(false);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, true);
    libNtve_gf_ShowHideUnit(UnitFromId(930332417), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1516123329), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1469531919), true);
    libNtve_gf_ShowHideUnit(UnitFromId(399483068), true);
    RegionPlayableMapSet(RegionFromId(197));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    libNtve_gf_RestoreUnitSelection(gv_pLAYER_01_USER);
    CameraRestore(gv_pLAYER_01_USER, 0.0, -1, 10);
    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.5;
    }
    else {
        lv_fadeDuration = 1.0;
    }
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), lv_fadeDuration);
    libNtve_gf_GlobalCinematicSetting(false);
    gv_inCinematic = false;
    auto6027289A_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(287), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto6027289A_u = UnitGroupCount(auto6027289A_g, c_unitCountAll);
    for (;; auto6027289A_u -= 1) {
        auto6027289A_var = UnitGroupUnitFromEnd(auto6027289A_g, auto6027289A_u);
        if (auto6027289A_var == null) { break; }
        UnitSetOwner(auto6027289A_var, gv_pLAYER_05_POLICE_NEUTRAL, true);
        libNtve_gf_ShowHideUnit(auto6027289A_var, false);
    }
    CinematicFade(true, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    TriggerExecute(gt_UltraliskSectionBegins, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskCleanup_Init () {
    gt_UltraliskCleanup = TriggerCreate("gt_UltraliskCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ultralisk Cinematic Routhe Dies
//--------------------------------------------------------------------------------------------------
bool gt_UltraliskCinematicRoutheDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "RoutheTank"))) {
            return false;
        }

        if (!((gv_inCinematic == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraliskCinematicRoutheDies_Init () {
    gt_UltraliskCinematicRoutheDies = TriggerCreate("gt_UltraliskCinematicRoutheDies_Func");
    TriggerEnable(gt_UltraliskCinematicRoutheDies, false);
    TriggerAddEventUnitDied(gt_UltraliskCinematicRoutheDies, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Q
//--------------------------------------------------------------------------------------------------
bool gt_UPLQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_UPLSetup, true, true);
    TriggerExecute(gt_UPLCinematic, true, true);
    TriggerExecute(gt_UPLCinematicEnd, true, true);
    TriggerExecute(gt_UPLCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLQ_Init () {
    gt_UPLQ = TriggerCreate("gt_UPLQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Setup
//--------------------------------------------------------------------------------------------------
bool gt_UPLSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_random;

    // Automatic Variable Declarations
    unitgroup auto64809F9A_g;
    int auto64809F9A_u;
    unit auto64809F9A_var;
    unitgroup autoA572ED58_g;
    int autoA572ED58_u;
    unit autoA572ED58_var;
    unitgroup auto70D6F3E5_g;
    int auto70D6F3E5_u;
    unit auto70D6F3E5_var;
    unitgroup auto537BC493_g;
    int auto537BC493_u;
    unit auto537BC493_var;
    unitgroup auto44903B69_g;
    int auto44903B69_u;
    unit auto44903B69_var;
    const int auto839E7958_ae = 4;
    int auto839E7958_var;
    const int autoED7F0183_ae = 3;
    int autoED7F0183_var;
    const int auto7115D629_ae = 4;
    int auto7115D629_var;
    const int auto1A926E22_ae = 2;
    int auto1A926E22_var;
    const int auto1D22C21F_ae = 6;
    int auto1D22C21F_var;
    const int autoE8EAD9B1_ae = 12;
    int autoE8EAD9B1_var;
    unitgroup auto23E607D6_g;
    int auto23E607D6_u;
    unit auto23E607D6_var;
    unitgroup auto094B0E94_g;
    int auto094B0E94_u;
    unit auto094B0E94_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_UPLCinematicOspreyLandingSite, true);
    TriggerEnable(gt_UPLCinematicDavisLands, true);
    TriggerEnable(gt_UPLCinematicDespawn, true);
    TriggerEnable(gt_UPLCinematicCivilianDespawn, true);
    TriggerEnable(gt_UPLCinematicOspreyDespawn, true);
    CinematicFade(false, 2.5, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    auto64809F9A_g = UnitGroup("UPLRiotOfficer", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto64809F9A_u = UnitGroupCount(auto64809F9A_g, c_unitCountAll);
    for (;; auto64809F9A_u -= 1) {
        auto64809F9A_var = UnitGroupUnitFromEnd(auto64809F9A_g, auto64809F9A_u);
        if (auto64809F9A_var == null) { break; }
        UnitRemove(auto64809F9A_var);
    }
    autoA572ED58_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA572ED58_u = UnitGroupCount(autoA572ED58_g, c_unitCountAll);
    for (;; autoA572ED58_u -= 1) {
        autoA572ED58_var = UnitGroupUnitFromEnd(autoA572ED58_g, autoA572ED58_u);
        if (autoA572ED58_var == null) { break; }
        UnitRemove(autoA572ED58_var);
    }
    UnitRemove(gv_aPC);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle1);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle2);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle3);
    libNtve_gf_KillModel(gv_ultraliskTruckReticle4);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag1);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag2);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag3);
    TextTagDestroy(gv_ultraliskTruckReticleTextTag4);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.0);
    Wait(1.0, c_timeReal);
    gv_inCinematic = true;
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    CameraSave(gv_pLAYER_01_USER);
    libNtve_gf_StoreUnitSelection(gv_pLAYER_01_USER, libNtve_ge_UnitSelectionStoreOption_ClearUnitSelection);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, false);
    GameTimeOfDayPause(true);
    auto70D6F3E5_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto70D6F3E5_u = UnitGroupCount(auto70D6F3E5_g, c_unitCountAll);
    for (;; auto70D6F3E5_u -= 1) {
        auto70D6F3E5_var = UnitGroupUnitFromEnd(auto70D6F3E5_g, auto70D6F3E5_u);
        if (auto70D6F3E5_var == null) { break; }
        if ((libNtve_gf_UnitIsPaused(auto70D6F3E5_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, auto70D6F3E5_var);
            libNtve_gf_PauseUnit(auto70D6F3E5_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    auto537BC493_g = gv_cinematicHiddenUnits;
    auto537BC493_u = UnitGroupCount(auto537BC493_g, c_unitCountAll);
    for (;; auto537BC493_u -= 1) {
        auto537BC493_var = UnitGroupUnitFromEnd(auto537BC493_g, auto537BC493_u);
        if (auto537BC493_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto537BC493_var, false);
    }
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(201), null);
    auto44903B69_g = UnitGroup(null, gv_pLAYER_04_ROACHES, RegionFromId(204), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto44903B69_u = UnitGroupCount(auto44903B69_g, c_unitCountAll);
    for (;; auto44903B69_u -= 1) {
        auto44903B69_var = UnitGroupUnitFromEnd(auto44903B69_g, auto44903B69_u);
        if (auto44903B69_var == null) { break; }
        UnitRemove(auto44903B69_var);
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "RoutheTank", 0, gv_pLAYER_02_POLICE, PointFromId(1821800174));
    gv_uPLCine_Routhes[1] = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "RoutheTank", 0, gv_pLAYER_02_POLICE, PointFromId(1411976089));
    gv_uPLCine_Routhes[2] = UnitLastCreated();
    libNtve_gf_CreateUnitsAtPoint2(1, "RoutheTank", 0, gv_pLAYER_02_POLICE, PointFromId(2041890426));
    gv_uPLCine_Routhes[3] = UnitLastCreated();
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    UnitSetState(UnitLastCreated(), c_unitStateMoveSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "SwatVan", 0, gv_pLAYER_02_POLICE, PointFromId(676933871));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLBillet", 0, gv_pLAYER_02_POLICE, PointFromId(136906323));
    libNtve_gf_CreateUnitsAtPoint2(1, "HazmatTechnician", 0, gv_pLAYER_02_POLICE, PointFromId(1963617225));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "HazmatTechnician", 0, gv_pLAYER_02_POLICE, PointFromId(337982563));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "HazmatTechnician", 0, gv_pLAYER_02_POLICE, PointFromId(2021198098));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "HazmatTechnician", 0, gv_pLAYER_02_POLICE, PointFromId(1728463466));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "HazmatTechnician", 0, gv_pLAYER_02_POLICE, PointFromId(946480738));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLDetectiveMale", 0, gv_pLAYER_02_POLICE, PointFromId(704283280));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Talk", c_animFlagPlayForever, c_animTimeDefault);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceCruiser", 0, gv_pLAYER_02_POLICE, PointFromId(1917188409));
    UnitBehaviorAdd(UnitLastCreated(), "UPLPoliceCruiserSirenLights", UnitLastCreated(), 1);
    auto839E7958_var = 1;
    for ( ; auto839E7958_var <= auto839E7958_ae; auto839E7958_var += 1 ) {
        libNtve_gf_CreateUnitsAtPoint2(1, "Z1", 0, gv_pLAYER_02_POLICE, PointFromName(("UPLCine_Z1" + IntToString(auto839E7958_var))));
    }
    autoED7F0183_var = 1;
    for ( ; autoED7F0183_var <= autoED7F0183_ae; autoED7F0183_var += 1 ) {
        libNtve_gf_CreateUnitsAtPoint2(1, "UPLPoliceOfficer", 0, gv_pLAYER_02_POLICE, PointFromName(("UPLCine_Officer" + IntToString(autoED7F0183_var))));
    }
    auto7115D629_var = 1;
    for ( ; auto7115D629_var <= auto7115D629_ae; auto7115D629_var += 1 ) {
        libNtve_gf_CreateUnitsAtPoint2(1, "InfantryHeavy", 0, gv_pLAYER_02_POLICE, PointFromName(("UPLCine_Heavy" + IntToString(auto7115D629_var))));
    }
    auto1A926E22_var = 1;
    for ( ; auto1A926E22_var <= auto1A926E22_ae; auto1A926E22_var += 1 ) {
        libNtve_gf_CreateUnitsAtPoint2(1, "InfantryHeavy", 0, gv_pLAYER_02_POLICE, PointFromName(("UPLCine_PatrolHev" + IntToString(auto1A926E22_var))));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    }
    auto1D22C21F_var = 1;
    for ( ; auto1D22C21F_var <= auto1D22C21F_ae; auto1D22C21F_var += 1 ) {
        libNtve_gf_CreateUnitsAtPoint2(1, "InfantryRifle", 0, gv_pLAYER_02_POLICE, PointFromName(("UPLCine_PatrolInf" + IntToString(auto1D22C21F_var))));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    }
    autoE8EAD9B1_var = 1;
    for ( ; autoE8EAD9B1_var <= autoE8EAD9B1_ae; autoE8EAD9B1_var += 1 ) {
        lv_random = RandomInt(1, 2);
        if ((lv_random == 1)) {
            libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianMale", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(321)));
            ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianMale " + IntToString(1))));
        }
        else {
            libNtve_gf_CreateUnitsAtPoint2(1, "UPLCivilianFemale", 0, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(321)));
            ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), (("ModelSwap UPLCivilianFemale " + IntToString(1))));
        }
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.0);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 12), true));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitGroupAdd(gv_uPLCine_Civilians, UnitLastCreated());
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "Osprey", 0, gv_pLAYER_02_POLICE, PointFromId(2029419253));
    gv_uPLCine_DavisChopper = UnitLastCreated();
    UnitSetHeight(UnitLastCreated(), 18.0, 0.0);
    UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.5);
    UnitGroupAdd(gv_uPLCine_DavisChopperGroup, UnitLastCreated());
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(5, "Osprey", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, RegionRandomPoint(RegionFromId(198)), libNtve_gf_PointFacingAngle(PointFromId(1351793766), 270.0));
    UnitGroupAddUnitGroup(gv_cinematicTempUnits, UnitLastCreatedGroup());
    libNtve_gf_CreateUnitsAtPoint2(1, "CARR", 0, gv_pLAYER_05_POLICE_NEUTRAL, PointFromId(1450121578));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "InfantryOfficer", 0, gv_pLAYER_05_POLICE_NEUTRAL, PointFromId(1804129452));
    UnitSetState(UnitLastCreated(), c_unitStateTurnSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "Osprey", 0, gv_pLAYER_05_POLICE_NEUTRAL, PointFromId(1073918188));
    gv_uPLCine_Osprey = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    auto23E607D6_g = UnitGroup("Osprey", c_playerAny, RegionFromId(198), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto23E607D6_u = UnitGroupCount(auto23E607D6_g, c_unitCountAll);
    for (;; auto23E607D6_u -= 1) {
        auto23E607D6_var = UnitGroupUnitFromEnd(auto23E607D6_g, auto23E607D6_u);
        if (auto23E607D6_var == null) { break; }
        UnitSetHeight(auto23E607D6_var, RandomInt(3, 9), 0.0);
        UnitSetPropertyFixed(auto23E607D6_var, c_unitPropBaseMovementSpeed, 5.0);
    }
    UnitSetPosition(gv_myraDavis, PointFromId(1304140720), false);
    auto094B0E94_g = UnitGroup(null, c_playerAny, RegionFromId(168), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto094B0E94_u = UnitGroupCount(auto094B0E94_g, c_unitCountAll);
    for (;; auto094B0E94_u -= 1) {
        auto094B0E94_var = UnitGroupUnitFromEnd(auto094B0E94_g, auto094B0E94_u);
        if (auto094B0E94_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto094B0E94_var, true);
        libNtve_gf_PauseUnit(auto094B0E94_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLSetup_Init () {
    gt_UPLSetup = TriggerCreate("gt_UPLSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto673612EE_g;
    int auto673612EE_u;
    unit auto673612EE_var;
    unitgroup auto7DFDDA30_g;
    int auto7DFDDA30_u;
    unit auto7DFDDA30_var;
    unitgroup auto1CFE9D8C_g;
    int auto1CFE9D8C_u;
    unit auto1CFE9D8C_var;
    unitgroup auto8647AB41_g;
    int auto8647AB41_u;
    unit auto8647AB41_var;
    unitgroup auto01093437_g;
    int auto01093437_u;
    unit auto01093437_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1040849573), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    SoundPlayForPlayer(SoundLink("M2UPLCinematicHeloInterior", 0), c_maxPlayers, PlayerGroupAll(), 80.0, 0.0);
    DataTableSetSound(true, "Helo", SoundLastPlayed());
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/A7C7733B"), StringExternal("Param/Value/57AC5773"), 8.0, SoundLink("TextCrawlType", 0), SoundLink("TextCrawlType", 0));
    Wait(6.0, c_timeGame);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_uPLCine_DavisChopperGroup, true, false);
    Wait(1.0, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2IntroMusic", c_soundtrackCueAny, c_soundtrackIndexAny, true);
    TriggerExecute(gt_UPLCinematicTransmissions, true, false);
    UnitIssueOrder(gv_uPLCine_DavisChopper, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(615702837)), c_orderQueueReplace);
    UnitIssueOrder(gv_uPLCine_Routhes[2], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(219055993)), c_orderQueueReplace);
    UnitIssueOrder(gv_uPLCine_Routhes[2], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(124511034)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_uPLCine_Routhes[2], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(733459011)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_uPLCine_Routhes[2], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1374273001)), c_orderQueueAddToEnd);
    auto673612EE_g = gv_uPLCine_Civilians;
    auto673612EE_u = UnitGroupCount(auto673612EE_g, c_unitCountAll);
    for (;; auto673612EE_u -= 1) {
        auto673612EE_var = UnitGroupUnitFromEnd(auto673612EE_g, auto673612EE_u);
        if (auto673612EE_var == null) { break; }
        UnitIssueOrder(auto673612EE_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(210595944)), c_orderQueueReplace);
        UnitIssueOrder(auto673612EE_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(300698572)), c_orderQueueAddToEnd);
    }
    Wait(1.0, c_timeGame);
    CinematicFade(true, 2.25, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(3.0, c_timeGame);
    auto7DFDDA30_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(207), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7DFDDA30_u = UnitGroupCount(auto7DFDDA30_g, c_unitCountAll);
    for (;; auto7DFDDA30_u -= 1) {
        auto7DFDDA30_var = UnitGroupUnitFromEnd(auto7DFDDA30_g, auto7DFDDA30_u);
        if (auto7DFDDA30_var == null) { break; }
        UnitIssueOrder(auto7DFDDA30_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(970245502)), c_orderQueueReplace);
    }
    auto1CFE9D8C_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(208), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1CFE9D8C_u = UnitGroupCount(auto1CFE9D8C_g, c_unitCountAll);
    for (;; auto1CFE9D8C_u -= 1) {
        auto1CFE9D8C_var = UnitGroupUnitFromEnd(auto1CFE9D8C_g, auto1CFE9D8C_u);
        if (auto1CFE9D8C_var == null) { break; }
        UnitIssueOrder(auto1CFE9D8C_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(356463163)), c_orderQueueReplace);
    }
    SoundPlayForPlayer(SoundLink("M2IntroCinematicNewsCopterFlyby", 0), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    Wait(3.0, c_timeReal);
    auto8647AB41_g = UnitGroup("Osprey", gv_pLAYER_02_POLICE, RegionFromId(198), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto8647AB41_u = UnitGroupCount(auto8647AB41_g, c_unitCountAll);
    for (;; auto8647AB41_u -= 1) {
        auto8647AB41_var = UnitGroupUnitFromEnd(auto8647AB41_g, auto8647AB41_u);
        if (auto8647AB41_var == null) { break; }
        UnitIssueOrder(auto8647AB41_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(210))), c_orderQueueReplace);
    }
    Wait(7.0, c_timeReal);
    UnitIssueOrder(gv_uPLCine_Osprey, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2045227737)), c_orderQueueReplace);
    Wait(8.0, c_timeReal);
    auto01093437_g = UnitGroup("UPLPoliceOfficer", gv_pLAYER_02_POLICE, RegionFromId(209), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto01093437_u = UnitGroupCount(auto01093437_g, c_unitCountAll);
    for (;; auto01093437_u -= 1) {
        auto01093437_var = UnitGroupUnitFromEnd(auto01093437_g, auto01093437_u);
        if (auto01093437_var == null) { break; }
        UnitIssueOrder(auto01093437_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1374273001)), c_orderQueueReplace);
    }
    while (!((gv_uPLCine_TransmissionCompleted == true))) {
        Wait(1.0, c_timeReal);
    }
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematic_Init () {
    gt_UPLCinematic = TriggerCreate("gt_UPLCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.5;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicEnd_Init () {
    gt_UPLCinematicEnd = TriggerCreate("gt_UPLCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_UPLCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup auto32651841_g;
    int auto32651841_u;
    unit auto32651841_var;
    unitgroup autoDF057692_g;
    int autoDF057692_u;
    unit autoDF057692_var;
    unitgroup auto7DF7C49F_g;
    int auto7DF7C49F_u;
    unit auto7DF7C49F_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundStop(DataTableGetSound(true, "Helo"), true);
    TransmissionClearAll();
    TriggerEnable(gt_UPLCinematicOspreyLandingSite, false);
    TriggerEnable(gt_UPLCinematicDavisLands, false);
    TriggerEnable(gt_UPLCinematicDespawn, false);
    TriggerEnable(gt_UPLCinematicCivilianDespawn, false);
    TriggerEnable(gt_UPLCinematicOspreyDespawn, false);
    TriggerStop(gt_UPLCinematicTransmissions);
    UnitSetPosition(gv_myraDavis, PointFromId(615702837), false);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    auto32651841_g = gv_cinematicTempUnits;
    auto32651841_u = UnitGroupCount(auto32651841_g, c_unitCountAll);
    for (;; auto32651841_u -= 1) {
        auto32651841_var = UnitGroupUnitFromEnd(auto32651841_g, auto32651841_u);
        if (auto32651841_var == null) { break; }
        UnitRemove(auto32651841_var);
    }
    autoDF057692_g = gv_cinematicHiddenUnits;
    autoDF057692_u = UnitGroupCount(autoDF057692_g, c_unitCountAll);
    for (;; autoDF057692_u -= 1) {
        autoDF057692_var = UnitGroupUnitFromEnd(autoDF057692_g, autoDF057692_u);
        if (autoDF057692_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoDF057692_var, true);
    }
    auto7DF7C49F_g = gv_cinematicPausedUnits;
    auto7DF7C49F_u = UnitGroupCount(auto7DF7C49F_g, c_unitCountAll);
    for (;; auto7DF7C49F_u -= 1) {
        auto7DF7C49F_var = UnitGroupUnitFromEnd(auto7DF7C49F_g, auto7DF7C49F_u);
        if (auto7DF7C49F_var == null) { break; }
        libNtve_gf_PauseUnit(auto7DF7C49F_var, false);
    }
    GameTimeOfDayPause(false);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, true);
    RegionPlayableMapSet(RegionFromId(205));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(132886517), 0.0, -1, 10.0, true);
    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.5;
    }
    else {
        lv_fadeDuration = 1.0;
    }
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), lv_fadeDuration);
    libNtve_gf_GlobalCinematicSetting(false);
    gv_inCinematic = false;
    CinematicFade(true, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    TriggerExecute(gt_UPLSectionBegins, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCleanup_Init () {
    gt_UPLCleanup = TriggerCreate("gt_UPLCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic - Transmissions
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicTransmissions_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00105", null, true, gv_myraDavis, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00106", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00107", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00108", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00109", null, true, gv_myraDavis, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00110", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00111", null, true, gv_myraDavis, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSource(), c_invalidPortraitId, "", "Talk", SoundLink("M2UPLRegionalDispatcher", -1), StringExternal("Param/Value/5BFE9360"), StringExternal("Param/Value/C202AFB4"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00113", null, true, gv_myraDavis, false);
    UnitIssueOrder(gv_uPLCine_Sergeant, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1407774212)), c_orderQueueReplace);
    gv_uPLCine_TransmissionCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicTransmissions_Init () {
    gt_UPLCinematicTransmissions = TriggerCreate("gt_UPLCinematicTransmissions_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic - Osprey Landing Site
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicOspreyLandingSite_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_inCinematic == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Osprey"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("OspreyLand", 0)), c_orderQueueReplace);
    Wait(3.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(2045227737));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(388824832)), c_orderQueueReplace);
    Wait(1.5, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(2045227737));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(379958964)), c_orderQueueReplace);
    Wait(1.5, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(2045227737));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(388824832)), c_orderQueueReplace);
    Wait(1.5, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(2045227737));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(379958964)), c_orderQueueReplace);
    Wait(1.5, c_timeReal);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("OspreyFly", 0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1351793766)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicOspreyLandingSite_Init () {
    gt_UPLCinematicOspreyLandingSite = TriggerCreate("gt_UPLCinematicOspreyLandingSite_Func");
    TriggerEnable(gt_UPLCinematicOspreyLandingSite, false);
    TriggerAddEventUnitRegion(gt_UPLCinematicOspreyLandingSite, null, RegionFromId(211), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic - Davis Lands
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicDavisLands_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_inCinematic == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Osprey"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetHeight(EventUnit(), 3.75, 3.5);
    Wait(3.5, c_timeReal);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("OspreyLand", 0)), c_orderQueueReplace);
    Wait(3.0, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(615702837));
    gv_uPLCine_Sergeant = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    SoundPlayForPlayer(SoundLink("UPLPoliceCruiser_Unload", 0), c_maxPlayers, PlayerGroupAll(), 150.0, 0.15);
    Wait(1.5, c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "MyraDavisRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, PointFromId(615702837));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    SoundPlayForPlayer(SoundLink("UPLPoliceCruiser_Unload", 0), c_maxPlayers, PlayerGroupAll(), 150.0, 0.15);
    SoundStop(DataTableGetSound(true, "Helo"), true);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("OspreyFly", 0)), c_orderQueueReplace);
    Wait(2.0, c_timeReal);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_uPLCine_DavisChopperGroup, false, false);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(2089617696)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicDavisLands_Init () {
    gt_UPLCinematicDavisLands = TriggerCreate("gt_UPLCinematicDavisLands_Func");
    TriggerEnable(gt_UPLCinematicDavisLands, false);
    TriggerAddEventUnitRegion(gt_UPLCinematicDavisLands, null, RegionFromId(206), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic - Despawn
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE) || (UnitGetOwner(EventUnit()) == gv_pLAYER_05_POLICE_NEUTRAL)))) {
            return false;
        }

        if (!((gv_inCinematic == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicDespawn_Init () {
    gt_UPLCinematicDespawn = TriggerCreate("gt_UPLCinematicDespawn_Func");
    TriggerEnable(gt_UPLCinematicDespawn, false);
    TriggerAddEventUnitRegion(gt_UPLCinematicDespawn, null, RegionFromId(199), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic - Civilian Despawn
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicCivilianDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_CIVILIANS))) {
            return false;
        }

        if (!((gv_inCinematic == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicCivilianDespawn_Init () {
    gt_UPLCinematicCivilianDespawn = TriggerCreate("gt_UPLCinematicCivilianDespawn_Func");
    TriggerEnable(gt_UPLCinematicCivilianDespawn, false);
    TriggerAddEventUnitRegion(gt_UPLCinematicCivilianDespawn, null, RegionFromId(200), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: UPL Cinematic - Osprey Despawn
//--------------------------------------------------------------------------------------------------
bool gt_UPLCinematicOspreyDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Osprey"))) {
            return false;
        }

        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_02_POLICE) || (UnitGetOwner(EventUnit()) == gv_pLAYER_05_POLICE_NEUTRAL)))) {
            return false;
        }

        if (!((gv_inCinematic == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UPLCinematicOspreyDespawn_Init () {
    gt_UPLCinematicOspreyDespawn = TriggerCreate("gt_UPLCinematicOspreyDespawn_Func");
    TriggerEnable(gt_UPLCinematicOspreyDespawn, false);
    TriggerAddEventUnitRegion(gt_UPLCinematicOspreyDespawn, null, RegionFromId(210), true);
    TriggerAddEventUnitRegion(gt_UPLCinematicOspreyDespawn, null, RegionFromId(212), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mayor Q
//--------------------------------------------------------------------------------------------------
bool gt_MayorQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_MayorSetup, true, true);
    TriggerExecute(gt_MayorCinematic, true, true);
    TriggerExecute(gt_MayorCinematicEnd, true, true);
    TriggerExecute(gt_MayorCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorQ_Init () {
    gt_MayorQ = TriggerCreate("gt_MayorQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mayor Setup
//--------------------------------------------------------------------------------------------------
bool gt_MayorSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE3694C2C_g;
    int autoE3694C2C_u;
    unit autoE3694C2C_var;
    unitgroup auto64060C75_g;
    int auto64060C75_u;
    unit auto64060C75_var;
    unitgroup auto39E99EBD_g;
    int auto39E99EBD_u;
    unit auto39E99EBD_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    TriggerEnable(gt_WomenandChildrenSomeOverlordsDie, false);
    TriggerEnable(gt_MayorOverlordBreaksThrough, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 2.0);
    Wait(2.0, c_timeReal);
    gv_inCinematic = true;
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    lib1926661B_gf_ShowHideHeroPanel(2, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, true);
    CameraSave(gv_pLAYER_01_USER);
    libNtve_gf_StoreUnitSelection(gv_pLAYER_01_USER, libNtve_ge_UnitSelectionStoreOption_ClearUnitSelection);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, false);
    GameTimeOfDayPause(true);
    RegionPlayableMapSet(RegionFromId(262));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    FogSetStartHeightOverTime(-16.0, 0.0);
    GameSetLighting("Agria", 0.0);
    autoE3694C2C_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE3694C2C_u = UnitGroupCount(autoE3694C2C_g, c_unitCountAll);
    for (;; autoE3694C2C_u -= 1) {
        autoE3694C2C_var = UnitGroupUnitFromEnd(autoE3694C2C_g, autoE3694C2C_u);
        if (autoE3694C2C_var == null) { break; }
        if ((libNtve_gf_UnitIsPaused(autoE3694C2C_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, autoE3694C2C_var);
            libNtve_gf_PauseUnit(autoE3694C2C_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    auto64060C75_g = gv_cinematicHiddenUnits;
    auto64060C75_u = UnitGroupCount(auto64060C75_g, c_unitCountAll);
    for (;; auto64060C75_u -= 1) {
        auto64060C75_var = UnitGroupUnitFromEnd(auto64060C75_g, auto64060C75_u);
        if (auto64060C75_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto64060C75_var, false);
    }
    UnitRemove(gv_womenandChildrenSWATVan1);
    UnitRemove(gv_womenandChildrenSWATVan2);
    if ((UnitGetType(gv_myraDavis) == "MyraDavisOfficer")) {
        gv_davisKills = libNtve_gf_UnitGetPropertyKills(gv_myraDavis, c_unitPropCurrent);
        UnitRemove(gv_myraDavis);
        libNtve_gf_CreateUnitsAtPoint2(1, "MyraDavisRiotOfficer", 0, gv_pLAYER_01_USER, PointFromId(2097527818));
        gv_myraDavis = UnitLastCreated();
        lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
        UnitSetPropertyFixed(gv_myraDavis, c_unitPropLifeMax, 150.0);
        UnitSetPropertyFixed(gv_myraDavis, c_unitPropLife, 150.0);
        UnitSetPropertyFixed(gv_myraDavis, c_unitPropKills, gv_davisKills);
        UnitBehaviorRemove(gv_myraDavis, "MyraDavisPistol", 1);
        UnitBehaviorRemove(gv_myraDavis, "MyraDavisRifle", 1);
        UnitBehaviorRemove(gv_myraDavis, "MyraDavisShotgun", 1);
        UnitBehaviorAdd(gv_myraDavis, "MyraDavisShotgun", gv_myraDavis, 1);
        UnitBehaviorAdd(gv_myraDavis, "MyraDavisShotgun", gv_myraDavis, 1);
        UnitAbilityAdd(gv_myraDavis, "MyraDavisFlashBangGrenade");
        UnitAbilityAdd(gv_myraDavis, "MyraDavisHealingPatch");
        UnitAbilityAdd(gv_myraDavis, "MyraDavisFlameGrenade");
        UnitAbilityAdd(gv_myraDavis, "MyraDavisSwapToShotgun");
        UnitAbilityAdd(gv_myraDavis, "MyraDavisSwapToRifle");
        UnitAbilityAdd(gv_myraDavis, "MyraDavisHeadshot");
    }
    else {
        UnitSetPosition(gv_myraDavis, PointFromId(2097527818), false);
    }
    UnitSetPosition(gv_darren, PointFromId(1835438727), false);
    libNtve_gf_ShowHideUnit(gv_darren, true);
    libNtve_gf_PauseUnit(gv_darren, false);
    UnitSetState(gv_darren, c_unitStateMoveSuppressed, true);
    libNtve_gf_ShowHideUnit(gv_myraDavis, true);
    libNtve_gf_PauseUnit(gv_myraDavis, false);
    UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitIssueOrder(gv_darren, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitGroupAdd(gv_mayorCine_DavisGroup, gv_myraDavis);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropMovementSpeed, 2.5);
    libNtve_gf_CreateUnitsAtPoint2(1, "SwatVan", 0, gv_pLAYER_02_POLICE, PointFromId(1901692514));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetState(UnitLastCreated(), c_unitStateMoveSuppressed, false);
    libNtve_gf_CreateUnitsAtPoint2(1, "SwatVan", 0, gv_pLAYER_02_POLICE, PointFromId(2052836627));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    UnitSetState(UnitLastCreated(), c_unitStateMoveSuppressed, false);
    libNtve_gf_ShowHideUnit(UnitFromId(334945370), true);
    libNtve_gf_PauseUnit(UnitFromId(334945370), false);
    libNtve_gf_ChangeUnitDamage(UnitFromId(334945370), libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitSetState(UnitFromId(334945370), c_unitStateSelectable, false);
    UnitSetInfoTip(UnitFromId(334945370), StringExternal("Param/Value/3243AB41"));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLRiotOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(2016599310));
    gv_hyson_Riot = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1149725140));
    gv_hyson_Gunner[1] = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1402113079));
    gv_hyson_Gunner[2] = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(1527235868));
    gv_hyson_Incinerator = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "RusellPeters", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, PointFromId(2097527818));
    TechTreeUnitHelp(gv_pLAYER_01_USER, "RusellPeters", true);
    gv_hyson_Sergeant = UnitLastCreated();
    auto39E99EBD_g = UnitGroup(null, c_playerAny, RegionFromId(237), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto39E99EBD_u = UnitGroupCount(auto39E99EBD_g, c_unitCountAll);
    for (;; auto39E99EBD_u -= 1) {
        auto39E99EBD_var = UnitGroupUnitFromEnd(auto39E99EBD_g, auto39E99EBD_u);
        if (auto39E99EBD_var == null) { break; }
        UnitRemove(auto39E99EBD_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorSetup_Init () {
    gt_MayorSetup = TriggerCreate("gt_MayorSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mayor Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_MayorCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(2096984562), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M2LobbyMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_cinematicCompleted = false;
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_mayorCine_DavisGroup, true, false);
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/DC3F7213"), StringExternal("Param/Value/B0C9D717"), 8.0, SoundLink("TextCrawlType", 0), SoundLink("TextCrawlType", 0));
    Wait(7.0, c_timeReal);
    CinematicFade(true, 2.25, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    UnitIssueOrder(gv_myraDavis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1615780423)), c_orderQueueReplace);
    UnitIssueOrder(gv_darren, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1891980580)), c_orderQueueReplace);
    UnitIssueOrder(gv_hyson_Sergeant, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(965840167)), c_orderQueueReplace);
    libNtve_gf_ChangeUnitDamage(gv_hyson_Sergeant, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    UnitIssueOrder(gv_hyson_Riot, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(965840167)), c_orderQueueReplace);
    UnitIssueOrder(gv_hyson_Gunner[1], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(474603060)), c_orderQueueReplace);
    UnitIssueOrder(gv_hyson_Gunner[2], OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(550249282)), c_orderQueueReplace);
    UnitIssueOrder(gv_hyson_Incinerator, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(942773687)), c_orderQueueReplace);
    Wait(1.0, c_timeReal);
    ActorSend(ActorFromDoodad(DoodadFromId(1866162743)), "SetOpacity 0.000000 2.000000");
    ActorSend(ActorFromDoodad(DoodadFromId(467)), "SetOpacity 0.000000 0.500000");
    ActorSend(ActorFromDoodad(DoodadFromId(464)), "SetOpacity 0.000000 0.500000");
    ActorSend(ActorFromDoodad(DoodadFromId(466)), "SetOpacity 0.000000 0.500000");
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/178A5EE3"));
    DataTableSetSound(true, "LobbyMusic", SoundLastPlayed());
    Wait(3.0, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(UnitFromId(334945370), "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00131", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_mayorCine_DavisGroup, false, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1114577595), 7.0, -1, 10.0, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(UnitFromId(334945370), "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00132", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    SoundPlayForPlayer(SoundLink("ZergArmy_Cheer_MassiveRoar", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(0.5, c_timeReal);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorCinematic_Init () {
    gt_MayorCinematic = TriggerCreate("gt_MayorCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mayor Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_MayorCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
        lv_fadeDuration = 0.5;
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorCinematicEnd_Init () {
    gt_MayorCinematicEnd = TriggerCreate("gt_MayorCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mayor Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_MayorCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup autoE30EAEBD_g;
    int autoE30EAEBD_u;
    unit autoE30EAEBD_var;
    unitgroup auto24C4738E_g;
    int auto24C4738E_u;
    unit auto24C4738E_var;
    unitgroup auto7986582B_g;
    int auto7986582B_u;
    unit auto7986582B_var;
    unitgroup autoA329ECD4_g;
    int autoA329ECD4_u;
    unit autoA329ECD4_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TransmissionClearAll();
    autoE30EAEBD_g = gv_cinematicTempUnits;
    autoE30EAEBD_u = UnitGroupCount(autoE30EAEBD_g, c_unitCountAll);
    for (;; autoE30EAEBD_u -= 1) {
        autoE30EAEBD_var = UnitGroupUnitFromEnd(autoE30EAEBD_g, autoE30EAEBD_u);
        if (autoE30EAEBD_var == null) { break; }
        UnitRemove(autoE30EAEBD_var);
    }
    auto24C4738E_g = gv_cinematicHiddenUnits;
    auto24C4738E_u = UnitGroupCount(auto24C4738E_g, c_unitCountAll);
    for (;; auto24C4738E_u -= 1) {
        auto24C4738E_var = UnitGroupUnitFromEnd(auto24C4738E_g, auto24C4738E_u);
        if (auto24C4738E_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto24C4738E_var, true);
    }
    auto7986582B_g = gv_cinematicPausedUnits;
    auto7986582B_u = UnitGroupCount(auto7986582B_g, c_unitCountAll);
    for (;; auto7986582B_u -= 1) {
        auto7986582B_var = UnitGroupUnitFromEnd(auto7986582B_g, auto7986582B_u);
        if (auto7986582B_var == null) { break; }
        libNtve_gf_PauseUnit(auto7986582B_var, false);
    }
    GameTimeOfDayPause(false);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, true);
    libNtve_gf_RestoreUnitSelection(gv_pLAYER_01_USER);
    TriggerExecute(gt_MayorCinematicAttackWavesStart, true, false);
    libNtve_gf_GlobalCinematicSetting(false);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_mayorCine_DavisGroup, false, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(60314203), 2.0, -1, 10.0, true);
    Wait(2.0, c_timeReal);
    RegionPlayableMapSet(RegionFromId(108));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(108));
    gv_mayorSectionRevealer = VisRevealerLastCreated();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    libNtve_gf_AttachActorToUnit(UnitFromId(334945370), "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00133", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    autoA329ECD4_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA329ECD4_u = UnitGroupCount(autoA329ECD4_g, c_unitCountAll);
    for (;; autoA329ECD4_u -= 1) {
        autoA329ECD4_var = UnitGroupUnitFromEnd(autoA329ECD4_g, autoA329ECD4_u);
        if (autoA329ECD4_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(autoA329ECD4_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.5;
    }
    else {
        lv_fadeDuration = 1.0;
        UnitSetPosition(gv_myraDavis, PointFromId(1615780423), false);
        UnitSetPosition(gv_darren, PointFromId(1891980580), false);
        UnitSetPosition(gv_hyson_Sergeant, PointFromId(965840167), false);
        UnitSetPosition(gv_hyson_Riot, PointFromId(965840167), false);
        UnitSetPosition(gv_hyson_Gunner[1], PointFromId(474603060), false);
        UnitSetPosition(gv_hyson_Gunner[2], PointFromId(550249282), false);
        UnitSetPosition(gv_hyson_Incinerator, PointFromId(942773687), false);
    }
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), lv_fadeDuration);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_myraDavis);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    lib1926661B_gf_SetHeroPanelUnit(2, gv_darren);
    lib1926661B_gf_ShowHideHeroPanel(2, true);
    lib1926661B_gf_SetHeroPanelUnit(3, gv_hyson_Sergeant);
    lib1926661B_gf_ShowHideHeroPanel(3, true);
    CameraLockInput(gv_pLAYER_01_USER, true);
    gv_inCinematic = false;
    if ((gv_cinematicCompleted == true)) {
    }
    else {
        CinematicFade(true, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorCleanup_Init () {
    gt_MayorCleanup = TriggerCreate("gt_MayorCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mayor Cinematic Attack Waves Start
//--------------------------------------------------------------------------------------------------
bool gt_MayorCinematicAttackWavesStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto23939D00_n;
    int auto23939D00_i;
    int auto53B37829_n;
    int auto53B37829_i;
    int auto1339AC1C_n;
    int auto1339AC1C_i;
    int autoB5DC360E_n;
    int autoB5DC360E_i;
    int auto53E7B3AD_n;
    int auto53E7B3AD_i;
    int autoBF4765C0_n;
    int autoBF4765C0_i;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ChangeUnitDamage(gv_darren, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    UnitSetPropertyFixed(gv_myraDavis, c_unitPropMovementSpeed, 3.375);
    auto23939D00_n = lib1926661B_gf_DifficultyValueInteger(9, 22);
    for (auto23939D00_i = 1; auto23939D00_i <= auto23939D00_n; auto23939D00_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(104)));
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    Wait(9.0, c_timeGame);
    auto53B37829_n = lib1926661B_gf_DifficultyValueInteger(13, 30);
    for (auto53B37829_i = 1; auto53B37829_i <= auto53B37829_n; auto53B37829_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(104)));
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, 1, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    Wait(8.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M2TrafficAccidentAmbience232", -1), c_maxPlayers, PlayerGroupAll(), 150.0, 0.0);
    Wait(2.0, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1697)), "SetOpacity 0.000000 1.000000");
    auto1339AC1C_n = lib1926661B_gf_DifficultyValueInteger(3, 6);
    for (auto1339AC1C_i = 1; auto1339AC1C_i <= auto1339AC1C_n; auto1339AC1C_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(109)));
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, 1, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.7, c_timeGame);
    }
    Wait(1.0, c_timeGame);
    ActorSend(ActorFromDoodad(DoodadFromId(1697)), "SetOpacity 1.000000 1.000000");
    Wait(10.0, c_timeGame);
    autoB5DC360E_n = lib1926661B_gf_DifficultyValueInteger(18, 42);
    for (autoB5DC360E_i = 1; autoB5DC360E_i <= autoB5DC360E_n; autoB5DC360E_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(107)));
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, 1, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    Wait(7.0, c_timeGame);
    auto53E7B3AD_n = lib1926661B_gf_DifficultyValueInteger(3, 9);
    for (auto53E7B3AD_i = 1; auto53E7B3AD_i <= auto53E7B3AD_n; auto53E7B3AD_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, 4, RegionRandomPoint(RegionFromId(107)));
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, 1, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    Wait(14.0, c_timeGame);
    autoBF4765C0_n = lib1926661B_gf_DifficultyValueInteger(13, 33);
    for (autoBF4765C0_i = 1; autoBF4765C0_i <= autoBF4765C0_n; autoBF4765C0_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, 4, RegionRandomPoint(RegionFromId(104)));
        UnitBehaviorAdd(UnitLastCreated(), "HugeAggro", gv_myraDavis, 1);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, 1, RegionFromId(108), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
    }
    TriggerExecute(gt_HysonTowerSectionLobbyFightEnds, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MayorCinematicAttackWavesStart_Init () {
    gt_MayorCinematicAttackWavesStart = TriggerCreate("gt_MayorCinematicAttackWavesStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Q
//--------------------------------------------------------------------------------------------------
bool gt_HysonQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_MayorCinematicAttackWavesStart);
    TriggerQueueEnter();
    TriggerExecute(gt_HysonSetup, true, true);
    TriggerExecute(gt_HysonCinematic, true, true);
    TriggerExecute(gt_HysonCinematicEnd, true, true);
    TriggerExecute(gt_HysonCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonQ_Init () {
    gt_HysonQ = TriggerCreate("gt_HysonQ_Func");
    TriggerAddEventChatMessage(gt_HysonQ, c_playerAny, "mayor", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Setup
//--------------------------------------------------------------------------------------------------
bool gt_HysonSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto998671B5_g;
    int auto998671B5_u;
    unit auto998671B5_var;
    unitgroup auto34CE0EC3_g;
    int auto34CE0EC3_u;
    unit auto34CE0EC3_var;
    unitgroup autoB74E1EEE_g;
    int autoB74E1EEE_u;
    unit autoB74E1EEE_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    UnitKill(UnitFromId(1373902576));
    UnitKill(UnitFromId(1453725960));
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 2.0);
    Wait(2.0, c_timeReal);
    gv_inCinematic = true;
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    lib1926661B_gf_ShowHideHeroPanel(2, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    RegionPlayableMapSet(RegionFromId(108));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, false);
    GameTimeOfDayPause(true);
    auto998671B5_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto998671B5_u = UnitGroupCount(auto998671B5_g, c_unitCountAll);
    for (;; auto998671B5_u -= 1) {
        auto998671B5_var = UnitGroupUnitFromEnd(auto998671B5_g, auto998671B5_u);
        if (auto998671B5_var == null) { break; }
        UnitSelect(auto998671B5_var, gv_pLAYER_01_USER, false);
        if ((libNtve_gf_UnitIsPaused(auto998671B5_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, auto998671B5_var);
            libNtve_gf_PauseUnit(auto998671B5_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    auto34CE0EC3_g = gv_cinematicHiddenUnits;
    auto34CE0EC3_u = UnitGroupCount(auto34CE0EC3_g, c_unitCountAll);
    for (;; auto34CE0EC3_u -= 1) {
        auto34CE0EC3_var = UnitGroupUnitFromEnd(auto34CE0EC3_g, auto34CE0EC3_u);
        if (auto34CE0EC3_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto34CE0EC3_var, false);
    }
    libNtve_gf_CreateUnitsAtPoint2(1, "MyraDavisRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1615780423));
    gv_hysonCine_Davis = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitGroupAdd(gv_hysonCine_HysonUnits, gv_hyson_Sergeant);
    UnitGroupAdd(gv_hysonCine_HysonUnits, gv_hyson_Riot);
    UnitGroupAdd(gv_hysonCine_HysonUnits, gv_hyson_Incinerator);
    UnitGroupAdd(gv_hysonCine_HysonUnits, gv_hyson_Gunner[1]);
    UnitGroupAdd(gv_hysonCine_HysonUnits, gv_hyson_Gunner[2]);
    UnitSetPosition(gv_darren, PointFromId(1891980580), false);
    UnitIssueOrder(gv_darren, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_ShowHideUnit(gv_darren, true);
    libNtve_gf_PauseUnit(gv_darren, false);
    UnitSetPosition(gv_hyson_Sergeant, PointFromId(1073877181), false);
    UnitIssueOrder(gv_hyson_Sergeant, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    autoB74E1EEE_g = gv_hysonCine_HysonUnits;
    autoB74E1EEE_u = UnitGroupCount(autoB74E1EEE_g, c_unitCountAll);
    for (;; autoB74E1EEE_u -= 1) {
        autoB74E1EEE_var = UnitGroupUnitFromEnd(autoB74E1EEE_g, autoB74E1EEE_u);
        if (autoB74E1EEE_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoB74E1EEE_var, true);
        libNtve_gf_PauseUnit(autoB74E1EEE_var, false);
        UnitGroupAdd(gv_cinematicTempUnits, autoB74E1EEE_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonSetup_Init () {
    gt_HysonSetup = TriggerCreate("gt_HysonSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_HysonCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1642290172), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    CinematicFade(true, 1.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLDetectiveMale", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(19791928));
    gv_hysonCine_Mayor = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(gv_hysonCine_Mayor, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1374673226)), c_orderQueueReplace);
    Wait(RandomFixed(0.5, 1.1), c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLDetectiveFemale", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, PointFromId(19791928));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1374673226)), c_orderQueueReplace);
    Wait(RandomFixed(0.5, 1.1), c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLAnimalControlOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, PointFromId(19791928));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1374673226)), c_orderQueueReplace);
    Wait(RandomFixed(0.5, 1.1), c_timeReal);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLPoliceOfficer", c_unitCreateIgnorePlacement, gv_pLAYER_02_POLICE, PointFromId(19791928));
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(474603060)), c_orderQueueReplace);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Davis, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hyson_Sergeant, UnitGetPosition(gv_mayor), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00136", null, true, gv_hysonCine_Davis, false);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Davis, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hyson_Sergeant, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_AttachActorToUnit(gv_hyson_Sergeant, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00137", null, true, gv_hyson_Sergeant, false);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Davis, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hyson_Sergeant, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_AttachActorToUnit(gv_hysonCine_Mayor, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00138", null, true, null, false);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Davis, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hyson_Sergeant, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_AttachActorToUnit(gv_hysonCine_Mayor, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00139", null, true, null, false);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Davis, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hyson_Sergeant, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Mayor, UnitGetPosition(gv_hyson_Sergeant), 0.0);
    libNtve_gf_AttachActorToUnit(gv_hyson_Sergeant, "TalkIcon", "Ref_Origin");
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00140", null, true, gv_hyson_Sergeant, false);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Davis, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hyson_Sergeant, UnitGetPosition(gv_mayor), 0.0);
    libNtve_gf_MakeUnitFacePoint(gv_hysonCine_Mayor, UnitGetPosition(gv_hyson_Sergeant), 0.0);
    libNtve_gf_MakeUnitUncommandable(gv_hysonCine_Davis, false);
    Wait(2.0, c_timeReal);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonCinematic_Init () {
    gt_HysonCinematic = TriggerCreate("gt_HysonCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_HysonCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonCinematicEnd_Init () {
    gt_HysonCinematicEnd = TriggerCreate("gt_HysonCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hyson Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_HysonCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup auto6B8624BE_g;
    int auto6B8624BE_u;
    unit auto6B8624BE_var;
    unitgroup auto53F7B32B_g;
    int auto53F7B32B_u;
    unit auto53F7B32B_var;
    unitgroup autoE1AAB904_g;
    int autoE1AAB904_u;
    unit autoE1AAB904_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(gv_darren);
    auto6B8624BE_g = gv_cinematicTempUnits;
    auto6B8624BE_u = UnitGroupCount(auto6B8624BE_g, c_unitCountAll);
    for (;; auto6B8624BE_u -= 1) {
        auto6B8624BE_var = UnitGroupUnitFromEnd(auto6B8624BE_g, auto6B8624BE_u);
        if (auto6B8624BE_var == null) { break; }
        UnitRemove(auto6B8624BE_var);
    }
    auto53F7B32B_g = gv_cinematicHiddenUnits;
    auto53F7B32B_u = UnitGroupCount(auto53F7B32B_g, c_unitCountAll);
    for (;; auto53F7B32B_u -= 1) {
        auto53F7B32B_var = UnitGroupUnitFromEnd(auto53F7B32B_g, auto53F7B32B_u);
        if (auto53F7B32B_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto53F7B32B_var, true);
    }
    autoE1AAB904_g = gv_cinematicPausedUnits;
    autoE1AAB904_u = UnitGroupCount(autoE1AAB904_g, c_unitCountAll);
    for (;; autoE1AAB904_u -= 1) {
        autoE1AAB904_var = UnitGroupUnitFromEnd(autoE1AAB904_g, autoE1AAB904_u);
        if (autoE1AAB904_var == null) { break; }
        libNtve_gf_PauseUnit(autoE1AAB904_var, false);
    }
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, true);
    TriggerExecute(gt_RiotQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HysonCleanup_Init () {
    gt_HysonCleanup = TriggerCreate("gt_HysonCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Q
//--------------------------------------------------------------------------------------------------
bool gt_RiotQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_RiotSetup, true, true);
    TriggerExecute(gt_RiotCinematic, true, true);
    TriggerExecute(gt_RiotCinematicEnd, true, true);
    TriggerExecute(gt_RiotCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotQ_Init () {
    gt_RiotQ = TriggerCreate("gt_RiotQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Setup
//--------------------------------------------------------------------------------------------------
bool gt_RiotSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7C2D0B92_g;
    int auto7C2D0B92_u;
    unit auto7C2D0B92_var;
    unitgroup autoCA45F554_g;
    int autoCA45F554_u;
    unit autoCA45F554_var;
    unitgroup autoE8D44F55_g;
    int autoE8D44F55_u;
    unit autoE8D44F55_var;
    unitgroup auto7FCEC99C_g;
    int auto7FCEC99C_u;
    unit auto7FCEC99C_var;
    unitgroup autoB39800EA_g;
    int autoB39800EA_u;
    unit autoB39800EA_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_RiotCinematicDavisRedirects, true);
    TriggerEnable(gt_RiotCinematicDavisRedirects2, true);
    ObjectiveDestroy(gv_hysonTowerSectionObjective);
    ObjectiveDestroy(gv_bossTunnelerKillObjective);
    ObjectiveDestroy(gv_womenandChildrenDarrenAliveObjective);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    RegionPlayableMapSet(RegionFromId(241));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    FogSetStartHeightOverTime(-5.0, 0.0);
    GameSetLighting("MeinhoffCampaignNight", 0.0);
    PlayerSetAlliance(gv_pLAYER_02_POLICE, c_allianceIdPushable, gv_pLAYER_01_USER, true);
    PlayerSetAlliance(gv_pLAYER_03_CIVILIANS, c_allianceIdPushable, gv_pLAYER_01_USER, true);
    gv_riotCine_Part1Finished = false;
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, false);
    auto7C2D0B92_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7C2D0B92_u = UnitGroupCount(auto7C2D0B92_g, c_unitCountAll);
    for (;; auto7C2D0B92_u -= 1) {
        auto7C2D0B92_var = UnitGroupUnitFromEnd(auto7C2D0B92_g, auto7C2D0B92_u);
        if (auto7C2D0B92_var == null) { break; }
        if ((libNtve_gf_UnitIsPaused(auto7C2D0B92_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, auto7C2D0B92_var);
            libNtve_gf_PauseUnit(auto7C2D0B92_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    autoCA45F554_g = gv_cinematicHiddenUnits;
    autoCA45F554_u = UnitGroupCount(autoCA45F554_g, c_unitCountAll);
    for (;; autoCA45F554_u -= 1) {
        autoCA45F554_var = UnitGroupUnitFromEnd(autoCA45F554_g, autoCA45F554_u);
        if (autoCA45F554_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoCA45F554_var, false);
    }
    autoE8D44F55_g = UnitGroup(null, c_playerAny, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE8D44F55_u = UnitGroupCount(autoE8D44F55_g, c_unitCountAll);
    for (;; autoE8D44F55_u -= 1) {
        autoE8D44F55_var = UnitGroupUnitFromEnd(autoE8D44F55_g, autoE8D44F55_u);
        if (autoE8D44F55_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoE8D44F55_var, true);
        libNtve_gf_PauseUnit(autoE8D44F55_var, false);
        if ((UnitGetOwner(autoE8D44F55_var) != gv_pLAYER_01_USER)) {
            UnitGroupAdd(gv_cinematicTempUnits, autoE8D44F55_var);
        }

    }
    libNtve_gf_ShowHideUnit(UnitFromId(1546273045), false);
    auto7FCEC99C_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(259), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7FCEC99C_u = UnitGroupCount(auto7FCEC99C_g, c_unitCountAll);
    for (;; auto7FCEC99C_u -= 1) {
        auto7FCEC99C_var = UnitGroupUnitFromEnd(auto7FCEC99C_g, auto7FCEC99C_u);
        if (auto7FCEC99C_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(auto7FCEC99C_var), "AnimGroupApply Superior,One Superior,One {} 0 180.000000 AsDuration");
        Wait(RandomFixed(0.01, 0.07), c_timeReal);
    }
    autoB39800EA_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(259), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoB39800EA_u = UnitGroupCount(autoB39800EA_g, c_unitCountAll);
    for (;; autoB39800EA_u -= 1) {
        autoB39800EA_var = UnitGroupUnitFromEnd(autoB39800EA_g, autoB39800EA_u);
        if (autoB39800EA_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(autoB39800EA_var), "AnimGroupApply Superior,One Superior,One {} 0 180.000000 AsDuration");
        Wait(RandomFixed(0.01, 0.07), c_timeReal);
    }
    ActorSend(libNtve_gf_MainActorofUnit(UnitFromId(1522041065)), "AnimGroupApply Stand,A Stand,A {} 0 180.000000 AsDuration");
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionEntireMap(), "GenericFire_Large");
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionEntireMap(), "GenericFire_Medium");
    libNtve_gf_ShowHideDoodadsInRegion(true, RegionFromId(201), "UPLPoliceCruiserDoodad");
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1546273045), true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, false);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotSetup_Init () {
    gt_RiotSetup = TriggerCreate("gt_RiotSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoB26A1A40_g;
    int autoB26A1A40_u;
    unit autoB26A1A40_var;
    unitgroup autoDD9AFA74_g;
    int autoDD9AFA74_u;
    unit autoDD9AFA74_var;
    unitgroup auto270E4F4B_g;
    int auto270E4F4B_u;
    unit auto270E4F4B_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(504878205), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, false);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, false);
    SoundPlayForPlayer(SoundLink("M2ZergRoar32", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "riot", SoundLastPlayed());
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/79A8D5F6"), StringExternal("Param/Value/72B325E0"), 8.0, SoundLink("TextCrawlType", 0), SoundLink("TextCrawlType", 0));
    Wait(6.5, c_timeReal);
    CinematicFade(true, 2.25, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(276497662), 6.0, -1, 10.0, true);
    Wait(1.9, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(685730226));
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    DataTableSetSound(true, "cruiserblowup", SoundLastPlayed());
    Wait(0.3, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(685730226));
    Wait(0.3, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(685730226));
    libNtve_gf_AttachActorToUnit(UnitFromId(462037354), "TalkIcon", "Ref_Origin");
    TriggerExecute(gt_RiotCinematicGunShopLooters, true, false);
    Wait(6.0, c_timeReal);
    UnitIssueOrder(UnitFromId(1199587030), OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(1199064752), 270.0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1199587030), OrderTargetingPoint(AbilityCommand("move", 0), libNtve_gf_PointFacingAngle(PointFromId(899981148), 270.0)), c_orderQueueAddToEnd);
    Wait(5.0, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(1676036562));
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    Wait(0.3, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(667777012), 4.0, -1, 10.0, true);
    Wait(3.5, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(685730226));
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    Wait(0.3, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(685730226));
    Wait(0.3, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(685730226));
    Wait(0.4, c_timeReal);
    TriggerExecute(gt_RiotCinematicMarchers, true, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(637129529), 9.0, -1, 10.0, true);
    Wait(5.0, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(1718252509));
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    Wait(0.3, c_timeReal);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(220813735));
    Wait(0.3, c_timeReal);
    UnitSetOwner(UnitFromId(1355591216), gv_pLAYER_04_ROACHES, true);
    UnitSetOwner(UnitFromId(2127446958), gv_pLAYER_04_ROACHES, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00141", null, true, gv_myraDavis, false);
    Wait(2.0, c_timeReal);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(226738012));
    gv_riotCine_Sergeant = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(289))), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("Hut_Load", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    DataTableSetSound(true, "hut", SoundLastPlayed());
    Wait(1.0, c_timeReal);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLDetectiveMale", 0, gv_pLAYER_02_POLICE, PointFromId(1219153155));
    gv_riotCine_Mayor = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(289))), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("Hut_Load", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(1.0, c_timeReal);
    libNtve_gf_CreateUnitsAtPoint2(1, "MyraDavisRiotOfficer", 0, gv_pLAYER_01_USER, PointFromId(1602584794));
    gv_riotCine_Davis = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(289))), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("Hut_Load", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    UnitGroupAdd(gv_riotCine_DavisGroup, gv_riotCine_Davis);
    Wait(1.0, c_timeReal);
    libNtve_gf_CreateUnitsAtPoint2(1, "UPLRiotOfficer", 0, gv_pLAYER_02_POLICE, PointFromId(1219153155));
    gv_riotCine_Darren = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(289))), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("Hut_Load", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(1.0, c_timeReal);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00142", null, true, gv_riotCine_Sergeant, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00143", null, true, gv_riotCine_Sergeant, false);
    Wait(0.75, c_timeReal);
    UnitSetState(UnitFromId(1772965271), c_unitStateStunned, false);
    UnitSetState(UnitFromId(930627035), c_unitStateStunned, false);
    UnitSetState(UnitFromId(1024580069), c_unitStateStunned, false);
    UnitSetState(UnitFromId(2019934579), c_unitStateStunned, false);
    UnitSetState(UnitFromId(90815536), c_unitStateStunned, false);
    UnitSetState(UnitFromId(863703010), c_unitStateStunned, false);
    TriggerExecute(gt_RiotCinematicNydusWorms1, true, false);
    libNtve_gf_MakeUnitInvulnerable(gv_riotCine_Davis, true);
    libNtve_gf_MakeUnitInvulnerable(gv_riotCine_Sergeant, true);
    libNtve_gf_MakeUnitInvulnerable(gv_riotCine_Mayor, true);
    libNtve_gf_MakeUnitInvulnerable(gv_riotCine_Darren, true);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_04_ROACHES, libNtve_ge_AllianceSetting_Neutral);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_riotCine_DavisGroup, true, false);
    UnitSetPropertyFixed(gv_riotCine_Davis, c_unitPropMovementSpeed, 1.5);
    UnitIssueOrder(gv_riotCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1114974374)), c_orderQueueReplace);
    UnitSetPropertyFixed(gv_riotCine_Sergeant, c_unitPropBaseMovementSpeed, 1.5);
    UnitIssueOrder(gv_riotCine_Sergeant, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1114974374)), c_orderQueueReplace);
    UnitSetPropertyFixed(gv_riotCine_Mayor, c_unitPropBaseMovementSpeed, 1.5);
    UnitIssueOrder(gv_riotCine_Mayor, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1114974374)), c_orderQueueReplace);
    UnitSetPropertyFixed(gv_riotCine_Darren, c_unitPropBaseMovementSpeed, 1.5);
    UnitIssueOrder(gv_riotCine_Darren, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1114974374)), c_orderQueueReplace);
    Wait(2.5, c_timeReal);
    autoB26A1A40_g = UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(248), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB26A1A40_u = UnitGroupCount(autoB26A1A40_g, c_unitCountAll);
    for (;; autoB26A1A40_u -= 1) {
        autoB26A1A40_var = UnitGroupUnitFromEnd(autoB26A1A40_g, autoB26A1A40_u);
        if (autoB26A1A40_var == null) { break; }
        UnitKill(autoB26A1A40_var);
    }
    TriggerExecute(gt_RiotCinematicNydusWorms2, true, false);
    TriggerExecute(gt_RiotCinematicRunners, true, false);
    SoundPlayForPlayer(SoundLink("M2RiotScreaming1", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "riotscreaming", SoundLastPlayed());
    TriggerExecute(gt_RiotCinematicAttack, true, false);
    Wait(2.0, c_timeReal);
    libNtve_gf_ShowHideUnit(UnitFromId(1546273045), true);
    ActorSend(libNtve_gf_MainActorofUnit(UnitFromId(1546273045)), "AnimGroupApply Scared Scared {} 0 180.000000 AsDuration");
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(1199064752));
    SoundPlayForPlayer(SoundLink("M2PoliceCruiserExplosion", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    autoDD9AFA74_g = UnitGroup(null, c_playerAny, RegionFromId(247), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDD9AFA74_u = UnitGroupCount(autoDD9AFA74_g, c_unitCountAll);
    for (;; autoDD9AFA74_u -= 1) {
        autoDD9AFA74_var = UnitGroupUnitFromEnd(autoDD9AFA74_g, autoDD9AFA74_u);
        if (autoDD9AFA74_var == null) { break; }
        UnitKill(autoDD9AFA74_var);
    }
    TriggerExecute(gt_RiotCinematicNydusWorms3, true, false);
    SoundPlayForPlayer(SoundLink("M2RiotCarAlarm1", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "riotalarm", SoundLastPlayed());
    Wait(12.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2RiotScreaming2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "riotscreaming2", SoundLastPlayed());
    while (!((gv_riotCine_Part1Finished == true))) {
        Wait(1.0, c_timeReal);
    }
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_riotCine_DavisGroup, false, false);
    UnitSetPosition(gv_hyson_Sergeant, libNtve_gf_PointFacingAngle(PointFromId(1918611362), 270.0), false);
    libNtve_gf_ShowHideUnit(gv_hyson_Sergeant, true);
    libNtve_gf_PauseUnit(gv_hyson_Sergeant, false);
    UnitSetPosition(gv_myraDavis, libNtve_gf_PointFacingAngle(PointFromId(1918611362), 270.0), false);
    libNtve_gf_ShowHideUnit(gv_myraDavis, true);
    libNtve_gf_PauseUnit(gv_myraDavis, false);
    auto270E4F4B_g = UnitGroup(null, c_playerAny, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto270E4F4B_u = UnitGroupCount(auto270E4F4B_g, c_unitCountAll);
    for (;; auto270E4F4B_u -= 1) {
        auto270E4F4B_var = UnitGroupUnitFromEnd(auto270E4F4B_g, auto270E4F4B_u);
        if (auto270E4F4B_var == null) { break; }
        UnitRemove(auto270E4F4B_var);
    }
    Wait(2.0, c_timeReal);
    SoundStopAllTriggerSounds(true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    Wait(0.1, c_timeReal);
    GameSetToDLighting("KorhalNight");
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_04_ROACHES, libNtve_ge_AllianceSetting_Enemy);
    Wait(2.0, c_timeReal);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, false);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, false);
    Wait(4.0, c_timeReal);
    RegionPlayableMapSet(RegionFromId(251));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(863438174), 0.0, -1, 10.0, true);
    CameraSetValue(gv_pLAYER_01_USER, c_cameraValueDepthOfField, 0.15, 0.0, -1, 10.0);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00148", null, true, gv_myraDavis, false);
    TriggerExecute(gt_RiotCinematicTunnelCarDialogue, true, false);
    CinematicFade(false, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(1.5, c_timeReal);
    CinematicFade(true, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(1.5, c_timeReal);
    SoundPlayForPlayer(SoundLink("M2DistantGunfire3", -1), c_maxPlayers, PlayerGroupAll(), 40.0, 0.0);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1542805878), 6.0, -1, 10.0, true);
    CameraSetValue(gv_pLAYER_01_USER, c_cameraValueDepthOfField, 0.15, 6.0, -1, 10.0);
    Wait(9.0, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(149945331), 6.5, -1, 10.0, true);
    CameraSetValue(gv_pLAYER_01_USER, c_cameraValueDepthOfField, 0.15, 6.5, -1, 10.0);
    Wait(6.5, c_timeReal);
    CinematicFade(false, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    Wait(1.5, c_timeReal);
    CinematicFade(true, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    libNtve_gf_PauseUnit(UnitFromId(2077900760), false);
    libNtve_gf_PauseUnit(UnitFromId(1607133268), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1607133268), true);
    libNtve_gf_ShowHideUnit(UnitFromId(2077900760), true);
    TriggerExecute(gt_RiotCinematicHydraAppears, true, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00149", null, true, gv_myraDavis, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M02_1|Line00150", null, true, gv_myraDavis, false);
    CameraSetValue(gv_pLAYER_01_USER, c_cameraValueDepthOfField, 0.0, 5.0, -1, 10.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00151", null, true, null, false);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematic_Init () {
    gt_RiotCinematic = TriggerCreate("gt_RiotCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Davis Redirects
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicDavisRedirects_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_nydus;

    // Automatic Variable Declarations
    const int auto199073AF_n = 12;
    int auto199073AF_i;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "MyraDavisRiotOfficer"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    UnitKill(UnitFromId(462037354));
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, libNtve_gf_PointFacingAngle(PointFromId(2103497676), 270.0));
    lv_nydus = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_MakeUnitInvulnerable(lv_nydus, true);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm2", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    UnitIssueOrder(gv_riotCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(81547097)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Davis, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(211647565)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Sergeant, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(81547097)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Sergeant, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(211647565)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Mayor, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(81547097)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Mayor, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(211647565)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Darren, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(81547097)), c_orderQueueAddToEnd);
    UnitIssueOrder(gv_riotCine_Darren, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(211647565)), c_orderQueueAddToEnd);
    for (auto199073AF_i = 1; auto199073AF_i <= auto199073AF_n; auto199073AF_i += 1) {
        if ((gv_inCinematic == true) && (UnitIsAlive(lv_nydus) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Zergling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roachling", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", 0, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(4.0, c_timeGame);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicDavisRedirects_Init () {
    gt_RiotCinematicDavisRedirects = TriggerCreate("gt_RiotCinematicDavisRedirects_Func");
    TriggerEnable(gt_RiotCinematicDavisRedirects, false);
    TriggerAddEventUnitRegion(gt_RiotCinematicDavisRedirects, null, RegionFromId(249), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Davis Redirects 2
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicDavisRedirects2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_nydus;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "MyraDavisRiotOfficer"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(211647565));
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, libNtve_gf_PointFacingAngle(PointFromId(211647565), 270.0));
    lv_nydus = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm2", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 100.0, 0.0);
    SoundPlayAtPointForPlayer(SoundLink("M2DistantSirens122", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 100.0, 0.0);
    GameSetLighting("Cybros", 4.0);
    Wait(2.7, c_timeGame);
    SoundPlayAtPointForPlayer(SoundLink("M2HydraDies22", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 200.0, 0.0);
    libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", PointFromId(211647565));
    gv_riotCine_Part1Finished = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicDavisRedirects2_Init () {
    gt_RiotCinematicDavisRedirects2 = TriggerCreate("gt_RiotCinematicDavisRedirects2_Func");
    TriggerEnable(gt_RiotCinematicDavisRedirects2, false);
    TriggerAddEventUnitRegion(gt_RiotCinematicDavisRedirects2, null, RegionFromId(250), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicEnd_Init () {
    gt_RiotCinematicEnd = TriggerCreate("gt_RiotCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_RiotCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup autoA06509F7_g;
    int autoA06509F7_u;
    unit autoA06509F7_var;
    unitgroup autoC6940571_g;
    int autoC6940571_u;
    unit autoC6940571_var;
    unitgroup auto4B0457CC_g;
    int auto4B0457CC_u;
    unit auto4B0457CC_var;
    unitgroup auto8F8122C9_g;
    int auto8F8122C9_u;
    unit auto8F8122C9_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    UIHideTextCrawl(PlayerGroupAll());
    SoundStop(DataTableGetSound(true, "riot"), true);
    SoundStop(DataTableGetSound(true, "cruiserblowup"), true);
    SoundStop(DataTableGetSound(true, "hut"), true);
    SoundStop(DataTableGetSound(true, "riotscreaming"), true);
    SoundStop(DataTableGetSound(true, "riotalarm"), true);
    SoundStop(DataTableGetSound(true, "riotscreaming2"), true);
    TransmissionClearAll();
    TriggerEnable(gt_RiotCinematicDavisRedirects, false);
    TriggerEnable(gt_RiotCinematicDavisRedirects2, false);
    TriggerStop(gt_RiotCinematicGunShopLooters);
    TriggerStop(gt_RiotCinematicMarchers);
    TriggerEnable(gt_RiotCinematicMarchers, false);
    TriggerStop(gt_RiotCinematicRunners);
    TriggerEnable(gt_RiotCinematicRunners, false);
    TriggerStop(gt_RiotCinematicAttack);
    TriggerEnable(gt_RiotCinematicAttack, false);
    autoA06509F7_g = gv_cinematicTempUnits;
    autoA06509F7_u = UnitGroupCount(autoA06509F7_g, c_unitCountAll);
    for (;; autoA06509F7_u -= 1) {
        autoA06509F7_var = UnitGroupUnitFromEnd(autoA06509F7_g, autoA06509F7_u);
        if (autoA06509F7_var == null) { break; }
        UnitRemove(autoA06509F7_var);
    }
    autoC6940571_g = gv_cinematicHiddenUnits;
    autoC6940571_u = UnitGroupCount(autoC6940571_g, c_unitCountAll);
    for (;; autoC6940571_u -= 1) {
        autoC6940571_var = UnitGroupUnitFromEnd(autoC6940571_g, autoC6940571_u);
        if (autoC6940571_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoC6940571_var, true);
    }
    auto4B0457CC_g = gv_cinematicPausedUnits;
    auto4B0457CC_u = UnitGroupCount(auto4B0457CC_g, c_unitCountAll);
    for (;; auto4B0457CC_u -= 1) {
        auto4B0457CC_var = UnitGroupUnitFromEnd(auto4B0457CC_g, auto4B0457CC_u);
        if (auto4B0457CC_var == null) { break; }
        libNtve_gf_PauseUnit(auto4B0457CC_var, false);
    }
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, true);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_riotCine_DavisGroup, false, false);
    CameraLockInput(gv_pLAYER_01_USER, false);
    GameSetToDLighting("KorhalNight");
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_04_ROACHES, libNtve_ge_AllianceSetting_Enemy);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, false);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, false);
    RegionPlayableMapSet(RegionFromId(251));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(149945331), 6.5, -1, 10.0, true);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(262), c_fillTypeUnexplored, false);
    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.5;
    }
    else {
        UnitSetPosition(gv_hyson_Sergeant, libNtve_gf_PointFacingAngle(PointFromId(1918611362), 270.0), false);
        UnitIssueOrder(gv_hyson_Sergeant, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        UnitSetPosition(gv_myraDavis, libNtve_gf_PointFacingAngle(PointFromId(1918611362), 270.0), false);
        libNtve_gf_ShowHideUnit(gv_myraDavis, true);
        UnitIssueOrder(gv_myraDavis, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        libNtve_gf_PauseUnit(gv_myraDavis, false);
        auto8F8122C9_g = UnitGroup(null, c_playerAny, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto8F8122C9_u = UnitGroupCount(auto8F8122C9_g, c_unitCountAll);
        for (;; auto8F8122C9_u -= 1) {
            auto8F8122C9_var = UnitGroupUnitFromEnd(auto8F8122C9_g, auto8F8122C9_u);
            if (auto8F8122C9_var == null) { break; }
            UnitRemove(auto8F8122C9_var);
        }
        UnitRemove(UnitFromId(1669928849));
        CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1029471211), 0.0, -1, 10.0, true);
        lv_fadeDuration = 1.0;
    }
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), lv_fadeDuration);
    libNtve_gf_GlobalCinematicSetting(false);
    gv_inCinematic = false;
    CinematicFade(true, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(gt_RiotTunnelSectionStart, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCleanup_Init () {
    gt_RiotCleanup = TriggerCreate("gt_RiotCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Gun Shop Looters
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicGunShopLooters_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_ShowHideUnit(UnitFromId(687178576), true);
    libNtve_gf_PauseUnit(UnitFromId(687178576), false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitFromId(687178576));
    UnitIssueOrder(UnitFromId(687178576), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(687178576), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(687178576), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(687178576), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    Wait(RandomFixed(0.5, 0.9), c_timeReal);
    libNtve_gf_ShowHideUnit(UnitFromId(285810096), true);
    libNtve_gf_PauseUnit(UnitFromId(285810096), false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitFromId(285810096));
    UnitIssueOrder(UnitFromId(285810096), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(285810096), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(285810096), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(285810096), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    Wait(RandomFixed(0.5, 0.9), c_timeReal);
    libNtve_gf_ShowHideUnit(UnitFromId(1349156146), true);
    libNtve_gf_PauseUnit(UnitFromId(1349156146), false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitFromId(1349156146));
    UnitIssueOrder(UnitFromId(1349156146), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1349156146), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1349156146), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1349156146), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    Wait(RandomFixed(0.5, 0.9), c_timeReal);
    libNtve_gf_ShowHideUnit(UnitFromId(80287791), true);
    libNtve_gf_PauseUnit(UnitFromId(80287791), false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitFromId(80287791));
    UnitIssueOrder(UnitFromId(80287791), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(80287791), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(80287791), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(80287791), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    Wait(RandomFixed(0.5, 0.9), c_timeReal);
    libNtve_gf_ShowHideUnit(UnitFromId(1054309720), true);
    libNtve_gf_PauseUnit(UnitFromId(1054309720), false);
    UnitGroupAdd(gv_cinematicTempUnits, UnitFromId(1054309720));
    UnitIssueOrder(UnitFromId(1054309720), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1054309720), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1054309720), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(1054309720), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicGunShopLooters_Init () {
    gt_RiotCinematicGunShopLooters = TriggerCreate("gt_RiotCinematicGunShopLooters_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Marchers
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicMarchers_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoAB7EA912_n = 23;
    int autoAB7EA912_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoAB7EA912_i = 1; autoAB7EA912_i <= autoAB7EA912_n; autoAB7EA912_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, RegionRandomPoint(RegionFromId(242)));
        UnitGroupAdd(gv_riotCine_Marchers, UnitLastCreated());
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(243))), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.0);
        Wait(0.5, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, RegionRandomPoint(RegionFromId(242)));
        UnitGroupAdd(gv_riotCine_Marchers, UnitLastCreated());
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(243))), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
        ActorSend(libNtve_gf_MainActorofUnit(UnitLastCreated()), "AnimGroupApply Slow Slow {} 0 180.000000 AsDuration");
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropBaseMovementSpeed, 1.0);
        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicMarchers_Init () {
    gt_RiotCinematicMarchers = TriggerCreate("gt_RiotCinematicMarchers_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Nydus Worms 1
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicNydusWorms1_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_nydus;

    // Automatic Variable Declarations
    const int auto976695AA_n = 12;
    int auto976695AA_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(UnitFromId(2081692704)));
    lv_nydus = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    UnitKill(UnitFromId(2081692704));
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 100.0, 0.0);
    UnitSetState(UnitFromId(538414580), c_unitStateTurnSuppressed, true);
    UnitSetState(UnitFromId(467262289), c_unitStateTurnSuppressed, true);
    UnitSetState(UnitFromId(991159140), c_unitStateTurnSuppressed, true);
    UnitSetState(UnitFromId(763524611), c_unitStateTurnSuppressed, true);
    UnitSetState(UnitFromId(506162642), c_unitStateTurnSuppressed, true);
    UnitSetState(UnitFromId(1057326080), c_unitStateTurnSuppressed, true);
    Wait(2.7, c_timeGame);
    for (auto976695AA_i = 1; auto976695AA_i <= auto976695AA_n; auto976695AA_i += 1) {
        if ((gv_inCinematic == true) && (UnitIsAlive(lv_nydus) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roachling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(4.0, c_timeGame);
        }
        else {
            break;
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicNydusWorms1_Init () {
    gt_RiotCinematicNydusWorms1 = TriggerCreate("gt_RiotCinematicNydusWorms1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Nydus Worms 2
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicNydusWorms2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_nydus;

    // Automatic Variable Declarations
    const int auto436931B9_n = 12;
    int auto436931B9_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, libNtve_gf_PointFacingAngle(PointFromId(318576314), 270.0));
    lv_nydus = UnitLastCreated();
    UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm2", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    for (auto436931B9_i = 1; auto436931B9_i <= auto436931B9_n; auto436931B9_i += 1) {
        if ((gv_inCinematic == true) && (UnitIsAlive(lv_nydus) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roachling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(4.0, c_timeGame);
        }
        else {
            break;
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicNydusWorms2_Init () {
    gt_RiotCinematicNydusWorms2 = TriggerCreate("gt_RiotCinematicNydusWorms2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Nydus Worms 3
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicNydusWorms3_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_nydus;

    // Automatic Variable Declarations
    const int auto7C8743D2_n = 12;
    int auto7C8743D2_i;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    CameraShake(gv_pLAYER_01_USER, "Medium", "Tremor", 0.5, 1.0, 4.0);
    libNtve_gf_CreateUnitsAtPoint2(1, "NydusCanal", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, libNtve_gf_PointFacingAngle(PointFromId(1562535463), 270.0));
    lv_nydus = UnitLastCreated();
    libNtve_gf_MakeUnitInvulnerable(lv_nydus, true);
    libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(UnitLastCreated()), c_animNameDefault, "Birth 02", 0, c_animTimeDefault);
    SoundPlayAtPointForPlayer(SoundLink("M2NydusWorm1", -1), c_maxPlayers, PlayerGroupAll(), UnitGetPosition(lv_nydus), 0.0, 100.0, 0.0);
    Wait(2.7, c_timeGame);
    for (auto7C8743D2_i = 1; auto7C8743D2_i <= auto7C8743D2_n; auto7C8743D2_i += 1) {
        if ((gv_inCinematic == true) && (UnitIsAlive(lv_nydus) == true)) {
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.5, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Roachling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(2.0, c_timeGame);
            libNtve_gf_PlayAnimation(libNtve_gf_MainActorofUnit(lv_nydus), c_animNameDefault, "Spell", 0, c_animTimeDefault);
            libNtve_gf_CreateUnitsAtPoint2(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, UnitGetPosition(lv_nydus));
            UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
            Wait(4.0, c_timeGame);
        }
        else {
            break;
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicNydusWorms3_Init () {
    gt_RiotCinematicNydusWorms3 = TriggerCreate("gt_RiotCinematicNydusWorms3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Runners
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicRunners_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto783891D9_n = 22;
    int auto783891D9_i;
    const int autoA5013A9E_n = 20;
    int autoA5013A9E_i;
    unitgroup autoD9C25040_g;
    int autoD9C25040_u;
    unit autoD9C25040_var;
    unitgroup autoE8280BBD_g;
    int autoE8280BBD_u;
    unit autoE8280BBD_var;
    unitgroup autoC03D5378_g;
    int autoC03D5378_u;
    unit autoC03D5378_var;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto783891D9_i = 1; auto783891D9_i <= auto783891D9_n; auto783891D9_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianMale", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, RegionRandomPoint(RegionFromId(243)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    }
    for (autoA5013A9E_i = 1; autoA5013A9E_i <= autoA5013A9E_n; autoA5013A9E_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UPLCivilianFemale", c_unitCreateIgnorePlacement, gv_pLAYER_03_CIVILIANS, RegionRandomPoint(RegionFromId(243)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitSetTeamColorIndex(UnitLastCreated(), PlayerGetColorIndex(RandomInt(1, 15), true));
    }
    autoD9C25040_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(259), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoD9C25040_u = UnitGroupCount(autoD9C25040_g, c_unitCountAll);
    for (;; autoD9C25040_u -= 1) {
        autoD9C25040_var = UnitGroupUnitFromEnd(autoD9C25040_g, autoD9C25040_u);
        if (autoD9C25040_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(autoD9C25040_var), "AnimGroupRemove Superior");
    }
    autoE8280BBD_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(259), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE8280BBD_u = UnitGroupCount(autoE8280BBD_g, c_unitCountAll);
    for (;; autoE8280BBD_u -= 1) {
        autoE8280BBD_var = UnitGroupUnitFromEnd(autoE8280BBD_g, autoE8280BBD_u);
        if (autoE8280BBD_var == null) { break; }
        ActorSend(libNtve_gf_MainActorofUnit(autoE8280BBD_var), "AnimGroupRemove Superior");
    }
    autoC03D5378_g = gv_riotCine_Marchers;
    autoC03D5378_u = UnitGroupCount(autoC03D5378_g, c_unitCountAll);
    for (;; autoC03D5378_u -= 1) {
        autoC03D5378_var = UnitGroupUnitFromEnd(autoC03D5378_g, autoC03D5378_u);
        if (autoC03D5378_var == null) { break; }
        UnitKill(autoC03D5378_var);
    }
    do {
        UnitIssueOrder(UnitGroupRandomUnit(UnitGroup("UPLCivilianFemale", gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitIssueOrder(UnitGroupRandomUnit(UnitGroup("UPLCivilianMale", gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitIssueOrder(UnitGroupRandomUnit(UnitGroup(null, gv_pLAYER_02_POLICE, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitIssueOrder(UnitGroupRandomUnit(UnitGroup("Zergling", gv_pLAYER_04_ROACHES, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitIssueOrder(UnitGroupRandomUnit(UnitGroup("Zergling", gv_pLAYER_04_ROACHES, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        Wait(0.1, c_timeGame);
    }while ((gv_inCinematic == true));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicRunners_Init () {
    gt_RiotCinematicRunners = TriggerCreate("gt_RiotCinematicRunners_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Attack
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicAttack_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto50850A0F_g;
    int auto50850A0F_u;
    unit auto50850A0F_var;
    const int auto38AFC57F_n = 85;
    int auto38AFC57F_i;
    const int autoC2FCE6B7_n = 45;
    int autoC2FCE6B7_i;
    const int autoB9097307_n = 6;
    int autoB9097307_i;
    const int auto8AC8BD6C_n = 70;
    int auto8AC8BD6C_i;

    // Actions
    if (!runActions) {
        return true;
    }

    auto50850A0F_g = UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto50850A0F_u = UnitGroupCount(auto50850A0F_g, c_unitCountAll);
    for (;; auto50850A0F_u -= 1) {
        auto50850A0F_var = UnitGroupUnitFromEnd(auto50850A0F_g, auto50850A0F_u);
        if (auto50850A0F_var == null) { break; }
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueReplace);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto50850A0F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(241))), c_orderQueueAddToEnd);
    }
    for (auto38AFC57F_i = 1; auto38AFC57F_i <= auto38AFC57F_n; auto38AFC57F_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(244)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
    }
    for (autoC2FCE6B7_i = 1; autoC2FCE6B7_i <= autoC2FCE6B7_n; autoC2FCE6B7_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(245)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    Wait(4.0, c_timeGame);
    for (autoB9097307_i = 1; autoB9097307_i <= autoB9097307_n; autoB9097307_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(244)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.7, c_timeGame);
    }
    Wait(1.0, c_timeGame);
    for (auto8AC8BD6C_i = 1; auto8AC8BD6C_i <= auto8AC8BD6C_n; auto8AC8BD6C_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", c_unitCreateIgnorePlacement, gv_pLAYER_04_ROACHES, RegionRandomPoint(RegionFromId(244)));
        UnitGroupAdd(gv_cinematicTempUnits, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(UnitGroup(null, gv_pLAYER_03_CIVILIANS, RegionFromId(241), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive))), c_orderQueueReplace);
        Wait(0.2, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicAttack_Init () {
    gt_RiotCinematicAttack = TriggerCreate("gt_RiotCinematicAttack_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Hydra Appears
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicHydraAppears_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(2077900760), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    Wait(0.5, c_timeReal);
    libNtve_gf_MakeUnitFacePoint(UnitFromId(2077900760), UnitGetPosition(gv_myraDavis), 0.0);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(UnitFromId(1607133268), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    Wait(0.5, c_timeReal);
    libNtve_gf_MakeUnitFacePoint(UnitFromId(1607133268), UnitGetPosition(gv_myraDavis), 0.0);
    Wait(3.0, c_timeReal);
    UnitIssueOrder(UnitFromId(2077900760), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(895450960)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1607133268), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(895450960)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicHydraAppears_Init () {
    gt_RiotCinematicHydraAppears = TriggerCreate("gt_RiotCinematicHydraAppears_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Riot Cinematic Tunnel Car Dialogue
//--------------------------------------------------------------------------------------------------
bool gt_RiotCinematicTunnelCarDialogue_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M2OpenCarDing", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    DataTableSetSound(true, "Ding", SoundLastPlayed());
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00144", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00145", null, true, null, false);
    SoundPlayForPlayer(SoundLink("M2OpenCarDing", 0), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00146", null, true, null, false);
    lib1926661B_gf_SendTransmissionLotC(true, c_invalidPortraitId, "EP01M02_1|Line00147", null, true, null, false);
    SoundPlayForPlayer(SoundLink("M2HysonTowerInteriorExplosion", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitKill(UnitFromId(1669928849));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RiotCinematicTunnelCarDialogue_Init () {
    gt_RiotCinematicTunnelCarDialogue = TriggerCreate("gt_RiotCinematicTunnelCarDialogue_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Q
//--------------------------------------------------------------------------------------------------
bool gt_FrancineQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_FrancineSetup, true, true);
    TriggerExecute(gt_FrancineCinematic, true, true);
    TriggerExecute(gt_FrancineCinematicEnd, true, true);
    TriggerExecute(gt_FrancineCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineQ_Init () {
    gt_FrancineQ = TriggerCreate("gt_FrancineQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Setup
//--------------------------------------------------------------------------------------------------
bool gt_FrancineSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9E4C14A8_g;
    int auto9E4C14A8_u;
    unit auto9E4C14A8_var;
    unitgroup auto630532D8_g;
    int auto630532D8_u;
    unit auto630532D8_var;
    unitgroup auto462EBCAF_g;
    int auto462EBCAF_u;
    unit auto462EBCAF_var;
    unitgroup autoD9612233_g;
    int autoD9612233_u;
    unit autoD9612233_var;
    unitgroup auto93D6604B_g;
    int auto93D6604B_u;
    unit auto93D6604B_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 1.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.0);
    Wait(1.0, c_timeReal);
    gv_inCinematic = true;
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryFlames, true);
    SoundChannelMute(PlayerGroupAll(), c_soundCategoryDoodad, true);
    RegionPlayableMapSet(RegionFromId(273));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    libNtve_gf_StoreUnitSelection(gv_pLAYER_01_USER, libNtve_ge_UnitSelectionStoreOption_ClearUnitSelection);
    PlayerSetState(gv_pLAYER_01_USER, c_playerStateXPGain, false);
    GameTimeOfDayPause(true);
    auto9E4C14A8_g = UnitGroup(null, c_playerAny, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto9E4C14A8_u = UnitGroupCount(auto9E4C14A8_g, c_unitCountAll);
    for (;; auto9E4C14A8_u -= 1) {
        auto9E4C14A8_var = UnitGroupUnitFromEnd(auto9E4C14A8_g, auto9E4C14A8_u);
        if (auto9E4C14A8_var == null) { break; }
        if ((libNtve_gf_UnitIsPaused(auto9E4C14A8_var) == false)) {
            UnitGroupAdd(gv_cinematicPausedUnits, auto9E4C14A8_var);
            libNtve_gf_PauseUnit(auto9E4C14A8_var, true);
        }

    }
    gv_cinematicHiddenUnits = UnitGroupEmpty();
    gv_cinematicTempUnits = UnitGroupEmpty();
    libNtve_gf_AddUnitGroupToUnitGroup(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), gv_cinematicHiddenUnits);
    auto630532D8_g = gv_cinematicHiddenUnits;
    auto630532D8_u = UnitGroupCount(auto630532D8_g, c_unitCountAll);
    for (;; auto630532D8_u -= 1) {
        auto630532D8_var = UnitGroupUnitFromEnd(auto630532D8_g, auto630532D8_u);
        if (auto630532D8_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto630532D8_var, false);
    }
    auto462EBCAF_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(275), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto462EBCAF_u = UnitGroupCount(auto462EBCAF_g, c_unitCountAll);
    for (;; auto462EBCAF_u -= 1) {
        auto462EBCAF_var = UnitGroupUnitFromEnd(auto462EBCAF_g, auto462EBCAF_u);
        if (auto462EBCAF_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto462EBCAF_var, true);
        UnitGroupAdd(gv_cinematicTempUnits, auto462EBCAF_var);
    }
    UnitRemove(gv_bossHKUnit);
    UnitRemove(gv_myraDavis);
    autoD9612233_g = UnitGroup(null, gv_pLAYER_02_POLICE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD9612233_u = UnitGroupCount(autoD9612233_g, c_unitCountAll);
    for (;; autoD9612233_u -= 1) {
        autoD9612233_var = UnitGroupUnitFromEnd(autoD9612233_g, autoD9612233_u);
        if (autoD9612233_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(autoD9612233_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    auto93D6604B_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto93D6604B_u = UnitGroupCount(auto93D6604B_g, c_unitCountAll);
    for (;; auto93D6604B_u -= 1) {
        auto93D6604B_var = UnitGroupUnitFromEnd(auto93D6604B_g, auto93D6604B_u);
        if (auto93D6604B_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto93D6604B_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineSetup_Init () {
    gt_FrancineSetup = TriggerCreate("gt_FrancineSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_FrancineCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto2D901661_n = 5;
    int auto2D901661_i;
    const int autoD153817D_n = 5;
    int autoD153817D_i;
    const int autoA758B306_n = 5;
    int autoA758B306_i;
    const int auto06F5037F_n = 5;
    int auto06F5037F_i;
    const int auto6E447237_n = 5;
    int auto6E447237_i;
    const int auto03E1940C_n = 5;
    int auto03E1940C_i;
    unitgroup autoD5EFBACC_g;
    int autoD5EFBACC_u;
    unit autoD5EFBACC_var;
    unitgroup auto5135D11C_g;
    int auto5135D11C_u;
    unit auto5135D11C_var;
    unitgroup auto11D00887_g;
    int auto11D00887_u;
    unit auto11D00887_var;
    unitgroup auto3E82EF10_g;
    int auto3E82EF10_u;
    unit auto3E82EF10_var;
    unitgroup auto5BAF8F10_g;
    int auto5BAF8F10_u;
    unit auto5BAF8F10_var;
    unitgroup auto35D4E642_g;
    int auto35D4E642_u;
    unit auto35D4E642_var;
    unitgroup auto110C1246_g;
    int auto110C1246_u;
    unit auto110C1246_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1277628412), 0.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    CinematicFade(true, 2.25, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundPlayForPlayer(SoundLink("M2FrancineAlarm", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "AlarmX", SoundLastPlayed());
    SoundPlayForPlayer(SoundLink("M2FrancineExplosion", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "ExplosionY", SoundLastPlayed());
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.3, 0.5, 100.0, 18.0);
    Wait(1.25, c_timeReal);
    for (auto2D901661_i = 1; auto2D901661_i <= auto2D901661_n; auto2D901661_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(266)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(266)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(266)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(266)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(266)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(266)));
        Wait(0.2, c_timeGame);
    }
    for (autoD153817D_i = 1; autoD153817D_i <= autoD153817D_n; autoD153817D_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(267)));
        Wait(0.2, c_timeGame);
    }
    for (autoA758B306_i = 1; autoA758B306_i <= autoA758B306_n; autoA758B306_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(268)));
        Wait(0.2, c_timeGame);
    }
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "Tarsonis_Windows_Zerg_Destructible");
    GameSetLighting("Cybros", 3.0);
    for (auto06F5037F_i = 1; auto06F5037F_i <= auto06F5037F_n; auto06F5037F_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(269)));
        Wait(0.05, c_timeGame);
    }
    for (auto6E447237_i = 1; auto6E447237_i <= auto6E447237_n; auto6E447237_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(270)));
        Wait(0.05, c_timeGame);
    }
    for (auto03E1940C_i = 1; auto03E1940C_i <= auto03E1940C_n; auto03E1940C_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(271)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(272)));
        Wait(0.05, c_timeGame);
    }
    SoundStop(DataTableGetSound(true, "AlarmX"), false);
    FogSetStartHeightOverTime(-2.0, 0.0);
    GameSetLighting("KorhalNight", 0.0);
    VisRevealerDestroy(gv_mapRevealer);
    VisRevealArea(gv_pLAYER_01_USER, RegionFromId(340), 32767.0, false);
    gv_mapRevealer = VisRevealerLastCreated();
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1146235873), 0.0, -1, 10.0, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1418853503), 6.0, -1, 10.0, true);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(6637270)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(548605224)));
    Wait(0.25, c_timeReal);
    autoD5EFBACC_g = UnitGroup(null, c_playerAny, RegionFromId(274), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD5EFBACC_u = UnitGroupCount(autoD5EFBACC_g, c_unitCountAll);
    for (;; autoD5EFBACC_u -= 1) {
        autoD5EFBACC_var = UnitGroupUnitFromEnd(autoD5EFBACC_g, autoD5EFBACC_u);
        if (autoD5EFBACC_var == null) { break; }
        UnitKill(autoD5EFBACC_var);
    }
    Wait(1.25, c_timeReal);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(984062654)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1292400139)));
    auto5135D11C_g = UnitGroup(null, c_playerAny, RegionFromId(275), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5135D11C_u = UnitGroupCount(auto5135D11C_g, c_unitCountAll);
    for (;; auto5135D11C_u -= 1) {
        auto5135D11C_var = UnitGroupUnitFromEnd(auto5135D11C_g, auto5135D11C_u);
        if (auto5135D11C_var == null) { break; }
        UnitKill(auto5135D11C_var);
    }
    Wait(0.6, c_timeReal);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(981544948)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(570776146)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(984062654)));
    auto11D00887_g = UnitGroup(null, c_playerAny, RegionFromId(276), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto11D00887_u = UnitGroupCount(auto11D00887_g, c_unitCountAll);
    for (;; auto11D00887_u -= 1) {
        auto11D00887_var = UnitGroupUnitFromEnd(auto11D00887_g, auto11D00887_u);
        if (auto11D00887_var == null) { break; }
        UnitKill(auto11D00887_var);
    }
    Wait(0.6, c_timeReal);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1018109434)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1747325703)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(759973024)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1193252829)));
    auto3E82EF10_g = UnitGroup(null, c_playerAny, RegionFromId(277), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3E82EF10_u = UnitGroupCount(auto3E82EF10_g, c_unitCountAll);
    for (;; auto3E82EF10_u -= 1) {
        auto3E82EF10_var = UnitGroupUnitFromEnd(auto3E82EF10_g, auto3E82EF10_u);
        if (auto3E82EF10_var == null) { break; }
        UnitKill(auto3E82EF10_var);
    }
    Wait(0.6, c_timeReal);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(2048864513)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1084413304)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(505827136)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(627407053)));
    auto5BAF8F10_g = UnitGroup(null, c_playerAny, RegionFromId(278), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5BAF8F10_u = UnitGroupCount(auto5BAF8F10_g, c_unitCountAll);
    for (;; auto5BAF8F10_u -= 1) {
        auto5BAF8F10_var = UnitGroupUnitFromEnd(auto5BAF8F10_g, auto5BAF8F10_u);
        if (auto5BAF8F10_var == null) { break; }
        UnitKill(auto5BAF8F10_var);
    }
    Wait(0.6, c_timeReal);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(676501676)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(156945472)));
    Wait(0.6, c_timeReal);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1826319463)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(632636338)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(543826528)));
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(2094515260)));
    auto35D4E642_g = UnitGroup(null, c_playerAny, RegionFromId(279), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto35D4E642_u = UnitGroupCount(auto35D4E642_g, c_unitCountAll);
    for (;; auto35D4E642_u -= 1) {
        auto35D4E642_var = UnitGroupUnitFromEnd(auto35D4E642_g, auto35D4E642_u);
        if (auto35D4E642_var == null) { break; }
        UnitKill(auto35D4E642_var);
    }
    Wait(1.0, c_timeReal);
    GameSetLighting("Cybros", 3.0);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(6637270)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(548605224)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(984062654)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1292400139)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(981544948)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(570776146)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(984062654)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1018109434)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1747325703)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(759973024)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1193252829)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1084413304)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(505827136)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(627407053)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(2048864513)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(676501676)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(156945472)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(1826319463)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(632636338)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(543826528)));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateActorAtPoint("GhostNukeExplode2", UnitGetPosition(UnitFromId(2094515260)));
    Wait(0.05, c_timeGame);
    auto110C1246_g = UnitGroup(null, c_playerAny, RegionFromId(280), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto110C1246_u = UnitGroupCount(auto110C1246_g, c_unitCountAll);
    for (;; auto110C1246_u -= 1) {
        auto110C1246_var = UnitGroupUnitFromEnd(auto110C1246_g, auto110C1246_u);
        if (auto110C1246_var == null) { break; }
        UnitKill(auto110C1246_var);
    }
    GameSetLighting("Cybros", 3.0);
    Wait(3.0, c_timeReal);
    CinematicFade(false, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    FogSetStartHeightOverTime(-2.0, 0.0);
    GameSetLighting("KorhalNight", 0.0);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineCinematic_Init () {
    gt_FrancineCinematic = TriggerCreate("gt_FrancineCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_FrancineCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineCinematicEnd_Init () {
    gt_FrancineCinematicEnd = TriggerCreate("gt_FrancineCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Francine Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_FrancineCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(false);
    TriggerExecute(gt_Victory, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FrancineCleanup_Init () {
    gt_FrancineCleanup = TriggerCreate("gt_FrancineCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Initialization_Init();
    gt_Init01Technology_Init();
    gt_Init02Players_Init();
    gt_Init03Units_Init();
    gt_Init04MusicSound_Init();
    gt_Init05Environment_Init();
    gt_StreetRiverwalk_Init();
    gt_StreetConnellyApartments_Init();
    gt_StreetPoliceHQ_Init();
    gt_DavisCruiserStunned_Init();
    gt_DavisCruiserActive_Init();
    gt_DavisCruiserDies_Init();
    gt_NoZergorCivilianSelectable_Init();
    gt_ArtifactDavis_Init();
    gt_ArtifactSurplus_Init();
    gt_ArtifactDenise_Init();
    gt_ArtifactBoomBoom_Init();
    gt_ArtifactIncinerator_Init();
    gt_ArtifactFrancine_Init();
    gt_TipMyraDavis_Init();
    gt_TipProtectandServe_Init();
    gt_TipPoliceCruiser_Init();
    gt_TipHealingPatch_Init();
    gt_TipFlashBangGrenade_Init();
    gt_TipHeadshot_Init();
    gt_TipIncendiaryGrenade_Init();
    gt_TipHelpAUD499_Init();
    gt_TipSavetheDay_Init();
    gt_TipPowerGrid_Init();
    gt_TipLoadingVan_Init();
    gt_TipBoomBoom_Init();
    gt_TipGasTrucks_Init();
    gt_TipIncineratorUnit_Init();
    gt_TipCoolantCloseoff_Init();
    gt_TipSergeantPeters_Init();
    gt_TipRifleSwitch_Init();
    gt_TipAPC_Init();
    gt_DEBUG_Vic_Init();
    gt_ParkEscapeZergling1_Init();
    gt_ParkEscapeZergling2_Init();
    gt_ParkEscapeZergling3_Init();
    gt_ParkEscapeZergling4_Init();
    gt_ParkEscapeZergling5_Init();
    gt_ParkEscapeZergling6_Init();
    gt_ParkEscapeBloodshed1_Init();
    gt_ParkEscapeBloodshed2_Init();
    gt_ParkEscapeBloodshed2FastCops_Init();
    gt_ParkEscapeBloodshed3_Init();
    gt_ParkEscapeBloodshed4_Init();
    gt_ParkEscapeBloodshed5_Init();
    gt_ParkEscapeBloodshed6_Init();
    gt_ParkEscapeBloodshed7_Init();
    gt_ParkSectionBegins_Init();
    gt_ParkEscapeFastCopDespawn_Init();
    gt_ParkZerglingMaker_Init();
    gt_ParkEscapeSection_Init();
    gt_ParkEscapeInitializeBullies_Init();
    gt_ParkEscapePoliceTransmissions_Init();
    gt_ParkEscapeSirenLoop_Init();
    gt_ParkEscapeFirstStopCivilianDespawn_Init();
    gt_ParkEscapeFirstStop_Init();
    gt_ParkEscapeFirstStopArrive_Init();
    gt_ParkEscapeFirstZergSpawn1_Init();
    gt_ParkEscapeFirstZergSpawn2_Init();
    gt_ParkEscapeCompletion_Init();
    gt_ParkEscapeOfficersRescued_Init();
    gt_AUD109Setup_Init();
    gt_AUD109CrashStart_Init();
    gt_AUD109CrashStart2_Init();
    gt_AUD109CrashStart3_Init();
    gt_AUD109AccidentScene_Init();
    gt_AUD109SpawnsStart_Init();
    gt_AUD109Begins_Init();
    gt_AUD109Completed_Init();
    gt_AUD24HydraSpawns_Init();
    gt_AUD24BlockadeTripwire_Init();
    gt_AUD24BlockadeZergSpawn_Init();
    gt_AUD24BlockadeZergDespawn_Init();
    gt_AUD24Unburrow1_Init();
    gt_AUD24Unburrow2_Init();
    gt_AUD24CruiserExplosionSFX_Init();
    gt_AUD24PoliceAnnouncementTripwire_Init();
    gt_AUD24HoldoutSetup_Init();
    gt_AUD24HoldoutStart_Init();
    gt_AUD24HoldoutPoliceFallBack_Init();
    gt_AUD24HoldoutBackupSpawns_Init();
    gt_AUD24HoldoutBackupDeploys_Init();
    gt_AUD24KillCruiser_Init();
    gt_AUD24DavisCruiserDies_Init();
    gt_AUD24HoldoutVictory_Init();
    gt_AUD499CivilianGone1_Init();
    gt_AUD499CivilianGone2_Init();
    gt_AUD499CivilianGone3_Init();
    gt_AUD499CivilianGone4_Init();
    gt_AUD499CivilianGone5_Init();
    gt_AUD499CivilianGone6_Init();
    gt_AUD499CivilianGone7_Init();
    gt_AUD499CivilianGone8_Init();
    gt_AUD499CivilianGone9_Init();
    gt_AUD499CivilianGone10_Init();
    gt_AUD499CivilianRuns110_Init();
    gt_AUD499CivilianRuns98_Init();
    gt_AUD499CivilianRuns67_Init();
    gt_AUD499CivilianRuns45_Init();
    gt_AUD499CivilianRuns23_Init();
    gt_AUD499RescueCivilian1_Init();
    gt_AUD499RescueCivilian2_Init();
    gt_AUD499RescueCivilian3_Init();
    gt_AUD499RescueCivilian4_Init();
    gt_AUD499RescueCivilian5_Init();
    gt_AUD499RescueCivilian6_Init();
    gt_AUD499RescueCivilian7_Init();
    gt_AUD499RescueCivilian8_Init();
    gt_AUD499RescueCivilian9_Init();
    gt_AUD499RescueCivilian10_Init();
    gt_AUD499RescueCiviliansArriveAtHQ_Init();
    gt_AUD499Dialogue4Rescued_Init();
    gt_AUD499Dialogue6Rescued_Init();
    gt_AUD499Dialogue8Rescued_Init();
    gt_AUD499RescueOfficersEarly_Init();
    gt_AUD499SectionSetup_Init();
    gt_AUD499SectionStart_Init();
    gt_AUD499RescueCopsontheWay_Init();
    gt_AUD499CivilianInRescueGroupDies_Init();
    gt_AUD499BuildingFireSilencedNotYet499_Init();
    gt_AUD499BuildingAlarmPlays_Init();
    gt_AUD499BuildingAlarmStops_Init();
    gt_AUD499SectionDavisGetsClose_Init();
    gt_AUD499SWATVanMoves_Init();
    gt_AUD499SWATVanBoom_Init();
    gt_AUD499ScreamingCiviliansTripwire_Init();
    gt_AUD499ScreamingCiviliansDespawn_Init();
    gt_AUD499APCTrigger_Init();
    gt_AUD499APCRescue_Init();
    gt_AUD499ZergSpawnTripwire_Init();
    gt_AUD499ZergSpawnTripwire2_Init();
    gt_AUD499ZergSpawnTripwire3_Init();
    gt_AUD499ZergSpawnTripwire4_Init();
    gt_AUD499Victory_Init();
    gt_AUD499End_Init();
    gt_AUD36SectionUnits_Init();
    gt_AUD36SectionSetup_Init();
    gt_AUD36SectionEAS_Init();
    gt_AUD36SectionStart_Init();
    gt_AUD36ZergSpawn1_Init();
    gt_AUD36ZergSpawn2_Init();
    gt_AUD36ZergSpawn3_Init();
    gt_AUD36ZergSpawn4_Init();
    gt_AUD36PreventZergWanderingAway_Init();
    gt_AUD36BuildingFireHeard_Init();
    gt_AUD36BuildingFireLeave_Init();
    gt_AUD36BuildingExplosion_Init();
    gt_AUD36AirRaidSiren_Init();
    gt_AUD36Victory_Init();
    gt_AUD36DavisSwapstoRiotGear_Init();
    gt_RiverWalkSectionSetup_Init();
    gt_RiverWalkSectionSetup2_Init();
    gt_RiverWalkSectionUnits_Init();
    gt_RiverWalkSectionSetup3_Init();
    gt_RiverWalkSectionSetup4_Init();
    gt_RiverWalkSectionZergSpawn1_Init();
    gt_RiverWalkSectionZergSpawn2_Init();
    gt_RiverWalkSectionZergAttackDavis_Init();
    gt_RiverWalkSectionZergSpawns_Init();
    gt_RiverWalkSectionReadytoDescend_Init();
    gt_RiverWalkSectionDescend_Init();
    gt_RiverWalkSectionDescend2_Init();
    gt_RiverWalkSectionDescend3_Init();
    gt_RiverWalkSectionDescend4_Init();
    gt_RiverWalkSectionDescend5_Init();
    gt_RiverWalkSectionRandomZergSpawns_Init();
    gt_RiverWalkSectionRandomZergSpawns2_Init();
    gt_RiverWalkSectionRandomZergSpawns3_Init();
    gt_RiverWalkSectionRandomZergSpawns4_Init();
    gt_RiverWalkSectionTimerStarts_Init();
    gt_RiverWalkSectionFirstZergUnburrow_Init();
    gt_RiverWalkSectionFirstPowerOutage_Init();
    gt_RiverWalkSectionZergDoorSpawnSewer_Init();
    gt_RiverWalkSectionSecondPowerOutage_Init();
    gt_RiverWalkSectionZergDoorSpawnSewer2_Init();
    gt_RiverWalkSectionFinalPowerOutage_Init();
    gt_RiverWalkSectionZergDoorSpawnSewer3_Init();
    gt_RiverWalkSectionVictory_Init();
    gt_SWATVanSectionUnits_Init();
    gt_SWATVanSectionSetup_Init();
    gt_SWATVanEAS_Init();
    gt_SWATVanMoveOut_Init();
    gt_SWATVanArrives_Init();
    gt_SWATVanEnRouteTripwire_Init();
    gt_SWATVanSectionZergSpawns_Init();
    gt_SWATVanReturnstoHQ_Init();
    gt_SWATVanRemoval_Init();
    gt_SWATVanSectionGuard1LoadsUp_Init();
    gt_SWATVanSectionGuard2LoadsUp_Init();
    gt_SWATVanSectionGuard3LoadsUp_Init();
    gt_SWATVanSectionCiviliansRunningtoVan_Init();
    gt_SWATVanSectionCiviliansLoadingtoVan_Init();
    gt_SWATVanDavisSaysMove_Init();
    gt_SWATVanSectionZergAttackVan_Init();
    gt_SWATVanSectionVictory_Init();
    gt_ConstructionYardSectionSetup_Init();
    gt_ConstructionYardArrive_Init();
    gt_ConstructionYardUnits_Init();
    gt_ConstructionYardMoveToUnburrow_Init();
    gt_ConstructionYardMoveToUnburrow2_Init();
    gt_ConstructionYardAttackWaves_Init();
    gt_ConstructionYardMoveToOsprey_Init();
    gt_ConstructionYardOspreyDespawn_Init();
    gt_ConstructionYardUPLArrives_Init();
    gt_ConstructionYardZergTargetOfficers_Init();
    gt_ConstructionYardZergTargetUPL_Init();
    gt_ConstructionYardEscorttoStation_Init();
    gt_ConstructionYardRemoveOfficersatStation_Init();
    gt_ConstructionYardVictory_Init();
    gt_UltraliskPreCinematic_Init();
    gt_BossUltraliskBossbarShow_Init();
    gt_BossUltraliskBossbarUpdate_Init();
    gt_UltraliskSectionBegins_Init();
    gt_UltraliskReinforcementsHard_Init();
    gt_UltraliskReinforcementsNormal_Init();
    gt_UltraliskReinforcements2_Init();
    gt_TruckPingDeath1_Init();
    gt_TruckPingDeath2_Init();
    gt_TruckPingDeath3_Init();
    gt_TruckPingDeath4_Init();
    gt_UltraliskDamagedByGasTruck_Init();
    gt_UltraliskDamagedByGasTruckQuote_Init();
    gt_UltraliskDespawn_Init();
    gt_UltraliskUltraliskDies_Init();
    gt_UltraliskVictoryRuns_Init();
    gt_UltraliskVictoryRuns2_Init();
    gt_UPLSectionBegins_Init();
    gt_UPLSectionReload_Init();
    gt_UPLSectionZerglingSpawn_Init();
    gt_UPLSectionIncineratorSpawn_Init();
    gt_UPLSectionIncineratorFace_Init();
    gt_UPLSectionUnburrow_Init();
    gt_UPLSectionVictory_Init();
    gt_MayorOverlordBreaksThrough_Init();
    gt_MayorOverlordGetsToRoof_Init();
    gt_MayorOverlord1_Init();
    gt_MayorOverlord2_Init();
    gt_MayorOverlord3_Init();
    gt_MayorOverlord4_Init();
    gt_MayorOverlord5_Init();
    gt_MayorOverlord6_Init();
    gt_MayorOverlord7_Init();
    gt_MayorOverlordDies1_Init();
    gt_MayorOverlordDies2_Init();
    gt_MayorOverlordDies3_Init();
    gt_MayorOverlordDies4_Init();
    gt_MayorOverlordDies5_Init();
    gt_MayorOverlordDies6_Init();
    gt_MayorOverlordDies7_Init();
    gt_WomenandChildrenBegins_Init();
    gt_WomenandChildrenUnits_Init();
    gt_WomenandChildrenTroopSpawn_Init();
    gt_WomenandChildrenSWATVanPath1_Init();
    gt_WomenandChildrenSWATVanStop_Init();
    gt_WomenandChildrenSWATVanPath2_Init();
    gt_WomenandChildrenTroopDespawn_Init();
    gt_WomenandChildrenBullies1_Init();
    gt_WomenandChildrenBullies2_Init();
    gt_WomenandChildrenOverlordsSpawn_Init();
    gt_WomenandChildrenOverlordDespawn_Init();
    gt_WomenandChildrenDarrenDies_Init();
    gt_WomenandChildrenHoldoutOverlordsSpawn_Init();
    gt_WomenandChildrenPart2Start_Init();
    gt_WomenandChildrenAllOverlordsDie_Init();
    gt_WomenandChildrenSomeOverlordsDie_Init();
    gt_HysonTowerSectionLobbyFightEnds_Init();
    gt_HysonTowerBeginUpstairsSection_Init();
    gt_HysonTowerFloor2_Init();
    gt_BossTunnelerStart_Init();
    gt_BossTunnelerWin_Init();
    gt_BossTunnelerBossbarShow_Init();
    gt_BossTunnelerBossbarUpdate_Init();
    gt_BossTunnelerConstantAggression_Init();
    gt_BossTunnelerSpawnPointStart_Init();
    gt_BossTunnelerSpawnPoint1_Init();
    gt_BossTunnelerSpawnPoint2_Init();
    gt_BossTunnelerSpawnPoint3_Init();
    gt_BossTunnelerSpawnPoint4_Init();
    gt_BossTunnelerSpawnPoint5_Init();
    gt_BossTunnelerSpawnPoint6_Init();
    gt_BossTunnelerSpawnPoint7_Init();
    gt_BossTunnelerDealDamage_Init();
    gt_HysonTunnelerBossVictory_Init();
    gt_RiotTunnelSectionStart_Init();
    gt_RiotTunnelAmbient_Init();
    gt_RiotTunnelUnburrow1_Init();
    gt_RiotTunnelUnburrow2_Init();
    gt_RiotTunnelUnburrow3_Init();
    gt_RiotTunnelUnburrow4_Init();
    gt_RiotTunnelSectionAttack_Init();
    gt_RiotTunnelSectionReveal_Init();
    gt_RiotTunnelBeacon_Init();
    gt_BossHKEggs_Init();
    gt_BossHKConstantAggression_Init();
    gt_BossHKDeathSplitCount1_Init();
    gt_BossHKDeathSplitCount2_Init();
    gt_BossHKDeathSplitCount3_Init();
    gt_BossHKDeathSplitCount4_Init();
    gt_BossHKDeathSplitCount5_Init();
    gt_BossHKDeathSplitCount6_Init();
    gt_BossHKDeathSplitCount7_Init();
    gt_BossHKDeathSplitCount8_Init();
    gt_BossHKValve1TimerAppear_Init();
    gt_BossHKValve1TimerStop_Init();
    gt_BossHKValve1TimerStart_Init();
    gt_BossHKValve1Closed_Init();
    gt_BossHKValve2TimerAppear_Init();
    gt_BossHKValve2TimerStop_Init();
    gt_BossHKValve2TimerStart_Init();
    gt_BossHKValve2Closed_Init();
    gt_BossHKValve3TimeAppear_Init();
    gt_BossHKValve3TimerStop_Init();
    gt_BossHKValve3TimerStart_Init();
    gt_BossHKValve3Closed_Init();
    gt_FrancineBossSetup_Init();
    gt_FrancineBossAppearsandTip_Init();
    gt_FrancineBossVictory_Init();
    gt_StatCiviliansLost_Init();
    gt_Stat_FirenadeKillWindow_Init();
    gt_Stat_FirenadeLaunch_Init();
    gt_Stat_GrenadesUsed_Init();
    gt_DefeatAUD36Dies_Init();
    gt_DefeatAUD109Dies_Init();
    gt_DefeatAUD499Dies_Init();
    gt_DefeatAUD499CiviliansDie_Init();
    gt_DefeatConstructionOfficersDead_Init();
    gt_DefeatDavisDead_Init();
    gt_DefeatRexDead_Init();
    gt_DefeatDarrenDead_Init();
    gt_DefeatRiotTunnelSergeantDead_Init();
    gt_DefeatSWATVanDead_Init();
    gt_DefeatSWATVanWomenandChildrenDead_Init();
    gt_VictorySequence_Init();
    gt_Victory_Init();
    gt_Defeat_Init();
    gt_VictoryCheat_Init();
    gt_DefeatCheat_Init();
    gt_IntroQ_Init();
    gt_IntroSetup_Init();
    gt_IntroCinematic_Init();
    gt_IntroCinematicEnd_Init();
    gt_IntroCleanup_Init();
    gt_IntroCinematicAnimalControlDelayedPan_Init();
    gt_IntroCinematicAccidentAmbience_Init();
    gt_IntroCinematicAccidentStop_Init();
    gt_IntroCinematicFinalTruckMove_Init();
    gt_IntroCinematicRunningCivilianScreams_Init();
    gt_IntroCinematicTrafficCopsFace1_Init();
    gt_IntroCinematicCivilianRedirect_Init();
    gt_IntroCinematicDavisRodentTransmission_Init();
    gt_IntroCinematicDespawnNewsCopter_Init();
    gt_IntroCinematicFountainPlays_Init();
    gt_IntroCinematicFountainStops_Init();
    gt_UltraliskQ_Init();
    gt_UltraliskSetup_Init();
    gt_UltraliskCinematic_Init();
    gt_UltraliskCinematicEnd_Init();
    gt_UltraliskCleanup_Init();
    gt_UltraliskCinematicRoutheDies_Init();
    gt_UPLQ_Init();
    gt_UPLSetup_Init();
    gt_UPLCinematic_Init();
    gt_UPLCinematicEnd_Init();
    gt_UPLCleanup_Init();
    gt_UPLCinematicTransmissions_Init();
    gt_UPLCinematicOspreyLandingSite_Init();
    gt_UPLCinematicDavisLands_Init();
    gt_UPLCinematicDespawn_Init();
    gt_UPLCinematicCivilianDespawn_Init();
    gt_UPLCinematicOspreyDespawn_Init();
    gt_MayorQ_Init();
    gt_MayorSetup_Init();
    gt_MayorCinematic_Init();
    gt_MayorCinematicEnd_Init();
    gt_MayorCleanup_Init();
    gt_MayorCinematicAttackWavesStart_Init();
    gt_HysonQ_Init();
    gt_HysonSetup_Init();
    gt_HysonCinematic_Init();
    gt_HysonCinematicEnd_Init();
    gt_HysonCleanup_Init();
    gt_RiotQ_Init();
    gt_RiotSetup_Init();
    gt_RiotCinematic_Init();
    gt_RiotCinematicDavisRedirects_Init();
    gt_RiotCinematicDavisRedirects2_Init();
    gt_RiotCinematicEnd_Init();
    gt_RiotCleanup_Init();
    gt_RiotCinematicGunShopLooters_Init();
    gt_RiotCinematicMarchers_Init();
    gt_RiotCinematicNydusWorms1_Init();
    gt_RiotCinematicNydusWorms2_Init();
    gt_RiotCinematicNydusWorms3_Init();
    gt_RiotCinematicRunners_Init();
    gt_RiotCinematicAttack_Init();
    gt_RiotCinematicHydraAppears_Init();
    gt_RiotCinematicTunnelCarDialogue_Init();
    gt_FrancineQ_Init();
    gt_FrancineSetup_Init();
    gt_FrancineCinematic_Init();
    gt_FrancineCinematicEnd_Init();
    gt_FrancineCleanup_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
