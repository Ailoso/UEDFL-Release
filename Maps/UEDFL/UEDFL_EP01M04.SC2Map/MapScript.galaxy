//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Payback Time
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/LibertyLib"
include "TriggerLibs/VoidCampaignMissionLib"
include "TriggerLibs/VoidCampaignUILib"
include "LibAE8FC9D3"
include "Lib1926661B"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libLbty_InitLib();
    libVCMI_InitLib();
    libVCUI_InitLib();
    libAE8FC9D3_InitLib();
    lib1926661B_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
int gv_pLAYER_00_NEUTRAL;
int gv_pLAYER_01_USER;
int gv_p02_Rescuable;
int gv_pLAYER_03_ROACHES_HOSTILE;
int gv_pLAYER_04_UPL_NEUTRAL;
int gv_pLAYER_06_ROACHES_NEUTRAL;
int gv_pLAYER_15_HOSTILE;
unitgroup gv_exhumerZerg;
unitgroup gv_flashFogPatrols;
unitgroup gv_whattoKillStructureGroup;
unit gv_z1Spy;
unitgroup gv_routheZergGroup;
int gv_ultrasDead;
int gv_z1SectionStarts;
unitgroup gv_miningDrones;
unit gv_colonelGraves;
unit gv_sergeantJerico;
unit gv_cARR;
bool gv_inCinematic;
bool gv_gameOver;
bool gv_cinematicCompleted;
unitgroup gv_z1BlockerGroup;
bool gv__4thFogReached;
int gv_loreFound;
int gv_lancerBaseRespawnSet;
unitgroup gv_patrolInTheClearUltra;
unitgroup gv_patrolInTheClearMuta;
unitgroup gv_flashFogZergGroup;
int gv_flashFogTimerActive;
int gv_flashFogThick;
unitgroup gv_ultrasAttackGroup;
bool gv_ultrasChosen;
bool gv_mutasChosen;
int gv_majorAttackGroupActive;
unitgroup gv_majorAttackGroup;
int gv_z1SunkenColonyLines;
int gv_z1Complete;
int gv_z1DenObjective;
int gv_z1MustSurviveObjective;
unitgroup gv_z1ZergGroup;
unitgroup gv_z1ZergGroup2;
unitgroup gv_z1ZergGroup3;
unitgroup gv_z1ZergGroup4;
int gv_z1SunkenColonyPing;
int gv_routheObjectivePing;
int gv_routheObjective;
int gv_routhe1;
unitgroup gv_routheUltra;
int gv_a6BlimpTextTag;
actor gv_a6BlimpReticle;
int gv_a6Kilo9Ping;
int gv_routheObjective2;
int gv_routhe2;
int gv_routhe4;
unitgroup gv_routheUltra2;
int gv_tR17SectionActive;
unitgroup gv_TR17Group;
int gv_tR17Objective;
int gv_routhe3;
unitgroup gv_routheUltra3;
int gv_objectiveCooker;
int gv_objectiveOven;
int gv_objectiveOtherStuff;
unitgroup gv_spySurprise4;
unitgroup gv_spySectionUPL;
int gv_spySectionStarts;
int gv_spySectionComplete;
int gv_spySectionOvenDead;
int gv_spySectionPressureCookerDead;
bool gv_counterattackLighting;
int gv_counterattackSectionActive;
int gv_routheObjective3;
int gv_routheObjective5;
int gv_routhe6;
bool gv_lancerMorning;
bool gv_lancerDay;
bool gv_lancerAfternoon;
bool gv_lancerNight;
bool gv_lancerFalseStart;
int gv_lancerObjectivePing;
int gv_lancerBuildFOB;
int gv_lancerBuildManufacturingFacility;
int gv_lancerRepairSomething;
int gv_lancerAncillaryPing;
actor gv_lancerRepairPings1;
actor gv_lancerRepairPings2;
actor gv_lancerRepairPings3;
int gv_lancerFog;
int gv_lancerWon;
int gv_lancerFlashFogInactive;
int gv_lancerFlashFogActive;
int gv_lancerStarts;
int gv_lancerObjective2;
int gv_lancerObjective;
int gv_lancerOptional;
int gv_lancerDenDestroyed;
unitgroup gv_lancerMainBase;
unitgroup gv_lancerStructureGroup;
int gv_lancerHeroesObjective;
int gv_lancerAncillaryObjectiveSet;
int gv_statGravesKills;
int gv_statJericoKills;
int gv_statTRKills;
bool gv_statTRsBuilt;
int gv_statBadgerKills;
int gv_statFogDeaths;
int gv_statCARRsDestroyed;
unitgroup gv_introCinematicGroup;
unit gv_introCinematicOsprey1;
unit gv_introCinematicOsprey2;
unitgroup gv_introA6;
unitgroup gv_introCinematicA6;
unitgroup gv_introRouthe;
unitgroup gv_introZ1;
unitgroup gv_introCinematicRaptors1;
unitgroup gv_introInfantryA;
unitgroup gv_introInfantryB;
unitgroup gv_introInfantryC;
unitgroup gv_IntroOsprey;
unit gv_introCondor;
unitgroup gv_introCinematicOspreyInfantryGroup;
unitgroup gv_introCinematicGroupZ1;
actor gv_choiceReticle1;
actor gv_choiceReticle2;
int gv_choiceTextTag1;
int gv_choiceTextTag2;
unitgroup gv_counterattackWave1;
unitgroup gv_counterattackWave2;
unitgroup gv_counterattackWave3;
bool gv_counterattackCinematicComplete;

void InitGlobals () {
    gv_pLAYER_01_USER = 1;
    gv_p02_Rescuable = 2;
    gv_pLAYER_03_ROACHES_HOSTILE = 3;
    gv_pLAYER_04_UPL_NEUTRAL = 4;
    gv_pLAYER_06_ROACHES_NEUTRAL = 6;
    gv_pLAYER_15_HOSTILE = 15;
    gv_exhumerZerg = UnitGroupEmpty();
    gv_flashFogPatrols = UnitGroupEmpty();
    gv_whattoKillStructureGroup = UnitGroupEmpty();
    gv_routheZergGroup = UnitGroupEmpty();
    gv_miningDrones = UnitGroupEmpty();
    gv_z1BlockerGroup = UnitGroupEmpty();
    gv_patrolInTheClearUltra = UnitGroupEmpty();
    gv_patrolInTheClearMuta = UnitGroupEmpty();
    gv_flashFogZergGroup = UnitGroupEmpty();
    gv_ultrasAttackGroup = UnitGroupEmpty();
    gv_majorAttackGroup = UnitGroupEmpty();
    gv_z1DenObjective = lib1926661B_gv_objectiveRescueStalkers;
    gv_z1MustSurviveObjective = c_invalidObjectiveId;
    gv_z1ZergGroup = UnitGroupEmpty();
    gv_z1ZergGroup2 = UnitGroupEmpty();
    gv_z1ZergGroup3 = UnitGroupEmpty();
    gv_z1ZergGroup4 = UnitGroupEmpty();
    gv_routheObjectivePing = c_invalidPingId;
    gv_routheObjective = c_invalidObjectiveId;
    gv_routheUltra = UnitGroupEmpty();
    gv_a6BlimpTextTag = c_textTagNone;
    gv_a6Kilo9Ping = c_invalidPingId;
    gv_routheObjective2 = c_invalidObjectiveId;
    gv_routheUltra2 = UnitGroupEmpty();
    gv_TR17Group = UnitGroupEmpty();
    gv_tR17Objective = c_invalidObjectiveId;
    gv_routheUltra3 = UnitGroupEmpty();
    gv_objectiveCooker = c_invalidObjectiveId;
    gv_objectiveOven = c_invalidObjectiveId;
    gv_objectiveOtherStuff = c_invalidObjectiveId;
    gv_spySurprise4 = UnitGroupEmpty();
    gv_spySectionUPL = UnitGroupEmpty();
    gv_routheObjective3 = c_invalidObjectiveId;
    gv_routheObjective5 = c_invalidObjectiveId;
    gv_lancerObjectivePing = c_invalidPingId;
    gv_lancerBuildFOB = c_invalidObjectiveId;
    gv_lancerBuildManufacturingFacility = c_invalidObjectiveId;
    gv_lancerRepairSomething = c_invalidObjectiveId;
    gv_lancerAncillaryPing = c_invalidPingId;
    gv_lancerObjective2 = c_invalidObjectiveId;
    gv_lancerObjective = c_invalidObjectiveId;
    gv_lancerOptional = c_invalidObjectiveId;
    gv_lancerMainBase = UnitGroupEmpty();
    gv_lancerStructureGroup = UnitGroupEmpty();
    gv_lancerHeroesObjective = c_invalidObjectiveId;
    gv_introCinematicGroup = UnitGroupEmpty();
    gv_introA6 = UnitGroupEmpty();
    gv_introCinematicA6 = UnitGroupEmpty();
    gv_introRouthe = UnitGroupEmpty();
    gv_introZ1 = UnitGroupEmpty();
    gv_introCinematicRaptors1 = UnitGroupEmpty();
    gv_introInfantryA = UnitGroupEmpty();
    gv_introInfantryB = UnitGroupEmpty();
    gv_introInfantryC = UnitGroupEmpty();
    gv_IntroOsprey = UnitGroupEmpty();
    gv_introCinematicOspreyInfantryGroup = UnitGroupEmpty();
    gv_introCinematicGroupZ1 = UnitGroupEmpty();
    gv_choiceTextTag1 = c_textTagNone;
    gv_choiceTextTag2 = c_textTagNone;
    gv_counterattackWave1 = UnitGroupEmpty();
    gv_counterattackWave2 = UnitGroupEmpty();
    gv_counterattackWave3 = UnitGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Initialization;
trigger gt_Init01Technology;
trigger gt_Init02Players;
trigger gt_Init03Units;
trigger gt_Init04MusicSound;
trigger gt_Init05Environment;
trigger gt_Init06Difficulties;
trigger gt_Init07Help;
trigger gt_ExhumerBlows;
trigger gt_ExhumerGoingtoBlow;
trigger gt_MortarTrooper;
trigger gt_CARRRebuilt;
trigger gt_CARRDies;
trigger gt_TipZ1UnitQ;
trigger gt_TipZ1ShieldQ;
trigger gt_TipZ1NitrogenQ;
trigger gt_TipZ1BadgerQ;
trigger gt_TipRoutheUnitQ;
trigger gt_TipA6UnitQ;
trigger gt_TipTR17UnitQ;
trigger gt_TipTR17StarburstQ;
trigger gt_TipGravesUnitQ;
trigger gt_TipJericoUnitQ;
trigger gt_TipFlashFog;
trigger gt_TipAncillaryDenDead;
trigger gt_InfoChip1;
trigger gt_InfoChip2;
trigger gt_InfoChip3;
trigger gt_InfoChip4;
trigger gt_InfoChip5;
trigger gt_AIAttackWaveDarkSwarm;
trigger gt_DefilerUsesAbility;
trigger gt_DefilerEnergy;
trigger gt_StartGameQ;
trigger gt_DisableTacAI;
trigger gt_PreGameStartSetup;
trigger gt_HideBirds;
trigger gt_PatrolsInTheClearUltra;
trigger gt_PatrolsInTheClearMutas;
trigger gt_LancerBaseRespawns;
trigger gt_RegionSE;
trigger gt_RegionCenter2;
trigger gt_RegionCenter;
trigger gt_RegionCenter3;
trigger gt_MutaOverlordVulnerability;
trigger gt_DropVulnerability;
trigger gt_DropVulnerability2;
trigger gt_FlashFogofWarInvulExisting;
trigger gt_FlashFogofWarInvul;
trigger gt_FlashFogofWarVul;
trigger gt_MajorAttack;
trigger gt_MajorAttackEarly;
trigger gt_OverlordDropSpawn;
trigger gt_OverlordDropSpawn2;
trigger gt_OverlordDropAttack;
trigger gt_OverlordDropAttack2;
trigger gt_FlashFogPatrol5;
trigger gt_FlashFogPatrol6;
trigger gt_FlashFogPatrol7;
trigger gt_FlashFogPatrol8;
trigger gt_FlashFogPatrol9;
trigger gt_FlashFogInitialAlert;
trigger gt_FlashFogTimer;
trigger gt_FlashFogEvent1;
trigger gt_FlashFogTimer2;
trigger gt_FlashFogEvent2;
trigger gt_FlashFogTimer3;
trigger gt_FlashFogEvent3;
trigger gt_FlashFogTimer4;
trigger gt_FlashFogEvent4;
trigger gt_MutaAttack1;
trigger gt_UltraAttack1;
trigger gt_FlashFogTimer5;
trigger gt_FlashFogEvent5;
trigger gt_FlashFogTimer6;
trigger gt_FlashFogEvent6;
trigger gt_MutaAttack2;
trigger gt_UltraAttack2;
trigger gt_FlashFogTimer7;
trigger gt_FlashFogEvent7;
trigger gt_FlashFogofWarRecedes;
trigger gt_Z1SectionGameplayStart;
trigger gt_Z1TransmissionSunkenColonySpotted;
trigger gt_Z1ZergUnburrow;
trigger gt_Z1ZergUnburrow2;
trigger gt_Z1ZergUnburrow3;
trigger gt_Z1UltraliskUnburrow;
trigger gt_Z1TransmissionSunkenColonySpotted2;
trigger gt_Z1BadgerUsed;
trigger gt_Z1SectionVictory;
trigger gt_RoutheSetup;
trigger gt_RoutheStarts;
trigger gt_Z1Transmission2UltrasDead;
trigger gt_RoutheUltraDeadCount;
trigger gt_RoutheEnd;
trigger gt_A6SectionSetup;
trigger gt_A6SectionStarts;
trigger gt_A6SectionEnd;
trigger gt_TR17Setup;
trigger gt_TR17UnitSetup;
trigger gt_TR17Start;
trigger gt_TR17RoachWaveTiming;
trigger gt_TR17Reinforcements;
trigger gt_TR17ReinforcementsRescued;
trigger gt_TR17RoachWaves;
trigger gt_TR17RoachWaves2;
trigger gt_TR17RoachWaves3;
trigger gt_TR17End;
trigger gt_DestroyPressureCooker;
trigger gt_DestroySpire;
trigger gt_SpyReinforcements;
trigger gt_SpyRoaches1;
trigger gt_SpySectionEnds1;
trigger gt_SpySectionEnds2;
trigger gt_SpySectionEnds3;
trigger gt_SpySectionWrapup;
trigger gt_CounterattackUnitPrep;
trigger gt_CounterattackSectionStarts;
trigger gt_CounterattackWait;
trigger gt_CounterattackArtillery;
trigger gt_DayandNightCycle;
trigger gt_CounterattackOver;
trigger gt_LancerTutorial1Repair;
trigger gt_LancerTutorial1RepairComplete1;
trigger gt_LancerTutorial1RepairComplete1A;
trigger gt_LancerTutorial1RepairComplete2;
trigger gt_LancerTutorial1RepairComplete2A;
trigger gt_LancerTutorial1RepairComplete3;
trigger gt_LancerTutorial1RepairComplete3A;
trigger gt_LancerTutorial2;
trigger gt_LancerTutorial2Complete;
trigger gt_LancerTutorialFinal;
trigger gt_MutasAppear;
trigger gt_UltrasAppear;
trigger gt_GravesVanishes;
trigger gt_MajorAttackGroupDead;
trigger gt_AncillaryDenDead;
trigger gt_LancerComplete;
trigger gt_GravesKills;
trigger gt_JericoKills;
trigger gt_BadgerBombKills;
trigger gt_TR17sBuilt;
trigger gt_TR17Kills;
trigger gt_CARRsLost;
trigger gt_FogUnitsLost;
trigger gt_DefeatScoutZ1sDead;
trigger gt_DefeatSpySectionCrewDead;
trigger gt_DefeatTR17CrewDead;
trigger gt_DefeatGravesDead;
trigger gt_DefeatJericoDead;
trigger gt_VictoryLancerCompleted;
trigger gt_VictorySequence;
trigger gt_Victory;
trigger gt_Defeat;
trigger gt_VictoryCheat;
trigger gt_DefeatCheat;
trigger gt_IntroOsprey1;
trigger gt_IntroOsprey2;
trigger gt_OspreyRemove2;
trigger gt_IntroOspreyRemove;
trigger gt_IntroOspreyRemove3;
trigger gt_IntroCondorLand;
trigger gt_IntroCondorTakeOff;
trigger gt_IntroTR17Face;
trigger gt_RocketTroopersFace;
trigger gt_IntroQ;
trigger gt_IntroSetup;
trigger gt_IntroCinematic;
trigger gt_IntroCinematicEnd;
trigger gt_IntroCleanup;
trigger gt_ZergPopUp;
trigger gt_MutasorUltrasQ;
trigger gt_MutasorUltrasSetup;
trigger gt_MutasorUltrasCinematic;
trigger gt_MutasorUltrasCleanup;
trigger gt_ElevatorControlUsed;
trigger gt_MutasorUltrasChoiceEnd;
trigger gt_CounterattackQ;
trigger gt_CounterattackSetup;
trigger gt_CounterAttackUnitGroupFills;
trigger gt_CounterAttackCinematic;
trigger gt_CounterAttackCinematicEnd;
trigger gt_CounterAttackCleanup;

//--------------------------------------------------------------------------------------------------
// Trigger: Initialization
//--------------------------------------------------------------------------------------------------
bool gt_Initialization_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_ULoadCampaignData("UEDFL_EP01M04");
    TriggerExecute(gt_Init01Technology, true, true);
    TriggerExecute(gt_Init02Players, true, true);
    TriggerExecute(gt_Init03Units, true, true);
    TriggerExecute(gt_Init04MusicSound, true, true);
    TriggerExecute(gt_Init05Environment, true, true);
    TriggerExecute(gt_Init06Difficulties, true, true);
    TriggerExecute(gt_Init07Help, true, true);
    TriggerExecute(gt_IntroQ, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initialization_Init () {
    gt_Initialization = TriggerCreate("gt_Initialization_Func");
    TriggerAddEventMapInit(gt_Initialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Technology
//--------------------------------------------------------------------------------------------------
bool gt_Init01Technology_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "LotC_InfantryCamoSkin", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_04_UPL_NEUTRAL, "LotC_InfantryCamoSkin", 1);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "RenameZerg", true);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "RenameZerg", 1);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLNightjar", false);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ROACHES_HOSTILE, "overlordtransport", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ROACHES_HOSTILE, "overlordtransport", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ROACHES_HOSTILE, "overlordspeed", 1);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("DefilerMPDarkSwarm", 0), true);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("DefilerMPPlague", 0), true);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("DefilerMPConsume", 0), true);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_03_ROACHES_HOSTILE, "HotSHaveDefiler", 3);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLNightjar", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLAirstrip", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLCommStation", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLForwardOperatingBase", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLRnDFacility", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLHeadquarters", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLExhumer", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLElectrostaticDefenseTower", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLBillet", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLSolitaire", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLManufacturingFacility", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLGenerator", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryHeavy", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryFlamethrower", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryRifle", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryMortar", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "MiningDrone", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CSV", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryOfficer", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryRocket", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "A6", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Z1", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "RoutheTank", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CARR", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "TR17", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Condor", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Osprey", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "RaptorJet", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryArmorLevel3", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehiclePlatingLevel3", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryWeaponsLevel3", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehicleWeaponsLevel3", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryArmorLevel2", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehiclePlatingLevel2", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryWeaponsLevel2", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehicleWeaponsLevel2", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryArmorLevel1", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehiclePlatingLevel1", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryWeaponsLevel1", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehicleWeaponsLevel1", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "InfantryRifleRangeUpgrade", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "InfantryMedkit", false);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "InfantryMortarRangeUpgrade", false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("UPLMiningDroneRepair", 0), false);
    TechTreeUpgradeAddLevel(gv_pLAYER_01_USER, "RenameZerg", 1);
    TechTreeUpgradeAddLevel(gv_pLAYER_03_ROACHES_HOSTILE, "RenameZerg", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "A6ExplosiveRounds", 1);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("BurrowZerglingDown", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("BurrowHydraliskDown", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("BurrowUltraliskDown", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("BurrowRoachDown", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("BurrowQueenDown", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_03_ROACHES_HOSTILE, AbilityCommand("DefilerMPBurrow", 0), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01Technology_Init () {
    gt_Init01Technology = TriggerCreate("gt_Init01Technology_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Players
//--------------------------------------------------------------------------------------------------
bool gt_Init02Players_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTipAlertPanel, true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeAllianceButton, false);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_03_ROACHES_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_pLAYER_04_UPL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_03_ROACHES_HOSTILE, gv_pLAYER_04_UPL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_00_NEUTRAL, gv_pLAYER_15_HOSTILE, libNtve_ge_AllianceSetting_Ally);
    libNtve_gf_SetAlliance(gv_p02_Rescuable, gv_pLAYER_01_USER, libNtve_ge_AllianceSetting_Neutral);
    PlayerSetAlliance(gv_pLAYER_04_UPL_NEUTRAL, c_allianceIdPushable, gv_pLAYER_01_USER, false);
    PlayerOptionOverride(gv_pLAYER_01_USER, "selectuncontrolable", "1");
    PlayerModifyPropertyInt(gv_pLAYER_01_USER, c_playerPropMinerals, c_playerPropOperSetTo, 250);
    PlayerModifyPropertyInt(gv_pLAYER_01_USER, c_playerPropVespene, c_playerPropOperSetTo, 100);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Players_Init () {
    gt_Init02Players = TriggerCreate("gt_Init02Players_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 03 Units
//--------------------------------------------------------------------------------------------------
bool gt_Init03Units_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto41D28980_g;
    int auto41D28980_u;
    unit auto41D28980_var;
    unitgroup auto9DDBE670_g;
    int auto9DDBE670_u;
    unit auto9DDBE670_var;
    unitgroup auto68F220B6_g;
    int auto68F220B6_u;
    unit auto68F220B6_var;
    unitgroup autoB793D1B4_g;
    int autoB793D1B4_u;
    unit autoB793D1B4_var;
    unitgroup autoEC2A2BAA_g;
    int autoEC2A2BAA_u;
    unit autoEC2A2BAA_var;
    unitgroup auto93BEE44C_g;
    int auto93BEE44C_u;
    unit auto93BEE44C_var;
    unitgroup autoED68A6F4_g;
    int autoED68A6F4_u;
    unit autoED68A6F4_var;
    unitgroup auto3D6B3D5D_g;
    int auto3D6B3D5D_u;
    unit auto3D6B3D5D_var;
    unitgroup autoFF1F9880_g;
    int autoFF1F9880_u;
    unit autoFF1F9880_var;
    unitgroup auto8C2CDDDC_g;
    int auto8C2CDDDC_u;
    unit auto8C2CDDDC_var;
    unitgroup auto1F75965B_g;
    int auto1F75965B_u;
    unit auto1F75965B_var;
    unitgroup auto6C3735FE_g;
    int auto6C3735FE_u;
    unit auto6C3735FE_var;
    unitgroup auto15951743_g;
    int auto15951743_u;
    unit auto15951743_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == false)) {
        auto41D28980_g = UnitGroup(null, c_playerAny, RegionFromId(39), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        auto41D28980_u = UnitGroupCount(auto41D28980_g, c_unitCountAll);
        for (;; auto41D28980_u -= 1) {
            auto41D28980_var = UnitGroupUnitFromEnd(auto41D28980_g, auto41D28980_u);
            if (auto41D28980_var == null) { break; }
            UnitRemove(auto41D28980_var);
        }
        auto9DDBE670_g = UnitGroup(null, c_playerAny, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        auto9DDBE670_u = UnitGroupCount(auto9DDBE670_g, c_unitCountAll);
        for (;; auto9DDBE670_u -= 1) {
            auto9DDBE670_var = UnitGroupUnitFromEnd(auto9DDBE670_g, auto9DDBE670_u);
            if (auto9DDBE670_var == null) { break; }
            UnitRemove(auto9DDBE670_var);
        }
        auto68F220B6_g = UnitGroup(null, c_playerAny, RegionFromId(41), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        auto68F220B6_u = UnitGroupCount(auto68F220B6_g, c_unitCountAll);
        for (;; auto68F220B6_u -= 1) {
            auto68F220B6_var = UnitGroupUnitFromEnd(auto68F220B6_g, auto68F220B6_u);
            if (auto68F220B6_var == null) { break; }
            UnitRemove(auto68F220B6_var);
        }
        autoB793D1B4_g = UnitGroup(null, c_playerAny, RegionFromId(42), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        autoB793D1B4_u = UnitGroupCount(autoB793D1B4_g, c_unitCountAll);
        for (;; autoB793D1B4_u -= 1) {
            autoB793D1B4_var = UnitGroupUnitFromEnd(autoB793D1B4_g, autoB793D1B4_u);
            if (autoB793D1B4_var == null) { break; }
            UnitRemove(autoB793D1B4_var);
        }
        autoEC2A2BAA_g = UnitGroup(null, c_playerAny, RegionFromId(58), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        autoEC2A2BAA_u = UnitGroupCount(autoEC2A2BAA_g, c_unitCountAll);
        for (;; autoEC2A2BAA_u -= 1) {
            autoEC2A2BAA_var = UnitGroupUnitFromEnd(autoEC2A2BAA_g, autoEC2A2BAA_u);
            if (autoEC2A2BAA_var == null) { break; }
            UnitRemove(autoEC2A2BAA_var);
        }
        auto93BEE44C_g = UnitGroup(null, c_playerAny, RegionFromId(89), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        auto93BEE44C_u = UnitGroupCount(auto93BEE44C_g, c_unitCountAll);
        for (;; auto93BEE44C_u -= 1) {
            auto93BEE44C_var = UnitGroupUnitFromEnd(auto93BEE44C_g, auto93BEE44C_u);
            if (auto93BEE44C_var == null) { break; }
            UnitRemove(auto93BEE44C_var);
        }
        autoED68A6F4_g = UnitGroup("DefilerMP", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
        autoED68A6F4_u = UnitGroupCount(autoED68A6F4_g, c_unitCountAll);
        for (;; autoED68A6F4_u -= 1) {
            autoED68A6F4_var = UnitGroupUnitFromEnd(autoED68A6F4_g, autoED68A6F4_u);
            if (autoED68A6F4_var == null) { break; }
            UnitRemove(autoED68A6F4_var);
        }
    }

    auto3D6B3D5D_g = UnitGroup("SecretDocuments", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto3D6B3D5D_u = UnitGroupCount(auto3D6B3D5D_g, c_unitCountAll);
    for (;; auto3D6B3D5D_u -= 1) {
        auto3D6B3D5D_var = UnitGroupUnitFromEnd(auto3D6B3D5D_g, auto3D6B3D5D_u);
        if (auto3D6B3D5D_var == null) { break; }
        UnitSetOwner(auto3D6B3D5D_var, gv_pLAYER_00_NEUTRAL, true);
        UnitSetState(auto3D6B3D5D_var, c_unitStateHighlightable, false);
        UnitSetState(auto3D6B3D5D_var, c_unitStateTargetable, false);
        UnitSetState(auto3D6B3D5D_var, c_unitStateSelectable, false);
        libNtve_gf_MakeUnitInvulnerable(auto3D6B3D5D_var, true);
    }
    autoFF1F9880_g = UnitGroup("DestructibleAiurDebris6x6", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoFF1F9880_u = UnitGroupCount(autoFF1F9880_g, c_unitCountAll);
    for (;; autoFF1F9880_u -= 1) {
        autoFF1F9880_var = UnitGroupUnitFromEnd(autoFF1F9880_g, autoFF1F9880_u);
        if (autoFF1F9880_var == null) { break; }
        UnitSetInfoTip(autoFF1F9880_var, StringExternal("Param/Value/D80BBE5D"));
    }
    auto8C2CDDDC_g = UnitGroup(null, c_playerAny, RegionFromId(12), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto8C2CDDDC_u = UnitGroupCount(auto8C2CDDDC_g, c_unitCountAll);
    for (;; auto8C2CDDDC_u -= 1) {
        auto8C2CDDDC_var = UnitGroupUnitFromEnd(auto8C2CDDDC_g, auto8C2CDDDC_u);
        if (auto8C2CDDDC_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto8C2CDDDC_var, false);
    }
    UnitGroupAdd(gv_z1BlockerGroup, UnitFromId(1112814351));
    UnitGroupAdd(gv_z1BlockerGroup, UnitFromId(1862805897));
    UnitGroupAdd(gv_z1BlockerGroup, UnitFromId(1943270372));
    UnitGroupAdd(gv_z1BlockerGroup, UnitFromId(892394235));
    UnitGroupAdd(gv_z1BlockerGroup, UnitFromId(1565606309));
    UnitGroupAdd(gv_z1BlockerGroup, UnitFromId(1664345771));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(632590714));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(1331774783));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(329686718));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(482750848));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(690756493));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(749002347));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(1251038701));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(1450628770));
    UnitGroupAdd(gv_z1ZergGroup, UnitFromId(1419121942));
    UnitGroupAdd(gv_z1ZergGroup3, UnitFromId(1690915832));
    UnitGroupAdd(gv_z1ZergGroup3, UnitFromId(435583896));
    UnitGroupAdd(gv_z1ZergGroup3, UnitFromId(435583896));
    UnitGroupAdd(gv_z1ZergGroup3, UnitFromId(701793995));
    UnitGroupAdd(gv_z1ZergGroup4, UnitFromId(1642520874));
    UnitGroupAdd(gv_z1ZergGroup4, UnitFromId(1163122934));
    UnitGroupAdd(gv_routheZergGroup, UnitFromId(1404444428));
    UnitGroupAdd(gv_routheZergGroup, UnitFromId(1659829252));
    UnitGroupAdd(gv_routheZergGroup, UnitFromId(1333872243));
    UnitGroupAdd(gv_routheZergGroup, UnitFromId(1003072830));
    UnitGroupAdd(gv_routheZergGroup, UnitFromId(619994911));
    UnitGroupAdd(gv_routheZergGroup, UnitFromId(1578313339));
    UnitGroupAdd(gv_routheUltra2, UnitFromId(1276186614));
    UnitGroupAdd(gv_routheUltra2, UnitFromId(1266389635));
    UnitGroupAdd(gv_routheUltra2, UnitFromId(1751503840));
    UnitGroupAdd(gv_routheUltra2, UnitFromId(1108931573));
    UnitGroupAdd(gv_routheUltra2, UnitFromId(1507121917));
    UnitGroupAdd(gv_routheUltra2, UnitFromId(516395472));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(1973112951));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(1844486467));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(765615319));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(298615667));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(954786517));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(1628950015));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(2049488629));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(97985052));
    UnitGroupAdd(gv_whattoKillStructureGroup, UnitFromId(299158583));
    libNtve_gf_ShowHideUnit(UnitFromId(729593720), false);
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(1919786065));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(1942701753));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(3248978));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(1649984044));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(684691984));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(965770744));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(1211469176));
    UnitGroupAdd(gv_lancerStructureGroup, UnitFromId(1501736495));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1702752369));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(796623291));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(290858450));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1470394518));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1076418250));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(369566623));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1677332650));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(651674972));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(151117141));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1517075552));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(286799318));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1308939665));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1926749405));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1288326730));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(152009875));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(611744025));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1842928121));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1534386655));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1961935808));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(552976043));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(61981274));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(61981274));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(61981274));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1582997201));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(186580741));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1278714867));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(49182279));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(929204387));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(149385123));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1465531972));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(885210312));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(2036072607));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(147591820));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(835121850));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(200548153));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(131250159));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1585263479));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(720731453));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(335208509));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(335208509));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1158247313));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1737973442));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(2044599553));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(834286180));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(1770558430));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(2019120317));
    UnitGroupAdd(gv_lancerMainBase, UnitFromId(2000810248));
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1933472698), true);
    auto1F75965B_g = UnitGroup(null, c_playerAny, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1F75965B_u = UnitGroupCount(auto1F75965B_g, c_unitCountAll);
    for (;; auto1F75965B_u -= 1) {
        auto1F75965B_var = UnitGroupUnitFromEnd(auto1F75965B_g, auto1F75965B_u);
        if (auto1F75965B_var == null) { break; }
        UnitSetOwner(auto1F75965B_var, gv_pLAYER_06_ROACHES_NEUTRAL, true);
    }
    auto6C3735FE_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(85), UnitFilter(0, 0, (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6C3735FE_u = UnitGroupCount(auto6C3735FE_g, c_unitCountAll);
    for (;; auto6C3735FE_u -= 1) {
        auto6C3735FE_var = UnitGroupUnitFromEnd(auto6C3735FE_g, auto6C3735FE_u);
        if (auto6C3735FE_var == null) { break; }
        UnitGroupAdd(gv_exhumerZerg, auto6C3735FE_var);
    }
    gv_colonelGraves = UnitFromId(461961139);
    gv_cARR = UnitFromId(925003943);
    gv_sergeantJerico = UnitFromId(1724663316);
    auto15951743_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto15951743_u = UnitGroupCount(auto15951743_g, c_unitCountAll);
    for (;; auto15951743_u -= 1) {
        auto15951743_var = UnitGroupUnitFromEnd(auto15951743_g, auto15951743_u);
        if (auto15951743_var == null) { break; }
        if (((UnitGetType(auto15951743_var) == "DefilerMP") || (UnitGetType(auto15951743_var) == "DefilerMPBurrowed"))) {
            UnitSetPropertyFixed(auto15951743_var, c_unitPropEnergyPercent, 100.0);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init03Units_Init () {
    gt_Init03Units = TriggerCreate("gt_Init03Units_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 04 Music/Sound
//--------------------------------------------------------------------------------------------------
bool gt_Init04MusicSound_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init04MusicSound_Init () {
    gt_Init04MusicSound = TriggerCreate("gt_Init04MusicSound_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 05 Environment
//--------------------------------------------------------------------------------------------------
bool gt_Init05Environment_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameSetBackground(c_backgroundFixed, "AiurSkybox", 100.0);
    GameSetToDLighting("Tarsonis");
    GameTimeOfDaySet("12:00:00");
    GameSetLighting("Tarsonis", 0.0);
    GameTimeOfDaySetLength(900.0);
    FogSetStartHeight(-11.0);
    FogSetDensity(1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init05Environment_Init () {
    gt_Init05Environment = TriggerCreate("gt_Init05Environment_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 06 Difficulties
//--------------------------------------------------------------------------------------------------
bool gt_Init06Difficulties_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init06Difficulties_Init () {
    gt_Init06Difficulties = TriggerCreate("gt_Init06Difficulties_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 07 Help
//--------------------------------------------------------------------------------------------------
bool gt_Init07Help_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init07Help_Init () {
    gt_Init07Help = TriggerCreate("gt_Init07Help_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Exhumer Blows
//--------------------------------------------------------------------------------------------------
bool gt_ExhumerBlows_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnit()) == "UPLExhumer") || (UnitGetType(EventUnit()) == "UPLExhumerRich")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_lancerMorning == true)) {
        GameSetLighting("Agria", 0.0);
        CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 5.0);
        GameSetLighting("AiurMorning", 1.75);
    }

    if ((gv_lancerDay == true)) {
        GameSetLighting("Agria", 0.0);
        CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 5.0);
        GameSetLighting("Tarsonis", 1.75);
    }

    if ((gv_lancerAfternoon == true)) {
        GameSetLighting("Agria", 0.0);
        CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 5.0);
        GameSetLighting("BelShirSunset", 1.75);
    }

    if ((gv_lancerNight == true)) {
        GameSetLighting("Agria", 0.0);
        CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 5.0);
        GameSetLighting("AiurNight", 1.75);
    }

    if ((gv_counterattackLighting == true)) {
        GameSetLighting("Agria", 0.0);
        CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 5.0);
        GameSetLighting("AiurNight", 1.75);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ExhumerBlows_Init () {
    gt_ExhumerBlows = TriggerCreate("gt_ExhumerBlows_Func");
    TriggerAddEventUnitDied(gt_ExhumerBlows, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Exhumer Going to Blow
//--------------------------------------------------------------------------------------------------
bool gt_ExhumerGoingtoBlow_Func (bool testConds, bool runActions) {
    // Variable Declarations
    actor lv_reticle;
    int lv_textTag;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_textTag = c_textTagNone;

    // Conditions
    if (testConds) {
        if (!((UnitGetPropertyFixed(EventUnit(), c_unitPropLife, c_unitPropCurrent) < 50.0))) {
            return false;
        }

        if (!(((UnitGetType(EventUnit()) == "UPLExhumer") || (UnitGetType(EventUnit()) == "UPLExhumerRich")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranEnemy, libVCMI_ge_CampaginReticleSize_Large, StringExternal("Param/Value/BC0246DA"), EventUnit(), "Ref_Center");
    lv_reticle = libNtve_gf_ActorLastCreated();
    lv_textTag = TextTagLastCreated();
    RegionAttachToUnit(RegionFromId(82), EventUnit(), Point(0.0, 0.0));
    MinimapPing(PlayerGroupAll(), UnitGetPosition(EventUnit()), 9.0, Color(50.20, 0.00, 100.00));
    VisRevealArea(gv_pLAYER_01_USER, RegionFromId(82), 20.0, false);
    SoundPlayForPlayer(SoundLink("M4ExhumerAlert", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/52DDB0C2"));
    Wait(5.0, c_timeGame);
    libVCUI_gf_HideCampaignDirective();
    Wait(5.0, c_timeGame);
    libNtve_gf_KillModel(lv_reticle);
    TextTagDestroy(lv_textTag);
    Wait(1.0, c_timeGame);
    TriggerEnable(TriggerGetCurrent(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ExhumerGoingtoBlow_Init () {
    gt_ExhumerGoingtoBlow = TriggerCreate("gt_ExhumerGoingtoBlow_Func");
    TriggerAddEventUnitBehaviorChange(gt_ExhumerGoingtoBlow, null, "UPLExhumerIncapacitated", c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mortar Trooper
//--------------------------------------------------------------------------------------------------
bool gt_MortarTrooper_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto19C655E9_g;
    int auto19C655E9_u;
    unit auto19C655E9_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto19C655E9_g = UnitGroup("InfantryMortar", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto19C655E9_u = UnitGroupCount(auto19C655E9_g, c_unitCountAll);
    for (;; auto19C655E9_u -= 1) {
        auto19C655E9_var = UnitGroupUnitFromEnd(auto19C655E9_g, auto19C655E9_u);
        if (auto19C655E9_var == null) { break; }
        UnitSetTeamColorIndex(auto19C655E9_var, 0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MortarTrooper_Init () {
    gt_MortarTrooper = TriggerCreate("gt_MortarTrooper_Func");
    TriggerAddEventTimePeriodic(gt_MortarTrooper, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CARR Rebuilt
//--------------------------------------------------------------------------------------------------
bool gt_CARRRebuilt_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "CARR"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_CARRDies, true);
    gv_cARR = EventUnit();
    lib1926661B_gf_SetHeroPanelUnit(3, gv_cARR);
    lib1926661B_gf_ShowHideHeroPanel(3, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CARRRebuilt_Init () {
    gt_CARRRebuilt = TriggerCreate("gt_CARRRebuilt_Func");
    TriggerEnable(gt_CARRRebuilt, false);
    TriggerAddEventUnitRegion(gt_CARRRebuilt, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CARR Dies
//--------------------------------------------------------------------------------------------------
bool gt_CARRDies_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_CARRRebuilt, true);
    lib1926661B_gf_ShowHideHeroPanel(3, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CARRDies_Init () {
    gt_CARRDies = TriggerCreate("gt_CARRDies_Func");
    TriggerAddEventUnitDied(gt_CARRDies, UnitRefFromVariable("gv_cARR"));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Z1 Unit Q
//--------------------------------------------------------------------------------------------------
bool gt_TipZ1UnitQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/FCB4335F"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/B0127FCB"), StringExternal("Param/Value/5A7BDCA0"), "Assets\\Textures\\btn-unit-UPL-Z1.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "Z1", true);
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipZ1UnitQ_Init () {
    gt_TipZ1UnitQ = TriggerCreate("gt_TipZ1UnitQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Z1 Shield Q
//--------------------------------------------------------------------------------------------------
bool gt_TipZ1ShieldQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/450403E5"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/9031469B"), StringExternal("Param/Value/93CF03AA"), "Assets\\Textures\\btn-ability-UPL-ShieldDefense.dds");
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipZ1ShieldQ_Init () {
    gt_TipZ1ShieldQ = TriggerCreate("gt_TipZ1ShieldQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Z1 Nitrogen Q
//--------------------------------------------------------------------------------------------------
bool gt_TipZ1NitrogenQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/293470EB"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/DAC3567D"), StringExternal("Param/Value/A4FDB1C5"), "Assets\\Textures\\btn-ability-UPL-LiquidNitrogenCanister.dds");
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipZ1NitrogenQ_Init () {
    gt_TipZ1NitrogenQ = TriggerCreate("gt_TipZ1NitrogenQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Z1 Badger Q
//--------------------------------------------------------------------------------------------------
bool gt_TipZ1BadgerQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/3C35B366"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/54F6CD77"), StringExternal("Param/Value/68C2DF0A"), "Assets\\Textures\\btn-ability-UPL-BadgerBomb.dds");
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipZ1BadgerQ_Init () {
    gt_TipZ1BadgerQ = TriggerCreate("gt_TipZ1BadgerQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Routhe Unit Q
//--------------------------------------------------------------------------------------------------
bool gt_TipRoutheUnitQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/728FDDCB"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/560A2172"), StringExternal("Param/Value/5C7B981E"), "Assets\\Textures\\btn-unit-UPL-RoutheTank.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "RoutheTank", true);
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipRoutheUnitQ_Init () {
    gt_TipRoutheUnitQ = TriggerCreate("gt_TipRoutheUnitQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip A6 Unit Q
//--------------------------------------------------------------------------------------------------
bool gt_TipA6UnitQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/C62CB10C"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/26C6AC4B"), StringExternal("Param/Value/2E6D63BF"), "Assets\\Textures\\btn-unit-upl-a6.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "A6", true);
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipA6UnitQ_Init () {
    gt_TipA6UnitQ = TriggerCreate("gt_TipA6UnitQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip TR-17 Unit Q
//--------------------------------------------------------------------------------------------------
bool gt_TipTR17UnitQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/D8E59D73"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/944A1134"), StringExternal("Param/Value/039EC2F7"), "Assets\\Textures\\btn-unit-UPL-TR17Tank.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "TR17", true);
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipTR17UnitQ_Init () {
    gt_TipTR17UnitQ = TriggerCreate("gt_TipTR17UnitQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip TR-17 Starburst Q
//--------------------------------------------------------------------------------------------------
bool gt_TipTR17StarburstQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/C87F109F"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/C205AC24"), StringExternal("Param/Value/9ADDB272"), "Assets\\Textures\\btn-ability-UPL-Starbust.dds");
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipTR17StarburstQ_Init () {
    gt_TipTR17StarburstQ = TriggerCreate("gt_TipTR17StarburstQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Graves Unit Q
//--------------------------------------------------------------------------------------------------
bool gt_TipGravesUnitQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/C93C1F73"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/4C62ACD9"), StringExternal("Param/Value/77AF94AE"), "Assets\\Textures\\ui-heroicon-williamgraves.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "WilliamGraves", true);
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipGravesUnitQ_Init () {
    gt_TipGravesUnitQ = TriggerCreate("gt_TipGravesUnitQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Jerico Unit Q
//--------------------------------------------------------------------------------------------------
bool gt_TipJericoUnitQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/F3CE30D5"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/845D665F"), StringExternal("Param/Value/BD6B188F"), "Assets\\Textures\\ui-heroicon-jerico.dds");
    TechTreeUnitHelp(gv_pLAYER_01_USER, "RileyJerico", true);
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipJericoUnitQ_Init () {
    gt_TipJericoUnitQ = TriggerCreate("gt_TipJericoUnitQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Flash Fog
//--------------------------------------------------------------------------------------------------
bool gt_TipFlashFog_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/84A9DA2D"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/E3B2A330"), StringExternal("Param/Value/08BD61D4"), "Assets\\Textures\\cloudsingle.dds");
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipFlashFog_Init () {
    gt_TipFlashFog = TriggerCreate("gt_TipFlashFog_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip Ancillary Den Dead
//--------------------------------------------------------------------------------------------------
bool gt_TipAncillaryDenDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/E42AB4D8"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/564B7468"), StringExternal("Param/Value/DC23610A"), "Assets\\Textures\\btn-unit-upl-williamgraves.dds");
    Wait(libVCMI_gv_campaignHintDelay, c_timeReal);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipAncillaryDenDead_Init () {
    gt_TipAncillaryDenDead = TriggerCreate("gt_TipAncillaryDenDead_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Info Chip1
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(156643434));
    gv_loreFound += 1;
    lib1926661B_gf_DisplayLoreWindow("M04-Z1");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip1_Init () {
    gt_InfoChip1 = TriggerCreate("gt_InfoChip1_Func");
    TriggerAddEventUnitRegion(gt_InfoChip1, null, RegionFromId(27), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Info Chip2
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(1871709273));
    gv_loreFound += 1;
    lib1926661B_gf_DisplayLoreWindow("M04-Routhe Tank");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip2_Init () {
    gt_InfoChip2 = TriggerCreate("gt_InfoChip2_Func");
    TriggerAddEventUnitRegion(gt_InfoChip2, null, RegionFromId(28), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Info Chip3
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(876344627));
    gv_loreFound += 1;
    lib1926661B_gf_DisplayLoreWindow("M04-Colonel Graves");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip3_Init () {
    gt_InfoChip3 = TriggerCreate("gt_InfoChip3_Func");
    TriggerAddEventUnitRegion(gt_InfoChip3, null, RegionFromId(29), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Info Chip4
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(973706761));
    gv_loreFound += 1;
    lib1926661B_gf_DisplayLoreWindow("M04-Riley Jerico");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip4_Init () {
    gt_InfoChip4 = TriggerCreate("gt_InfoChip4_Func");
    TriggerAddEventUnitRegion(gt_InfoChip4, null, RegionFromId(30), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Info Chip5
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitKill(UnitFromId(312464690));
    gv_loreFound += 1;
    lib1926661B_gf_DisplayLoreWindow("M04-Refugees");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip5_Init () {
    gt_InfoChip5 = TriggerCreate("gt_InfoChip5_Func");
    TriggerAddEventUnitRegion(gt_InfoChip5, null, RegionFromId(26), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AI Attack Wave Dark Swarm
//--------------------------------------------------------------------------------------------------
bool gt_AIAttackWaveDarkSwarm_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_randomizeChance;
    unitgroup lv_nearbyDefilers;
    unit lv_closestValidDefiler;
    unitgroup lv_nearbyFodder;
    unitgroup lv_enemyGroup;

    // Automatic Variable Declarations
    unitgroup auto96972E38_g;
    int auto96972E38_u;
    unit auto96972E38_var;
    unitgroup auto9020A0E1_g;
    int auto9020A0E1_u;
    unit auto9020A0E1_var;
    unitgroup auto9679DE68_g;
    int auto9679DE68_u;
    unit auto9679DE68_var;
    unitgroup auto81DFCB08_g;
    int auto81DFCB08_u;
    unit auto81DFCB08_var;

    // Variable Initialization
    lv_nearbyDefilers = UnitGroupEmpty();
    lv_nearbyFodder = UnitGroupEmpty();
    lv_enemyGroup = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!(((EventPlayer() == gv_pLAYER_03_ROACHES_HOSTILE)))) {
            return false;
        }

        if (!(((EventUnitDamageSourcePlayer() == gv_pLAYER_01_USER)))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((libVCMI_gf_GameIsOver() == false))) {
            return false;
        }

        if (!((libNtve_gf_PlayerInCinematicMode(gv_pLAYER_01_USER) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_randomizeChance = RandomInt(1, 100);
    lv_nearbyDefilers = UnitGroup("DefilerMP", EventPlayer(), RegionCircle(UnitGetPosition(EventUnit()), 6.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    if ((lv_randomizeChance <= 50)) {
        auto9679DE68_g = lv_nearbyDefilers;
        auto9679DE68_u = UnitGroupCount(auto9679DE68_g, c_unitCountAll);
        for (;; auto9679DE68_u -= 1) {
            auto9679DE68_var = UnitGroupUnitFromEnd(auto9679DE68_g, auto9679DE68_u);
            if (auto9679DE68_var == null) { break; }
            if ((UnitGetPropertyFixed(auto9679DE68_var, c_unitPropEnergy, c_unitPropCurrent) < 100.0)) {
                UnitGroupRemove(lv_nearbyDefilers, auto9679DE68_var);
            }
            else {
                lv_nearbyFodder = UnitGroup("Zergling", EventPlayer(), RegionCircle(UnitGetPosition(EventUnit()), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                UnitIssueOrder(auto9679DE68_var, OrderTargetingUnit(AbilityCommand("DefilerMPConsume", 0), UnitGroupRandomUnit(lv_nearbyFodder, c_unitCountAlive)), c_orderQueueReplace);
                Wait(1.5, c_timeAI);
            }
        }
        if ((UnitGroupCount(lv_nearbyDefilers, c_unitCountAlive) > 0)) {
            TriggerEnable(TriggerGetCurrent(), false);
            UnitGroupIssueOrder(lv_nearbyDefilers, OrderTargetingPoint(AbilityCommand("DefilerMPDarkSwarm", 0), PointWithOffsetPolar(UnitGetPosition(EventUnit()), 2.0, UnitGetFacing(EventUnit()))), c_orderQueueAddToFront);
            auto81DFCB08_g = lv_nearbyDefilers;
            auto81DFCB08_u = UnitGroupCount(auto81DFCB08_g, c_unitCountAll);
            for (;; auto81DFCB08_u -= 1) {
                auto81DFCB08_var = UnitGroupUnitFromEnd(auto81DFCB08_g, auto81DFCB08_u);
                if (auto81DFCB08_var == null) { break; }
                if ((UnitGetPropertyFixed(auto81DFCB08_var, c_unitPropEnergy, c_unitPropCurrent) < 30.0)) {
                    lv_nearbyFodder = UnitGroup("Zergling", EventPlayer(), RegionCircle(UnitGetPosition(EventUnit()), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                    UnitIssueOrder(auto81DFCB08_var, OrderTargetingUnit(AbilityCommand("DefilerMPConsume", 0), UnitGroupRandomUnit(lv_nearbyFodder, c_unitCountAlive)), c_orderQueueReplace);
                    Wait(1.5, c_timeAI);
                }

            }
            Wait(4.0, c_timeAI);
            TriggerEnable(TriggerGetCurrent(), true);
        }

    }
    else {
        auto96972E38_g = lv_nearbyDefilers;
        auto96972E38_u = UnitGroupCount(auto96972E38_g, c_unitCountAll);
        for (;; auto96972E38_u -= 1) {
            auto96972E38_var = UnitGroupUnitFromEnd(auto96972E38_g, auto96972E38_u);
            if (auto96972E38_var == null) { break; }
            if ((UnitGetPropertyFixed(auto96972E38_var, c_unitPropEnergy, c_unitPropCurrent) < 100.0)) {
                UnitGroupRemove(lv_nearbyDefilers, auto96972E38_var);
            }

        }
        if ((UnitGroupCount(lv_nearbyDefilers, c_unitCountAlive) > 0)) {
            TriggerEnable(TriggerGetCurrent(), false);
            lv_enemyGroup = UnitGroup(null, EventUnitDamageSourcePlayer(), RegionCircle(UnitGetPosition(EventUnit()), 7.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
            UnitGroupIssueOrder(lv_nearbyDefilers, OrderTargetingPoint(AbilityCommand("DefilerMPPlague", 0), UnitGroupCenterOfGroup(lv_enemyGroup)), c_orderQueueAddToFront);
            auto9020A0E1_g = lv_nearbyDefilers;
            auto9020A0E1_u = UnitGroupCount(auto9020A0E1_g, c_unitCountAll);
            for (;; auto9020A0E1_u -= 1) {
                auto9020A0E1_var = UnitGroupUnitFromEnd(auto9020A0E1_g, auto9020A0E1_u);
                if (auto9020A0E1_var == null) { break; }
                if ((UnitGetPropertyFixed(auto9020A0E1_var, c_unitPropEnergy, c_unitPropCurrent) < 30.0)) {
                    lv_nearbyFodder = UnitGroup("Zergling", EventPlayer(), RegionCircle(UnitGetPosition(EventUnit()), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
                    UnitIssueOrder(auto9020A0E1_var, OrderTargetingUnit(AbilityCommand("DefilerMPConsume", 0), UnitGroupRandomUnit(lv_nearbyFodder, c_unitCountAlive)), c_orderQueueReplace);
                    Wait(1.5, c_timeAI);
                }

            }
            Wait(5.0, c_timeAI);
            TriggerEnable(TriggerGetCurrent(), true);
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AIAttackWaveDarkSwarm_Init () {
    gt_AIAttackWaveDarkSwarm = TriggerCreate("gt_AIAttackWaveDarkSwarm_Func");
    TriggerAddEventUnitDamaged(gt_AIAttackWaveDarkSwarm, null, c_unitDamageTypeAny, c_unitDamageEither, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defiler Uses Ability
//--------------------------------------------------------------------------------------------------
bool gt_DefilerUsesAbility_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_nearbyFodder;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_nearbyFodder = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "DefilerMP"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitGetPropertyFixed(EventUnit(), c_unitPropEnergy, c_unitPropCurrent) < 100.0)) {
        lv_nearbyFodder = UnitGroup("Zergling", EventPlayer(), RegionCircle(UnitGetPosition(EventUnit()), 8.0), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        UnitIssueOrder(EventUnit(), OrderTargetingUnit(AbilityCommand("DefilerMPConsume", 0), UnitGroupRandomUnit(lv_nearbyFodder, c_unitCountAlive)), c_orderQueueReplace);
        Wait(1.5, c_timeAI);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefilerUsesAbility_Init () {
    gt_DefilerUsesAbility = TriggerCreate("gt_DefilerUsesAbility_Func");
    TriggerAddEventUnitAbility(gt_DefilerUsesAbility, null, null, c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defiler Energy
//--------------------------------------------------------------------------------------------------
bool gt_DefilerEnergy_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnitCreatedUnit()) == "DefilerMP"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(EventUnitCreatedUnit(), c_unitPropEnergyPercent, 100.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefilerEnergy_Init () {
    gt_DefilerEnergy = TriggerCreate("gt_DefilerEnergy_Func");
    TriggerAddEventUnitCreated(gt_DefilerEnergy, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Start Game Q
//--------------------------------------------------------------------------------------------------
bool gt_StartGameQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto359ACAC1_g;
    int auto359ACAC1_u;
    unit auto359ACAC1_var;
    unitgroup auto23D12E0B_g;
    int auto23D12E0B_u;
    unit auto23D12E0B_var;

    // Actions
    if (!runActions) {
        return true;
    }

    VisFillArea(gv_pLAYER_01_USER, RegionEntireMap(), c_fillTypeUnexplored, false);
    UnitSetState(UnitFromId(830359926), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(830359926), c_unitStateSelectable, false);
    UnitSetState(UnitFromId(830359926), c_unitStateTargetable, false);
    auto359ACAC1_g = gv_z1BlockerGroup;
    auto359ACAC1_u = UnitGroupCount(auto359ACAC1_g, c_unitCountAll);
    for (;; auto359ACAC1_u -= 1) {
        auto359ACAC1_var = UnitGroupUnitFromEnd(auto359ACAC1_g, auto359ACAC1_u);
        if (auto359ACAC1_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto359ACAC1_var, true);
        UnitIssueOrder(auto359ACAC1_var, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
        UnitSetState(auto359ACAC1_var, c_unitStateHighlightable, false);
        UnitSetState(auto359ACAC1_var, c_unitStateSelectable, false);
        UnitSetState(auto359ACAC1_var, c_unitStateTargetable, false);
        libNtve_gf_MakeUnitInvulnerable(auto359ACAC1_var, true);
    }
    auto23D12E0B_g = UnitGroup("DestructibleAiurDebris6x6", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto23D12E0B_u = UnitGroupCount(auto23D12E0B_g, c_unitCountAll);
    for (;; auto23D12E0B_u -= 1) {
        auto23D12E0B_var = UnitGroupUnitFromEnd(auto23D12E0B_g, auto23D12E0B_u);
        if (auto23D12E0B_var == null) { break; }
        UnitSetState(auto23D12E0B_var, c_unitStateHighlightable, false);
        UnitSetState(auto23D12E0B_var, c_unitStateSelectable, false);
        UnitSetState(auto23D12E0B_var, c_unitStateTargetable, false);
        libNtve_gf_MakeUnitInvulnerable(auto23D12E0B_var, true);
        UnitSetInfoText2(UnitLastCreated(), StringExternal("Param/Value/B670A12E"));
    }
    gv_z1SectionStarts = 1;
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_TutorialMusic1", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    TriggerExecute(gt_Z1SectionGameplayStart, true, false);
    CampaignInitAI();
    CampaignInitAI();
    AISetGroupTacticalDisabled(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartGameQ_Init () {
    gt_StartGameQ = TriggerCreate("gt_StartGameQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DisableTacAI
//--------------------------------------------------------------------------------------------------
bool gt_DisableTacAI_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE) || (UnitGetOwner(EventUnit()) == gv_pLAYER_06_ROACHES_NEUTRAL) || (UnitGetOwner(EventUnit()) == gv_pLAYER_15_HOSTILE)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    AISetUnitTacticalDisabled(EventUnit(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DisableTacAI_Init () {
    gt_DisableTacAI = TriggerCreate("gt_DisableTacAI_Func");
    TriggerAddEventUnitRegion(gt_DisableTacAI, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Pre Game Start Setup
//--------------------------------------------------------------------------------------------------
bool gt_PreGameStartSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0B54EE01_g;
    int auto0B54EE01_u;
    unit auto0B54EE01_var;
    unitgroup auto025D8994_g;
    int auto025D8994_u;
    unit auto025D8994_var;
    unitgroup auto2ABF9373_g;
    int auto2ABF9373_u;
    unit auto2ABF9373_var;
    unitgroup autoE38B42D4_g;
    int autoE38B42D4_u;
    unit autoE38B42D4_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto0B54EE01_g = UnitGroup("Z1", c_playerAny, RegionFromId(66), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0B54EE01_u = UnitGroupCount(auto0B54EE01_g, c_unitCountAll);
    for (;; auto0B54EE01_u -= 1) {
        auto0B54EE01_var = UnitGroupUnitFromEnd(auto0B54EE01_g, auto0B54EE01_u);
        if (auto0B54EE01_var == null) { break; }
        UnitGroupAdd(gv_introZ1, auto0B54EE01_var);
        UnitSetOwner(auto0B54EE01_var, gv_pLAYER_01_USER, true);
        libNtve_gf_MakeUnitFacePoint(auto0B54EE01_var, libNtve_gf_PointFacingAngle(PointFromId(1170764190), 0.0), 0.0);
        UnitAbilityRemove(auto0B54EE01_var, "Z1BadgerBomb");
    }
    auto025D8994_g = UnitGroup(null, 14, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto025D8994_u = UnitGroupCount(auto025D8994_g, c_unitCountAll);
    for (;; auto025D8994_u -= 1) {
        auto025D8994_var = UnitGroupUnitFromEnd(auto025D8994_g, auto025D8994_u);
        if (auto025D8994_var == null) { break; }
        UnitSetOwner(auto025D8994_var, gv_pLAYER_04_UPL_NEUTRAL, true);
        libNtve_gf_ShowHideUnit(auto025D8994_var, false);
    }
    auto2ABF9373_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2ABF9373_u = UnitGroupCount(auto2ABF9373_g, c_unitCountAll);
    for (;; auto2ABF9373_u -= 1) {
        auto2ABF9373_var = UnitGroupUnitFromEnd(auto2ABF9373_g, auto2ABF9373_u);
        if (auto2ABF9373_var == null) { break; }
        UnitSetOwner(auto2ABF9373_var, gv_pLAYER_04_UPL_NEUTRAL, true);
        libNtve_gf_ShowHideUnit(auto2ABF9373_var, false);
    }
    autoE38B42D4_g = UnitGroup(null, 13, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE38B42D4_u = UnitGroupCount(autoE38B42D4_g, c_unitCountAll);
    for (;; autoE38B42D4_u -= 1) {
        autoE38B42D4_var = UnitGroupUnitFromEnd(autoE38B42D4_g, autoE38B42D4_u);
        if (autoE38B42D4_var == null) { break; }
        UnitSetOwner(autoE38B42D4_var, gv_pLAYER_04_UPL_NEUTRAL, true);
        libNtve_gf_ShowHideUnit(autoE38B42D4_var, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PreGameStartSetup_Init () {
    gt_PreGameStartSetup = TriggerCreate("gt_PreGameStartSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Hide Birds
//--------------------------------------------------------------------------------------------------
bool gt_HideBirds_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!(((gv_spySectionOvenDead == 1) || (gv_spySectionPressureCookerDead == 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "Birds");
    libNtve_gf_ShowHideDoodadsInRegion(false, RegionEntireMap(), "BirdsTarsonis");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_HideBirds_Init () {
    gt_HideBirds = TriggerCreate("gt_HideBirds_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Patrols In The Clear Ultra
//--------------------------------------------------------------------------------------------------
bool gt_PatrolsInTheClearUltra_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto10073856_n;
    int auto10073856_i;

    // Conditions
    if (testConds) {
        if (!((gv_ultrasChosen == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_patrolInTheClearUltra) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto10073856_n = lib1926661B_gf_DifficultyValueInteger(1, 2);
    for (auto10073856_i = 1; auto10073856_i <= auto10073856_n; auto10073856_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UltraliskBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(24405080));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
        UnitGroupAdd(gv_patrolInTheClearUltra, UnitLastCreated());
        Wait(1.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(53536199)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(906349191)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1778301412)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(578774512)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1268384700)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueAddToEnd);
        Wait(5.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PatrolsInTheClearUltra_Init () {
    gt_PatrolsInTheClearUltra = TriggerCreate("gt_PatrolsInTheClearUltra_Func");
    TriggerEnable(gt_PatrolsInTheClearUltra, false);
    TriggerAddEventTimePeriodic(gt_PatrolsInTheClearUltra, 130.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Patrols In The Clear Mutas
//--------------------------------------------------------------------------------------------------
bool gt_PatrolsInTheClearMutas_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto4F46D397_n;
    int auto4F46D397_i;

    // Conditions
    if (testConds) {
        if (!((gv_mutasChosen == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_patrolInTheClearMuta) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto4F46D397_n = lib1926661B_gf_DifficultyValueInteger(2, 4);
    for (auto4F46D397_i = 1; auto4F46D397_i <= auto4F46D397_n; auto4F46D397_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Mutalisk", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1848273256));
        UnitGroupAdd(gv_patrolInTheClearMuta, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1442813905)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1445659078)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1615753221)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1446093123)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1224748226)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1375353885)), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(38))), c_orderQueueAddToEnd);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 1), PointFromId(1442813905)), c_orderQueueAddToEnd);
        Wait(3.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_PatrolsInTheClearMutas_Init () {
    gt_PatrolsInTheClearMutas = TriggerCreate("gt_PatrolsInTheClearMutas_Func");
    TriggerEnable(gt_PatrolsInTheClearMutas, false);
    TriggerAddEventTimePeriodic(gt_PatrolsInTheClearMutas, 160.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Base Respawns
//--------------------------------------------------------------------------------------------------
bool gt_LancerBaseRespawns_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto736B9A3E_n;
    int auto736B9A3E_i;
    int autoA20FACA4_n;
    int autoA20FACA4_i;
    int auto300B60AF_n;
    int auto300B60AF_i;

    // Conditions
    if (testConds) {
        if (!((lib1926661B_gf_DifficultyValueBoolean(false, true) == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }

        if (!((UnitCount(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(81), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 10))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_lancerBaseRespawnSet = 1;
    CameraShakeStart(1, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 150.0);
    SoundPlayForPlayer(SoundLink("SpyGraves82", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "quake4", SoundLastPlayed());
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/2AC8FA0A"));
    SoundPlayForPlayer(SoundLink("SoundWarning", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(5.0, c_timeGame);
    libVCUI_gf_HideCampaignDirective();
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/A5D3CD90"));
    SoundPlayForPlayer(SoundLink("SoundWarning", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(5.0, c_timeGame);
    libVCUI_gf_HideCampaignDirective();
    Wait(5.0, c_timeGame);
    auto736B9A3E_n = RandomInt(13, 16);
    for (auto736B9A3E_i = 1; auto736B9A3E_i <= auto736B9A3E_n; auto736B9A3E_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "HydraliskBurrowed", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(81)));
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoachBurrowed", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(81)));
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    Wait(15.0, c_timeGame);
    autoA20FACA4_n = RandomInt(6, 8);
    for (autoA20FACA4_i = 1; autoA20FACA4_i <= autoA20FACA4_n; autoA20FACA4_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "HydraliskBurrowed", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(36)));
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoachBurrowed", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(36)));
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    auto300B60AF_n = RandomInt(6, 8);
    for (auto300B60AF_i = 1; auto300B60AF_i <= auto300B60AF_n; auto300B60AF_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "HydraliskBurrowed", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(37)));
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoachBurrowed", 0, gv_pLAYER_06_ROACHES_NEUTRAL, RegionRandomPoint(RegionFromId(37)));
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    CameraShakeStop(gv_pLAYER_01_USER);
    SoundStop(DataTableGetSound(true, "quake4"), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerBaseRespawns_Init () {
    gt_LancerBaseRespawns = TriggerCreate("gt_LancerBaseRespawns_Func");
    TriggerAddEventUnitDied(gt_LancerBaseRespawns, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RegionSE
//--------------------------------------------------------------------------------------------------
bool gt_RegionSE_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7F857DC6_g;
    int auto7F857DC6_u;
    unit auto7F857DC6_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }

        if (!((gv_routhe6 == 1))) {
            return false;
        }

        if (!((!((UnitGetType(EventUnit()) == "Overlord"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto7F857DC6_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(45), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7F857DC6_u = UnitGroupCount(auto7F857DC6_g, c_unitCountAll);
    for (;; auto7F857DC6_u -= 1) {
        auto7F857DC6_var = UnitGroupUnitFromEnd(auto7F857DC6_g, auto7F857DC6_u);
        if (auto7F857DC6_var == null) { break; }
        UnitIssueOrder(auto7F857DC6_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RegionSE_Init () {
    gt_RegionSE = TriggerCreate("gt_RegionSE_Func");
    TriggerAddEventUnitRegion(gt_RegionSE, null, RegionFromId(45), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RegionCenter2
//--------------------------------------------------------------------------------------------------
bool gt_RegionCenter2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFED53023_g;
    int autoFED53023_u;
    unit autoFED53023_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }

        if (!((gv_routhe6 == 1))) {
            return false;
        }

        if (!((!((UnitGetType(EventUnit()) == "Overlord"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoFED53023_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(47), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFED53023_u = UnitGroupCount(autoFED53023_g, c_unitCountAll);
    for (;; autoFED53023_u -= 1) {
        autoFED53023_var = UnitGroupUnitFromEnd(autoFED53023_g, autoFED53023_u);
        if (autoFED53023_var == null) { break; }
        UnitIssueOrder(autoFED53023_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RegionCenter2_Init () {
    gt_RegionCenter2 = TriggerCreate("gt_RegionCenter2_Func");
    TriggerAddEventUnitRegion(gt_RegionCenter2, null, RegionFromId(47), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RegionCenter
//--------------------------------------------------------------------------------------------------
bool gt_RegionCenter_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto6A637C03_g;
    int auto6A637C03_u;
    unit auto6A637C03_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }

        if (!((gv_routhe6 == 1))) {
            return false;
        }

        if (!((!((UnitGetType(EventUnit()) == "Overlord"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto6A637C03_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(44), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6A637C03_u = UnitGroupCount(auto6A637C03_g, c_unitCountAll);
    for (;; auto6A637C03_u -= 1) {
        auto6A637C03_var = UnitGroupUnitFromEnd(auto6A637C03_g, auto6A637C03_u);
        if (auto6A637C03_var == null) { break; }
        UnitIssueOrder(auto6A637C03_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(725804337)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RegionCenter_Init () {
    gt_RegionCenter = TriggerCreate("gt_RegionCenter_Func");
    TriggerAddEventUnitRegion(gt_RegionCenter, null, RegionFromId(44), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RegionCenter 3
//--------------------------------------------------------------------------------------------------
bool gt_RegionCenter3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDCAF96DF_g;
    int autoDCAF96DF_u;
    unit autoDCAF96DF_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }

        if (!((gv_routhe6 == 1))) {
            return false;
        }

        if (!((!((UnitGetType(EventUnit()) == "Overlord"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoDCAF96DF_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(43), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDCAF96DF_u = UnitGroupCount(autoDCAF96DF_g, c_unitCountAll);
    for (;; autoDCAF96DF_u -= 1) {
        autoDCAF96DF_var = UnitGroupUnitFromEnd(autoDCAF96DF_g, autoDCAF96DF_u);
        if (autoDCAF96DF_var == null) { break; }
        UnitIssueOrder(autoDCAF96DF_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RegionCenter3_Init () {
    gt_RegionCenter3 = TriggerCreate("gt_RegionCenter3_Func");
    TriggerAddEventUnitRegion(gt_RegionCenter3, null, RegionFromId(43), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Muta/OverlordVulnerability
//--------------------------------------------------------------------------------------------------
bool gt_MutaOverlordVulnerability_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto8016DD6D_g;
    int auto8016DD6D_u;
    unit auto8016DD6D_var;
    unitgroup autoABCA9ED5_g;
    int autoABCA9ED5_u;
    unit autoABCA9ED5_var;

    // Conditions
    if (testConds) {
        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto8016DD6D_g = UnitGroup("Mutalisk", gv_pLAYER_03_ROACHES_HOSTILE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto8016DD6D_u = UnitGroupCount(auto8016DD6D_g, c_unitCountAll);
    for (;; auto8016DD6D_u -= 1) {
        auto8016DD6D_var = UnitGroupUnitFromEnd(auto8016DD6D_g, auto8016DD6D_u);
        if (auto8016DD6D_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto8016DD6D_var, false);
    }
    autoABCA9ED5_g = UnitGroup("Overlord", gv_pLAYER_03_ROACHES_HOSTILE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoABCA9ED5_u = UnitGroupCount(autoABCA9ED5_g, c_unitCountAll);
    for (;; autoABCA9ED5_u -= 1) {
        autoABCA9ED5_var = UnitGroupUnitFromEnd(autoABCA9ED5_g, autoABCA9ED5_u);
        if (autoABCA9ED5_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoABCA9ED5_var, false);
        UnitSetState(EventUnit(), c_unitStateHighlightable, true);
        UnitSetState(EventUnit(), c_unitStateSelectable, true);
        UnitSetState(EventUnit(), c_unitStateTooltipable, true);
        UnitSetState(EventUnit(), c_unitStateCursorable, true);
        UnitSetState(EventUnit(), c_unitStateTargetable, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutaOverlordVulnerability_Init () {
    gt_MutaOverlordVulnerability = TriggerCreate("gt_MutaOverlordVulnerability_Func");
    TriggerAddEventTimePeriodic(gt_MutaOverlordVulnerability, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DropVulnerability
//--------------------------------------------------------------------------------------------------
bool gt_DropVulnerability_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE0632ACF_g;
    int autoE0632ACF_u;
    unit autoE0632ACF_var;

    // Conditions
    if (testConds) {
        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoE0632ACF_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(61), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE0632ACF_u = UnitGroupCount(autoE0632ACF_g, c_unitCountAll);
    for (;; autoE0632ACF_u -= 1) {
        autoE0632ACF_var = UnitGroupUnitFromEnd(autoE0632ACF_g, autoE0632ACF_u);
        if (autoE0632ACF_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoE0632ACF_var, false);
        UnitSetState(EventUnit(), c_unitStateHighlightable, true);
        UnitSetState(EventUnit(), c_unitStateSelectable, true);
        UnitSetState(EventUnit(), c_unitStateTooltipable, true);
        UnitSetState(EventUnit(), c_unitStateCursorable, true);
        UnitSetState(EventUnit(), c_unitStateTargetable, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DropVulnerability_Init () {
    gt_DropVulnerability = TriggerCreate("gt_DropVulnerability_Func");
    TriggerAddEventTimePeriodic(gt_DropVulnerability, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DropVulnerability2
//--------------------------------------------------------------------------------------------------
bool gt_DropVulnerability2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0211CE88_g;
    int auto0211CE88_u;
    unit auto0211CE88_var;

    // Conditions
    if (testConds) {
        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0211CE88_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(61), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0211CE88_u = UnitGroupCount(auto0211CE88_g, c_unitCountAll);
    for (;; auto0211CE88_u -= 1) {
        auto0211CE88_var = UnitGroupUnitFromEnd(auto0211CE88_g, auto0211CE88_u);
        if (auto0211CE88_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto0211CE88_var, false);
        UnitSetState(EventUnit(), c_unitStateHighlightable, true);
        UnitSetState(EventUnit(), c_unitStateSelectable, true);
        UnitSetState(EventUnit(), c_unitStateTooltipable, true);
        UnitSetState(EventUnit(), c_unitStateCursorable, true);
        UnitSetState(EventUnit(), c_unitStateTargetable, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DropVulnerability2_Init () {
    gt_DropVulnerability2 = TriggerCreate("gt_DropVulnerability2_Func");
    TriggerAddEventTimePeriodic(gt_DropVulnerability2, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogofWar InvulExisting
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogofWarInvulExisting_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF75224A2_g;
    int autoF75224A2_u;
    unit autoF75224A2_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoF75224A2_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(20), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF75224A2_u = UnitGroupCount(autoF75224A2_g, c_unitCountAll);
    for (;; autoF75224A2_u -= 1) {
        autoF75224A2_var = UnitGroupUnitFromEnd(autoF75224A2_g, autoF75224A2_u);
        if (autoF75224A2_var == null) { break; }
        UnitGroupAdd(gv_flashFogZergGroup, autoF75224A2_var);
        libNtve_gf_MakeUnitInvulnerable(autoF75224A2_var, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogofWarInvulExisting_Init () {
    gt_FlashFogofWarInvulExisting = TriggerCreate("gt_FlashFogofWarInvulExisting_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogofWar Invul
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogofWarInvul_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) != "Mutalisk"))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) != "Overlord"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }

        if (!((gv_flashFogThick == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_flashFogZergGroup, EventUnit());
    libNtve_gf_MakeUnitInvulnerable(EventUnit(), true);
    UnitSetState(EventUnit(), c_unitStateHighlightable, false);
    UnitSetState(EventUnit(), c_unitStateSelectable, false);
    UnitSetState(EventUnit(), c_unitStateTooltipable, false);
    UnitSetState(EventUnit(), c_unitStateCursorable, false);
    UnitSetState(EventUnit(), c_unitStateTargetable, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogofWarInvul_Init () {
    gt_FlashFogofWarInvul = TriggerCreate("gt_FlashFogofWarInvul_Func");
    TriggerAddEventUnitRegion(gt_FlashFogofWarInvul, null, RegionFromId(20), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogofWar Vul
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogofWarVul_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitInvulnerable(EventUnit(), false);
    UnitSetState(EventUnit(), c_unitStateHighlightable, true);
    UnitSetState(EventUnit(), c_unitStateSelectable, true);
    UnitSetState(EventUnit(), c_unitStateTooltipable, true);
    UnitSetState(EventUnit(), c_unitStateCursorable, true);
    UnitSetState(EventUnit(), c_unitStateTargetable, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogofWarVul_Init () {
    gt_FlashFogofWarVul = TriggerCreate("gt_FlashFogofWarVul_Func");
    TriggerAddEventUnitRegion(gt_FlashFogofWarVul, null, RegionFromId(20), false);
    TriggerAddEventUnitRegion(gt_FlashFogofWarVul, null, RegionFromId(21), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: MajorAttack
//--------------------------------------------------------------------------------------------------
bool gt_MajorAttack_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoEA57CC1D_g;
    int autoEA57CC1D_u;
    unit autoEA57CC1D_var;
    unitgroup auto9C407DD7_g;
    int auto9C407DD7_u;
    unit auto9C407DD7_var;
    unitgroup autoEAF15A50_g;
    int autoEAF15A50_u;
    unit autoEAF15A50_var;
    unitgroup auto64F16022_g;
    int auto64F16022_u;
    unit auto64F16022_var;
    unitgroup autoE38C53C6_g;
    int autoE38C53C6_u;
    unit autoE38C53C6_var;
    unitgroup autoE0486DA7_g;
    int autoE0486DA7_u;
    unit autoE0486DA7_var;
    unitgroup auto77DA0939_g;
    int auto77DA0939_u;
    unit auto77DA0939_var;
    unitgroup autoF449D123_g;
    int autoF449D123_u;
    unit autoF449D123_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_majorAttackGroupActive == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerDestroy(gt_MajorAttackEarly);
    UnitCreate(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(423996504), 270.0);
    gv_z1Spy = UnitLastCreated();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/EF1AC49E"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00042", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00043", null, true, gv_colonelGraves, false);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/9A488E8B"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00044", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(1.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00045", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_OverlordDropSpawn, true, false);
    TriggerExecute(gt_OverlordDropSpawn2, true, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(11, 25), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(1, 3), "Ultralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(1.0, c_timeGame);
    autoEA57CC1D_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEA57CC1D_u = UnitGroupCount(autoEA57CC1D_g, c_unitCountAll);
    for (;; autoEA57CC1D_u -= 1) {
        autoEA57CC1D_var = UnitGroupUnitFromEnd(autoEA57CC1D_g, autoEA57CC1D_u);
        if (autoEA57CC1D_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, autoEA57CC1D_var);
        UnitIssueOrder(autoEA57CC1D_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    auto9C407DD7_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9C407DD7_u = UnitGroupCount(auto9C407DD7_g, c_unitCountAll);
    for (;; auto9C407DD7_u -= 1) {
        auto9C407DD7_var = UnitGroupUnitFromEnd(auto9C407DD7_g, auto9C407DD7_u);
        if (auto9C407DD7_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, auto9C407DD7_var);
        UnitIssueOrder(auto9C407DD7_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    autoEAF15A50_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEAF15A50_u = UnitGroupCount(autoEAF15A50_g, c_unitCountAll);
    for (;; autoEAF15A50_u -= 1) {
        autoEAF15A50_var = UnitGroupUnitFromEnd(autoEAF15A50_g, autoEAF15A50_u);
        if (autoEAF15A50_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, autoEAF15A50_var);
        UnitIssueOrder(autoEAF15A50_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    auto64F16022_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto64F16022_u = UnitGroupCount(auto64F16022_g, c_unitCountAll);
    for (;; auto64F16022_u -= 1) {
        auto64F16022_var = UnitGroupUnitFromEnd(auto64F16022_g, auto64F16022_u);
        if (auto64F16022_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, auto64F16022_var);
        UnitIssueOrder(auto64F16022_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    Wait(lib1926661B_gf_DifficultyValueInteger(45, 0), c_timeGame);
    if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == false)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(11, 25), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(1, 3), "Ultralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        Wait(1.0, c_timeGame);
        autoE38C53C6_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoE38C53C6_u = UnitGroupCount(autoE38C53C6_g, c_unitCountAll);
        for (;; autoE38C53C6_u -= 1) {
            autoE38C53C6_var = UnitGroupUnitFromEnd(autoE38C53C6_g, autoE38C53C6_u);
            if (autoE38C53C6_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, autoE38C53C6_var);
            UnitIssueOrder(autoE38C53C6_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
        autoE0486DA7_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoE0486DA7_u = UnitGroupCount(autoE0486DA7_g, c_unitCountAll);
        for (;; autoE0486DA7_u -= 1) {
            autoE0486DA7_var = UnitGroupUnitFromEnd(autoE0486DA7_g, autoE0486DA7_u);
            if (autoE0486DA7_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, autoE0486DA7_var);
            UnitIssueOrder(autoE0486DA7_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
        auto77DA0939_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto77DA0939_u = UnitGroupCount(auto77DA0939_g, c_unitCountAll);
        for (;; auto77DA0939_u -= 1) {
            auto77DA0939_var = UnitGroupUnitFromEnd(auto77DA0939_g, auto77DA0939_u);
            if (auto77DA0939_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, auto77DA0939_var);
            UnitIssueOrder(auto77DA0939_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
        autoF449D123_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoF449D123_u = UnitGroupCount(autoF449D123_g, c_unitCountAll);
        for (;; autoF449D123_u -= 1) {
            autoF449D123_var = UnitGroupUnitFromEnd(autoF449D123_g, autoF449D123_u);
            if (autoF449D123_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, autoF449D123_var);
            UnitIssueOrder(autoF449D123_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
    }

    gv_majorAttackGroupActive = 1;
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MajorAttack_Init () {
    gt_MajorAttack = TriggerCreate("gt_MajorAttack_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MajorAttack Early
//--------------------------------------------------------------------------------------------------
bool gt_MajorAttackEarly_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto5A1CBD7C_g;
    int auto5A1CBD7C_u;
    unit auto5A1CBD7C_var;
    unitgroup auto05A3D025_g;
    int auto05A3D025_u;
    unit auto05A3D025_var;
    unitgroup autoB1F0AC83_g;
    int autoB1F0AC83_u;
    unit autoB1F0AC83_var;
    unitgroup auto627FCCCB_g;
    int auto627FCCCB_u;
    unit auto627FCCCB_var;
    unitgroup autoA586A7C0_g;
    int autoA586A7C0_u;
    unit autoA586A7C0_var;
    unitgroup autoB3B20F9C_g;
    int autoB3B20F9C_u;
    unit autoB3B20F9C_var;
    unitgroup auto6D0F10DD_g;
    int auto6D0F10DD_u;
    unit auto6D0F10DD_var;
    unitgroup auto9B1BBFC3_g;
    int auto9B1BBFC3_u;
    unit auto9B1BBFC3_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_majorAttackGroupActive == 0))) {
            return false;
        }

        if (!((gv_lancerBaseRespawnSet == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerDestroy(gt_MajorAttack);
    UnitCreate(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(423996504), 270.0);
    gv_z1Spy = UnitLastCreated();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/B97B40A3"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00042", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00043", null, true, gv_colonelGraves, false);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/D855EE19"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00044", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(1.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00045", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_OverlordDropSpawn, true, false);
    TriggerExecute(gt_OverlordDropSpawn2, true, false);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(11, 25), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(1, 3), "Ultralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(1.0, c_timeGame);
    auto5A1CBD7C_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5A1CBD7C_u = UnitGroupCount(auto5A1CBD7C_g, c_unitCountAll);
    for (;; auto5A1CBD7C_u -= 1) {
        auto5A1CBD7C_var = UnitGroupUnitFromEnd(auto5A1CBD7C_g, auto5A1CBD7C_u);
        if (auto5A1CBD7C_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, auto5A1CBD7C_var);
        UnitIssueOrder(auto5A1CBD7C_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    auto05A3D025_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto05A3D025_u = UnitGroupCount(auto05A3D025_g, c_unitCountAll);
    for (;; auto05A3D025_u -= 1) {
        auto05A3D025_var = UnitGroupUnitFromEnd(auto05A3D025_g, auto05A3D025_u);
        if (auto05A3D025_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, auto05A3D025_var);
        UnitIssueOrder(auto05A3D025_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    autoB1F0AC83_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB1F0AC83_u = UnitGroupCount(autoB1F0AC83_g, c_unitCountAll);
    for (;; autoB1F0AC83_u -= 1) {
        autoB1F0AC83_var = UnitGroupUnitFromEnd(autoB1F0AC83_g, autoB1F0AC83_u);
        if (autoB1F0AC83_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, autoB1F0AC83_var);
        UnitIssueOrder(autoB1F0AC83_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    auto627FCCCB_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto627FCCCB_u = UnitGroupCount(auto627FCCCB_g, c_unitCountAll);
    for (;; auto627FCCCB_u -= 1) {
        auto627FCCCB_var = UnitGroupUnitFromEnd(auto627FCCCB_g, auto627FCCCB_u);
        if (auto627FCCCB_var == null) { break; }
        UnitGroupAdd(gv_majorAttackGroup, auto627FCCCB_var);
        UnitIssueOrder(auto627FCCCB_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    Wait(lib1926661B_gf_DifficultyValueInteger(45, 0), c_timeGame);
    if ((lib1926661B_gf_DifficultyValueBoolean(false, true) == false)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        Wait(0.2, c_timeGame);
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(11, 25), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(1, 3), "Ultralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
        Wait(1.0, c_timeGame);
        autoA586A7C0_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoA586A7C0_u = UnitGroupCount(autoA586A7C0_g, c_unitCountAll);
        for (;; autoA586A7C0_u -= 1) {
            autoA586A7C0_var = UnitGroupUnitFromEnd(autoA586A7C0_g, autoA586A7C0_u);
            if (autoA586A7C0_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, autoA586A7C0_var);
            UnitIssueOrder(autoA586A7C0_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
        autoB3B20F9C_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoB3B20F9C_u = UnitGroupCount(autoB3B20F9C_g, c_unitCountAll);
        for (;; autoB3B20F9C_u -= 1) {
            autoB3B20F9C_var = UnitGroupUnitFromEnd(autoB3B20F9C_g, autoB3B20F9C_u);
            if (autoB3B20F9C_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, autoB3B20F9C_var);
            UnitIssueOrder(autoB3B20F9C_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
        auto6D0F10DD_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto6D0F10DD_u = UnitGroupCount(auto6D0F10DD_g, c_unitCountAll);
        for (;; auto6D0F10DD_u -= 1) {
            auto6D0F10DD_var = UnitGroupUnitFromEnd(auto6D0F10DD_g, auto6D0F10DD_u);
            if (auto6D0F10DD_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, auto6D0F10DD_var);
            UnitIssueOrder(auto6D0F10DD_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
        auto9B1BBFC3_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto9B1BBFC3_u = UnitGroupCount(auto9B1BBFC3_g, c_unitCountAll);
        for (;; auto9B1BBFC3_u -= 1) {
            auto9B1BBFC3_var = UnitGroupUnitFromEnd(auto9B1BBFC3_g, auto9B1BBFC3_u);
            if (auto9B1BBFC3_var == null) { break; }
            UnitGroupAdd(gv_majorAttackGroup, auto9B1BBFC3_var);
            UnitIssueOrder(auto9B1BBFC3_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
        }
    }

    gv_majorAttackGroupActive = 1;
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MajorAttackEarly_Init () {
    gt_MajorAttackEarly = TriggerCreate("gt_MajorAttackEarly_Func");
    TriggerAddEventUnitDied(gt_MajorAttackEarly, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: OverlordDropSpawn
//--------------------------------------------------------------------------------------------------
bool gt_OverlordDropSpawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto6FC2577A_g;
    int auto6FC2577A_u;
    unit auto6FC2577A_var;
    unitgroup autoEFBD0D36_g;
    int autoEFBD0D36_u;
    unit autoEFBD0D36_var;
    unitgroup auto2868B354_g;
    int auto2868B354_u;
    unit auto2868B354_var;
    unitgroup autoE8152B6C_g;
    int autoE8152B6C_u;
    unit autoE8152B6C_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1716816694));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1716816694));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 4));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1716816694));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    auto6FC2577A_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(56), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6FC2577A_u = UnitGroupCount(auto6FC2577A_g, c_unitCountAll);
    for (;; auto6FC2577A_u -= 1) {
        auto6FC2577A_var = UnitGroupUnitFromEnd(auto6FC2577A_g, auto6FC2577A_u);
        if (auto6FC2577A_var == null) { break; }
        UnitIssueOrder(auto6FC2577A_var, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), RegionRandomPoint(RegionFromId(72))), c_orderQueueReplace);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1514315863));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 4));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1514315863));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 4));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1514315863));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1514315863));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    autoEFBD0D36_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(57), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoEFBD0D36_u = UnitGroupCount(autoEFBD0D36_g, c_unitCountAll);
    for (;; autoEFBD0D36_u -= 1) {
        autoEFBD0D36_var = UnitGroupUnitFromEnd(autoEFBD0D36_g, autoEFBD0D36_u);
        if (autoEFBD0D36_var == null) { break; }
        UnitIssueOrder(autoEFBD0D36_var, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), RegionRandomPoint(RegionFromId(61))), c_orderQueueReplace);
    }
    Wait(7.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(730953385));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(730953385));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(730953385));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(2, 4));
    auto2868B354_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(55), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2868B354_u = UnitGroupCount(auto2868B354_g, c_unitCountAll);
    for (;; auto2868B354_u -= 1) {
        auto2868B354_var = UnitGroupUnitFromEnd(auto2868B354_g, auto2868B354_u);
        if (auto2868B354_var == null) { break; }
        UnitIssueOrder(auto2868B354_var, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), RegionRandomPoint(RegionFromId(61))), c_orderQueueReplace);
    }
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(355485499));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(355485499));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(2, 4));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(355485499));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 4));
    autoE8152B6C_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(55), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE8152B6C_u = UnitGroupCount(autoE8152B6C_g, c_unitCountAll);
    for (;; autoE8152B6C_u -= 1) {
        autoE8152B6C_var = UnitGroupUnitFromEnd(autoE8152B6C_g, autoE8152B6C_u);
        if (autoE8152B6C_var == null) { break; }
        UnitIssueOrder(autoE8152B6C_var, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), RegionRandomPoint(RegionFromId(61))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OverlordDropSpawn_Init () {
    gt_OverlordDropSpawn = TriggerCreate("gt_OverlordDropSpawn_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: OverlordDropSpawn 2
//--------------------------------------------------------------------------------------------------
bool gt_OverlordDropSpawn2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto4D7E1A58_g;
    int auto4D7E1A58_u;
    unit auto4D7E1A58_var;
    unitgroup auto3046D78B_g;
    int auto3046D78B_u;
    unit auto3046D78B_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(79)));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(79)));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(1, 4));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(79)));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    auto4D7E1A58_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(79), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto4D7E1A58_u = UnitGroupCount(auto4D7E1A58_g, c_unitCountAll);
    for (;; auto4D7E1A58_u -= 1) {
        auto4D7E1A58_var = UnitGroupUnitFromEnd(auto4D7E1A58_g, auto4D7E1A58_u);
        if (auto4D7E1A58_var == null) { break; }
        UnitIssueOrder(auto4D7E1A58_var, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), RegionRandomPoint(RegionFromId(72))), c_orderQueueReplace);
    }
    Wait(8.0, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(79)));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(79)));
    UnitCargoCreate(UnitLastCreated(), "Hydralisk", lib1926661B_gf_DifficultyValueInteger(2, 4));
    Wait(0.05, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(79)));
    UnitCargoCreate(UnitLastCreated(), "Zergling", lib1926661B_gf_DifficultyValueInteger(3, 8));
    Wait(0.05, c_timeGame);
    auto3046D78B_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(79), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3046D78B_u = UnitGroupCount(auto3046D78B_g, c_unitCountAll);
    for (;; auto3046D78B_u -= 1) {
        auto3046D78B_var = UnitGroupUnitFromEnd(auto3046D78B_g, auto3046D78B_u);
        if (auto3046D78B_var == null) { break; }
        UnitIssueOrder(auto3046D78B_var, OrderTargetingPoint(AbilityCommand("OverlordTransport", 2), RegionRandomPoint(RegionFromId(80))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OverlordDropSpawn2_Init () {
    gt_OverlordDropSpawn2 = TriggerCreate("gt_OverlordDropSpawn2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: OverlordDropAttack
//--------------------------------------------------------------------------------------------------
bool gt_OverlordDropAttack_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto94D38B95_g;
    int auto94D38B95_u;
    unit auto94D38B95_var;
    unitgroup auto75769340_g;
    int auto75769340_u;
    unit auto75769340_var;
    unitgroup auto511056E5_g;
    int auto511056E5_u;
    unit auto511056E5_var;

    // Conditions
    if (testConds) {
        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((!((UnitGetType(EventUnit()) == "Overlord"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto94D38B95_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(61), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto94D38B95_u = UnitGroupCount(auto94D38B95_g, c_unitCountAll);
    for (;; auto94D38B95_u -= 1) {
        auto94D38B95_var = UnitGroupUnitFromEnd(auto94D38B95_g, auto94D38B95_u);
        if (auto94D38B95_var == null) { break; }
        UnitIssueOrder(auto94D38B95_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(423996504)), c_orderQueueAddToEnd);
    }
    auto75769340_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(62), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto75769340_u = UnitGroupCount(auto75769340_g, c_unitCountAll);
    for (;; auto75769340_u -= 1) {
        auto75769340_var = UnitGroupUnitFromEnd(auto75769340_g, auto75769340_u);
        if (auto75769340_var == null) { break; }
        UnitIssueOrder(auto75769340_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(479294853)), c_orderQueueAddToEnd);
    }
    auto511056E5_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto511056E5_u = UnitGroupCount(auto511056E5_g, c_unitCountAll);
    for (;; auto511056E5_u -= 1) {
        auto511056E5_var = UnitGroupUnitFromEnd(auto511056E5_g, auto511056E5_u);
        if (auto511056E5_var == null) { break; }
        UnitIssueOrder(auto511056E5_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OverlordDropAttack_Init () {
    gt_OverlordDropAttack = TriggerCreate("gt_OverlordDropAttack_Func");
    TriggerAddEventTimePeriodic(gt_OverlordDropAttack, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: OverlordDropAttack 2
//--------------------------------------------------------------------------------------------------
bool gt_OverlordDropAttack2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto43A146BE_g;
    int auto43A146BE_u;
    unit auto43A146BE_var;
    unitgroup autoC81DA1F9_g;
    int autoC81DA1F9_u;
    unit autoC81DA1F9_var;
    unitgroup auto23B29AD4_g;
    int auto23B29AD4_u;
    unit auto23B29AD4_var;

    // Conditions
    if (testConds) {
        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((!((UnitGetType(EventUnit()) == "Overlord"))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto43A146BE_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(61), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto43A146BE_u = UnitGroupCount(auto43A146BE_g, c_unitCountAll);
    for (;; auto43A146BE_u -= 1) {
        auto43A146BE_var = UnitGroupUnitFromEnd(auto43A146BE_g, auto43A146BE_u);
        if (auto43A146BE_var == null) { break; }
        UnitIssueOrder(auto43A146BE_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(423996504)), c_orderQueueAddToEnd);
    }
    autoC81DA1F9_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(62), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    autoC81DA1F9_u = UnitGroupCount(autoC81DA1F9_g, c_unitCountAll);
    for (;; autoC81DA1F9_u -= 1) {
        autoC81DA1F9_var = UnitGroupUnitFromEnd(autoC81DA1F9_g, autoC81DA1F9_u);
        if (autoC81DA1F9_var == null) { break; }
        UnitIssueOrder(autoC81DA1F9_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(479294853)), c_orderQueueAddToEnd);
    }
    auto23B29AD4_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterAir) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
    auto23B29AD4_u = UnitGroupCount(auto23B29AD4_g, c_unitCountAll);
    for (;; auto23B29AD4_u -= 1) {
        auto23B29AD4_var = UnitGroupUnitFromEnd(auto23B29AD4_g, auto23B29AD4_u);
        if (auto23B29AD4_var == null) { break; }
        UnitIssueOrder(auto23B29AD4_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OverlordDropAttack2_Init () {
    gt_OverlordDropAttack2 = TriggerCreate("gt_OverlordDropAttack2_Func");
    TriggerAddEventTimePeriodic(gt_OverlordDropAttack2, 0.25, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogPatrol5
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogPatrol5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto3534C4C0_g;
    int auto3534C4C0_u;
    unit auto3534C4C0_var;
    unitgroup auto3BE62F45_g;
    int auto3BE62F45_u;
    unit auto3BE62F45_var;
    unitgroup auto40FC7950_g;
    int auto40FC7950_u;
    unit auto40FC7950_var;
    unitgroup auto12EC229E_g;
    int auto12EC229E_u;
    unit auto12EC229E_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 1))) {
            return false;
        }

        if (!((gv_flashFogTimerActive == 5))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(5, 10), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(5, 11), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 12), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(9, 18), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(33200154));
    auto3534C4C0_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3534C4C0_u = UnitGroupCount(auto3534C4C0_g, c_unitCountAll);
    for (;; auto3534C4C0_u -= 1) {
        auto3534C4C0_var = UnitGroupUnitFromEnd(auto3534C4C0_g, auto3534C4C0_u);
        if (auto3534C4C0_var == null) { break; }
        UnitIssueOrder(auto3534C4C0_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1047175700)), c_orderQueueReplace);
    }
    auto3BE62F45_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3BE62F45_u = UnitGroupCount(auto3BE62F45_g, c_unitCountAll);
    for (;; auto3BE62F45_u -= 1) {
        auto3BE62F45_var = UnitGroupUnitFromEnd(auto3BE62F45_g, auto3BE62F45_u);
        if (auto3BE62F45_var == null) { break; }
        UnitIssueOrder(auto3BE62F45_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(725804337)), c_orderQueueReplace);
    }
    auto40FC7950_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto40FC7950_u = UnitGroupCount(auto40FC7950_g, c_unitCountAll);
    for (;; auto40FC7950_u -= 1) {
        auto40FC7950_var = UnitGroupUnitFromEnd(auto40FC7950_g, auto40FC7950_u);
        if (auto40FC7950_var == null) { break; }
        UnitIssueOrder(auto40FC7950_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(534914184)), c_orderQueueReplace);
    }
    auto12EC229E_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto12EC229E_u = UnitGroupCount(auto12EC229E_g, c_unitCountAll);
    for (;; auto12EC229E_u -= 1) {
        auto12EC229E_var = UnitGroupUnitFromEnd(auto12EC229E_g, auto12EC229E_u);
        if (auto12EC229E_var == null) { break; }
        UnitIssueOrder(auto12EC229E_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogPatrol5_Init () {
    gt_FlashFogPatrol5 = TriggerCreate("gt_FlashFogPatrol5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogPatrol6
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogPatrol6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto4599B11D_g;
    int auto4599B11D_u;
    unit auto4599B11D_var;
    unitgroup autoC2BDFD52_g;
    int autoC2BDFD52_u;
    unit autoC2BDFD52_var;
    unitgroup auto560DC36A_g;
    int auto560DC36A_u;
    unit auto560DC36A_var;
    unitgroup autoDBF8B1A8_g;
    int autoDBF8B1A8_u;
    unit autoDBF8B1A8_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 1))) {
            return false;
        }

        if (!((gv_flashFogTimerActive == 7))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(11, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(11, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 8), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(4, 8), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(4, 9), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    auto4599B11D_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto4599B11D_u = UnitGroupCount(auto4599B11D_g, c_unitCountAll);
    for (;; auto4599B11D_u -= 1) {
        auto4599B11D_var = UnitGroupUnitFromEnd(auto4599B11D_g, auto4599B11D_u);
        if (auto4599B11D_var == null) { break; }
        UnitIssueOrder(auto4599B11D_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1047175700)), c_orderQueueReplace);
    }
    autoC2BDFD52_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC2BDFD52_u = UnitGroupCount(autoC2BDFD52_g, c_unitCountAll);
    for (;; autoC2BDFD52_u -= 1) {
        autoC2BDFD52_var = UnitGroupUnitFromEnd(autoC2BDFD52_g, autoC2BDFD52_u);
        if (autoC2BDFD52_var == null) { break; }
        UnitIssueOrder(autoC2BDFD52_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(725804337)), c_orderQueueReplace);
    }
    auto560DC36A_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto560DC36A_u = UnitGroupCount(auto560DC36A_g, c_unitCountAll);
    for (;; auto560DC36A_u -= 1) {
        auto560DC36A_var = UnitGroupUnitFromEnd(auto560DC36A_g, auto560DC36A_u);
        if (auto560DC36A_var == null) { break; }
        UnitIssueOrder(auto560DC36A_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(534914184)), c_orderQueueReplace);
    }
    autoDBF8B1A8_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDBF8B1A8_u = UnitGroupCount(autoDBF8B1A8_g, c_unitCountAll);
    for (;; autoDBF8B1A8_u -= 1) {
        autoDBF8B1A8_var = UnitGroupUnitFromEnd(autoDBF8B1A8_g, autoDBF8B1A8_u);
        if (autoDBF8B1A8_var == null) { break; }
        UnitIssueOrder(autoDBF8B1A8_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogPatrol6_Init () {
    gt_FlashFogPatrol6 = TriggerCreate("gt_FlashFogPatrol6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogPatrol7
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogPatrol7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto8508439D_g;
    int auto8508439D_u;
    unit auto8508439D_var;
    unitgroup auto4467ADBF_g;
    int auto4467ADBF_u;
    unit auto4467ADBF_var;
    unitgroup autoC01A59CE_g;
    int autoC01A59CE_u;
    unit autoC01A59CE_var;
    unitgroup auto1A9528E4_g;
    int auto1A9528E4_u;
    unit auto1A9528E4_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 1))) {
            return false;
        }

        if (!((gv_flashFogTimerActive == 9))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(10, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(10, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(6, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(33200154));
    Wait(1.0, c_timeGame);
    auto8508439D_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto8508439D_u = UnitGroupCount(auto8508439D_g, c_unitCountAll);
    for (;; auto8508439D_u -= 1) {
        auto8508439D_var = UnitGroupUnitFromEnd(auto8508439D_g, auto8508439D_u);
        if (auto8508439D_var == null) { break; }
        UnitIssueOrder(auto8508439D_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1047175700)), c_orderQueueReplace);
    }
    auto4467ADBF_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto4467ADBF_u = UnitGroupCount(auto4467ADBF_g, c_unitCountAll);
    for (;; auto4467ADBF_u -= 1) {
        auto4467ADBF_var = UnitGroupUnitFromEnd(auto4467ADBF_g, auto4467ADBF_u);
        if (auto4467ADBF_var == null) { break; }
        UnitIssueOrder(auto4467ADBF_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(725804337)), c_orderQueueReplace);
    }
    autoC01A59CE_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC01A59CE_u = UnitGroupCount(autoC01A59CE_g, c_unitCountAll);
    for (;; autoC01A59CE_u -= 1) {
        autoC01A59CE_var = UnitGroupUnitFromEnd(autoC01A59CE_g, autoC01A59CE_u);
        if (autoC01A59CE_var == null) { break; }
        UnitIssueOrder(autoC01A59CE_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(534914184)), c_orderQueueReplace);
    }
    auto1A9528E4_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1A9528E4_u = UnitGroupCount(auto1A9528E4_g, c_unitCountAll);
    for (;; auto1A9528E4_u -= 1) {
        auto1A9528E4_var = UnitGroupUnitFromEnd(auto1A9528E4_g, auto1A9528E4_u);
        if (auto1A9528E4_var == null) { break; }
        UnitIssueOrder(auto1A9528E4_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    TriggerExecute(gt_OverlordDropSpawn, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogPatrol7_Init () {
    gt_FlashFogPatrol7 = TriggerCreate("gt_FlashFogPatrol7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogPatrol8
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogPatrol8_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto31449A12_g;
    int auto31449A12_u;
    unit auto31449A12_var;
    unitgroup auto05CAA692_g;
    int auto05CAA692_u;
    unit auto05CAA692_var;
    unitgroup auto5ABF8D6D_g;
    int auto5ABF8D6D_u;
    unit auto5ABF8D6D_var;
    unitgroup autoC42DB253_g;
    int autoC42DB253_u;
    unit autoC42DB253_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 1))) {
            return false;
        }

        if (!((gv_flashFogTimerActive == 11))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(10, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(10, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(33200154));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(33200154));
    auto31449A12_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto31449A12_u = UnitGroupCount(auto31449A12_g, c_unitCountAll);
    for (;; auto31449A12_u -= 1) {
        auto31449A12_var = UnitGroupUnitFromEnd(auto31449A12_g, auto31449A12_u);
        if (auto31449A12_var == null) { break; }
        UnitIssueOrder(auto31449A12_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(725804337)), c_orderQueueReplace);
    }
    auto05CAA692_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto05CAA692_u = UnitGroupCount(auto05CAA692_g, c_unitCountAll);
    for (;; auto05CAA692_u -= 1) {
        auto05CAA692_var = UnitGroupUnitFromEnd(auto05CAA692_g, auto05CAA692_u);
        if (auto05CAA692_var == null) { break; }
        UnitIssueOrder(auto05CAA692_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1047175700)), c_orderQueueReplace);
    }
    auto5ABF8D6D_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5ABF8D6D_u = UnitGroupCount(auto5ABF8D6D_g, c_unitCountAll);
    for (;; auto5ABF8D6D_u -= 1) {
        auto5ABF8D6D_var = UnitGroupUnitFromEnd(auto5ABF8D6D_g, auto5ABF8D6D_u);
        if (auto5ABF8D6D_var == null) { break; }
        UnitIssueOrder(auto5ABF8D6D_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(534914184)), c_orderQueueReplace);
    }
    autoC42DB253_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC42DB253_u = UnitGroupCount(autoC42DB253_g, c_unitCountAll);
    for (;; autoC42DB253_u -= 1) {
        autoC42DB253_var = UnitGroupUnitFromEnd(autoC42DB253_g, autoC42DB253_u);
        if (autoC42DB253_var == null) { break; }
        UnitIssueOrder(autoC42DB253_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogPatrol8_Init () {
    gt_FlashFogPatrol8 = TriggerCreate("gt_FlashFogPatrol8_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogPatrol9
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogPatrol9_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto40852475_g;
    int auto40852475_u;
    unit auto40852475_var;
    unitgroup autoF25F5EAD_g;
    int autoF25F5EAD_u;
    unit autoF25F5EAD_var;
    unitgroup auto118AF934_g;
    int auto118AF934_u;
    unit auto118AF934_var;
    unitgroup auto768A7DAA_g;
    int auto768A7DAA_u;
    unit auto768A7DAA_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 1))) {
            return false;
        }

        if (!((gv_flashFogTimerActive == 13))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(579186630));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1410410969));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1551280200));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(10, 22), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1438391224));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(7, 15), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1239249036));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 6), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1246834766));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(2, 4), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(10, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1602717063));
    Wait(0.2, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(3, 7), "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(33200154));
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(8, 20), "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(33200154));
    auto40852475_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(49), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto40852475_u = UnitGroupCount(auto40852475_g, c_unitCountAll);
    for (;; auto40852475_u -= 1) {
        auto40852475_var = UnitGroupUnitFromEnd(auto40852475_g, auto40852475_u);
        if (auto40852475_var == null) { break; }
        UnitIssueOrder(auto40852475_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(725804337)), c_orderQueueReplace);
    }
    autoF25F5EAD_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(48), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF25F5EAD_u = UnitGroupCount(autoF25F5EAD_g, c_unitCountAll);
    for (;; autoF25F5EAD_u -= 1) {
        autoF25F5EAD_var = UnitGroupUnitFromEnd(autoF25F5EAD_g, autoF25F5EAD_u);
        if (autoF25F5EAD_var == null) { break; }
        UnitIssueOrder(autoF25F5EAD_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1047175700)), c_orderQueueReplace);
    }
    auto118AF934_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(50), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto118AF934_u = UnitGroupCount(auto118AF934_g, c_unitCountAll);
    for (;; auto118AF934_u -= 1) {
        auto118AF934_var = UnitGroupUnitFromEnd(auto118AF934_g, auto118AF934_u);
        if (auto118AF934_var == null) { break; }
        UnitIssueOrder(auto118AF934_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(534914184)), c_orderQueueReplace);
    }
    auto768A7DAA_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(51), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto768A7DAA_u = UnitGroupCount(auto768A7DAA_g, c_unitCountAll);
    for (;; auto768A7DAA_u -= 1) {
        auto768A7DAA_var = UnitGroupUnitFromEnd(auto768A7DAA_g, auto768A7DAA_u);
        if (auto768A7DAA_var == null) { break; }
        UnitIssueOrder(auto768A7DAA_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(859171173)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogPatrol9_Init () {
    gt_FlashFogPatrol9 = TriggerCreate("gt_FlashFogPatrol9_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogInitialAlert
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogInitialAlert_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!(((gv_routhe6 == 1) && (gv_flashFogTimerActive == 0) && (gv_lancerFog == 1)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4DefNet2a", -1), StringExternal("Param/Value/3E46B5F9"), StringExternal("Param/Value/2DBB0B90"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4DefNet2b", -1), StringExternal("Param/Value/9018B30D"), StringExternal("Param/Value/60E4E7D8"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    TriggerExecute(gt_FlashFogTimer, true, false);
    TriggerExecute(gt_TipFlashFog, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogInitialAlert_Init () {
    gt_FlashFogInitialAlert = TriggerCreate("gt_FlashFogInitialAlert_Func");
    TriggerAddEventUnitRegion(gt_FlashFogInitialAlert, null, RegionFromId(19), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_flashFogTimerActive = 1;
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_FlashFogEvent1, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer_Init () {
    gt_FlashFogTimer = TriggerCreate("gt_FlashFogTimer_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent1
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    TriggerExecute(gt_FlashFogPatrol5, false, false);
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    Wait(70.0, c_timeGame);
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    gv_flashFogTimerActive = 2;
    TriggerExecute(gt_FlashFogTimer2, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent1_Init () {
    gt_FlashFogEvent1 = TriggerCreate("gt_FlashFogEvent1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer 2
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(180.0, c_timeGame);
    gv_flashFogTimerActive = 3;
    TriggerExecute(gt_FlashFogEvent2, true, false);
    TriggerStop(gt_FlashFogTimer2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer2_Init () {
    gt_FlashFogTimer2 = TriggerCreate("gt_FlashFogTimer2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent2
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    Wait(0.5, c_timeGame);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic323", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00039", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4DefNet4a", -1), StringExternal("Param/Value/CB632A68"), StringExternal("Param/Value/855A66D8"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4DefNet4b", -1), StringExternal("Param/Value/7D22FF38"), StringExternal("Param/Value/0CA027B4"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_FlashFogPatrol5, false, false);
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    Wait(120.0, c_timeGame);
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00041", null, true, null, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(0.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_flashFogTimerActive = 4;
    TriggerExecute(gt_FlashFogTimer3, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent2_Init () {
    gt_FlashFogEvent2 = TriggerCreate("gt_FlashFogEvent2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer 3
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 4))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(220.0, c_timeGame);
    gv_flashFogTimerActive = 5;
    TriggerExecute(gt_FlashFogEvent3, true, false);
    TriggerStop(gt_FlashFogTimer3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer3_Init () {
    gt_FlashFogTimer3 = TriggerCreate("gt_FlashFogTimer3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent3
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 5))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    Wait(0.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic323", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/F5997A1B"));
    Wait(7.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    TriggerExecute(gt_FlashFogPatrol5, true, false);
    TriggerExecute(gt_OverlordDropSpawn2, true, false);
    Wait(120.0, c_timeGame);
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    Wait(0.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_flashFogTimerActive = 6;
    TriggerExecute(gt_FlashFogTimer4, true, false);
    TriggerStop(gt_FlashFogEvent3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent3_Init () {
    gt_FlashFogEvent3 = TriggerCreate("gt_FlashFogEvent3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer 4
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 6))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(180.0, c_timeGame);
    gv_flashFogTimerActive = 7;
    gv_flashFogTimerActive = 9;
    gv__4thFogReached = true;
    TriggerExecute(gt_FlashFogEvent4, true, false);
    TechTreeUpgradeAddLevel(gv_pLAYER_03_ROACHES_HOSTILE, "ZergFlyerArmorsLevel1", 1);
    TechTreeUpgradeAddLevel(gv_pLAYER_03_ROACHES_HOSTILE, "ZergGroundArmorsLevel1", 1);
    TechTreeUpgradeAddLevel(gv_pLAYER_03_ROACHES_HOSTILE, "ZergFlyerWeaponsLevel1", 1);
    TechTreeUpgradeAddLevel(gv_pLAYER_03_ROACHES_HOSTILE, "ZergMeleeWeaponsLevel1", 1);
    TechTreeUpgradeAddLevel(gv_pLAYER_03_ROACHES_HOSTILE, "ZergMissileWeaponsLevel1", 1);
    TriggerStop(gt_FlashFogTimer4);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer4_Init () {
    gt_FlashFogTimer4 = TriggerCreate("gt_FlashFogTimer4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent4
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 7))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    Wait(0.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic323", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/53E3520E"));
    Wait(7.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    TriggerExecute(gt_FlashFogPatrol6, true, false);
    TriggerExecute(gt_OverlordDropSpawn, true, false);
    Wait(180.0, c_timeGame);
    TriggerExecute(gt_MutaAttack1, true, false);
    TriggerExecute(gt_UltraAttack1, true, false);
    lib1926661B_gf_FlashCheckpointReminder();
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    Wait(0.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_flashFogTimerActive = 8;
    TriggerExecute(gt_FlashFogTimer5, true, false);
    TriggerStop(gt_FlashFogEvent4);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent4_Init () {
    gt_FlashFogEvent4 = TriggerCreate("gt_FlashFogEvent4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MutaAttack1
//--------------------------------------------------------------------------------------------------
bool gt_MutaAttack1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto0CE75CE8_n;
    int auto0CE75CE8_i;

    // Conditions
    if (testConds) {
        if (!((gv_mutasChosen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0CE75CE8_n = lib1926661B_gf_DifficultyValueInteger(7, 19);
    for (auto0CE75CE8_i = 1; auto0CE75CE8_i <= auto0CE75CE8_n; auto0CE75CE8_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Mutalisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(22)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(46))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), gv_colonelGraves), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.9, 3.3), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutaAttack1_Init () {
    gt_MutaAttack1 = TriggerCreate("gt_MutaAttack1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UltraAttack1
//--------------------------------------------------------------------------------------------------
bool gt_UltraAttack1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int auto9BEA7B74_n;
    int auto9BEA7B74_i;
    unitgroup auto9966D209_g;
    int auto9966D209_u;
    unit auto9966D209_var;

    // Conditions
    if (testConds) {
        if (!((gv_ultrasChosen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto9BEA7B74_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
    for (auto9BEA7B74_i = 1; auto9BEA7B74_i <= auto9BEA7B74_n; auto9BEA7B74_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UltraliskBurrowed", 0, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(25)));
        UnitGroupAdd(gv_ultrasAttackGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
        auto9966D209_g = gv_ultrasAttackGroup;
        auto9966D209_u = UnitGroupCount(auto9966D209_g, c_unitCountAll);
        for (;; auto9966D209_u -= 1) {
            auto9966D209_var = UnitGroupUnitFromEnd(auto9966D209_g, auto9966D209_u);
            if (auto9966D209_var == null) { break; }
            UnitIssueOrder(auto9966D209_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(46))), c_orderQueueReplace);
            UnitIssueOrder(auto9966D209_var, OrderTargetingUnit(AbilityCommand("attack", 0), gv_colonelGraves), c_orderQueueAddToEnd);
        }
        Wait(RandomFixed(1.3, 2.4), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraAttack1_Init () {
    gt_UltraAttack1 = TriggerCreate("gt_UltraAttack1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer 5
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 8))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(160.0, c_timeGame);
    TriggerExecute(gt_FlashFogEvent5, true, false);
    TriggerStop(gt_FlashFogTimer5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer5_Init () {
    gt_FlashFogTimer5 = TriggerCreate("gt_FlashFogTimer5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent5
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 9))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    Wait(0.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic323", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/DAAF3650"));
    Wait(7.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    TriggerExecute(gt_FlashFogPatrol7, true, false);
    Wait(60.0, c_timeGame);
    TriggerExecute(gt_MajorAttack, true, false);
    Wait(120.0, c_timeGame);
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    Wait(0.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_flashFogTimerActive = 10;
    TriggerExecute(gt_FlashFogTimer6, true, false);
    TriggerStop(gt_FlashFogEvent5);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent5_Init () {
    gt_FlashFogEvent5 = TriggerCreate("gt_FlashFogEvent5_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer 6
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 10))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(230.0, c_timeGame);
    gv_flashFogTimerActive = 11;
    TriggerExecute(gt_FlashFogEvent6, true, false);
    TriggerStop(gt_FlashFogTimer6);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer6_Init () {
    gt_FlashFogTimer6 = TriggerCreate("gt_FlashFogTimer6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent6
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent6_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 11))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    Wait(0.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic323", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/4D010688"));
    Wait(7.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    TriggerExecute(gt_FlashFogPatrol8, true, false);
    TriggerExecute(gt_OverlordDropSpawn2, true, false);
    Wait(120.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    TriggerExecute(gt_MutaAttack2, true, false);
    TriggerExecute(gt_UltraAttack2, true, false);
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    Wait(0.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_flashFogTimerActive = 12;
    TriggerExecute(gt_FlashFogTimer7, true, false);
    TriggerStop(gt_FlashFogEvent6);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent6_Init () {
    gt_FlashFogEvent6 = TriggerCreate("gt_FlashFogEvent6_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MutaAttack2
//--------------------------------------------------------------------------------------------------
bool gt_MutaAttack2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoDDFE3BBD_n;
    int autoDDFE3BBD_i;

    // Conditions
    if (testConds) {
        if (!((gv_mutasChosen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoDDFE3BBD_n = lib1926661B_gf_DifficultyValueInteger(15, 33);
    for (autoDDFE3BBD_i = 1; autoDDFE3BBD_i <= autoDDFE3BBD_n; autoDDFE3BBD_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Mutalisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(24)));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(46))), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingUnit(AbilityCommand("attack", 0), gv_colonelGraves), c_orderQueueAddToEnd);
        Wait(RandomFixed(1.2, 1.9), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutaAttack2_Init () {
    gt_MutaAttack2 = TriggerCreate("gt_MutaAttack2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UltraAttack2
//--------------------------------------------------------------------------------------------------
bool gt_UltraAttack2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    int autoCA5BAC16_n;
    int autoCA5BAC16_i;
    unitgroup auto77730C47_g;
    int auto77730C47_u;
    unit auto77730C47_var;

    // Conditions
    if (testConds) {
        if (!((gv_ultrasChosen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoCA5BAC16_n = lib1926661B_gf_DifficultyValueInteger(7, 17);
    for (autoCA5BAC16_i = 1; autoCA5BAC16_i <= autoCA5BAC16_n; autoCA5BAC16_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UltraliskBurrowed", 0, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(25)));
        UnitGroupAdd(gv_ultrasAttackGroup, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
        auto77730C47_g = gv_ultrasAttackGroup;
        auto77730C47_u = UnitGroupCount(auto77730C47_g, c_unitCountAll);
        for (;; auto77730C47_u -= 1) {
            auto77730C47_var = UnitGroupUnitFromEnd(auto77730C47_g, auto77730C47_u);
            if (auto77730C47_var == null) { break; }
            UnitIssueOrder(auto77730C47_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(46))), c_orderQueueReplace);
            UnitIssueOrder(auto77730C47_var, OrderTargetingUnit(AbilityCommand("attack", 0), gv_colonelGraves), c_orderQueueAddToEnd);
        }
        Wait(RandomFixed(1.3, 2.4), c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltraAttack2_Init () {
    gt_UltraAttack2 = TriggerCreate("gt_UltraAttack2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogTimer 7
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogTimer7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 12))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(150.0, c_timeGame);
    gv_flashFogTimerActive = 13;
    TriggerExecute(gt_FlashFogEvent7, true, false);
    TriggerStop(gt_FlashFogTimer7);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogTimer7_Init () {
    gt_FlashFogTimer7 = TriggerCreate("gt_FlashFogTimer7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogEvent7
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogEvent7_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogTimerActive == 13))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    Wait(0.5, c_timeGame);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic323", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/5FB808C2"));
    Wait(7.0, c_timeReal);
    UIClearMessages(PlayerGroupAll(), c_messageAreaAll);
    FogSetDensityOverTime(10.0, 30.0);
    Wait(30.0, c_timeReal);
    gv_flashFogThick = 1;
    Wait(0.5, c_timeGame);
    TriggerExecute(gt_FlashFogofWarInvulExisting, true, false);
    TriggerExecute(gt_FlashFogPatrol9, true, false);
    Wait(150.0, c_timeGame);
    gv_flashFogThick = 0;
    TriggerExecute(gt_FlashFogofWarRecedes, true, false);
    FogSetDensityOverTime(1.0, 10.0);
    Wait(0.5, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    gv_flashFogTimerActive = 4;
    TriggerExecute(gt_FlashFogTimer3, true, false);
    TriggerStop(gt_FlashFogEvent7);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogEvent7_Init () {
    gt_FlashFogEvent7 = TriggerCreate("gt_FlashFogEvent7_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: FlashFogofWar Recedes
//--------------------------------------------------------------------------------------------------
bool gt_FlashFogofWarRecedes_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC455095E_g;
    int autoC455095E_u;
    unit autoC455095E_var;
    unitgroup auto43933365_g;
    int auto43933365_u;
    unit auto43933365_var;

    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoC455095E_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoC455095E_u = UnitGroupCount(autoC455095E_g, c_unitCountAll);
    for (;; autoC455095E_u -= 1) {
        autoC455095E_var = UnitGroupUnitFromEnd(autoC455095E_g, autoC455095E_u);
        if (autoC455095E_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoC455095E_var, false);
        UnitSetState(autoC455095E_var, c_unitStateHighlightable, true);
        UnitSetState(autoC455095E_var, c_unitStateSelectable, true);
        UnitSetState(autoC455095E_var, c_unitStateTooltipable, true);
        UnitSetState(autoC455095E_var, c_unitStateCursorable, true);
        UnitSetState(autoC455095E_var, c_unitStateTargetable, true);
    }
    auto43933365_g = gv_flashFogZergGroup;
    auto43933365_u = UnitGroupCount(auto43933365_g, c_unitCountAll);
    for (;; auto43933365_u -= 1) {
        auto43933365_var = UnitGroupUnitFromEnd(auto43933365_g, auto43933365_u);
        if (auto43933365_var == null) { break; }
        UnitGroupRemove(gv_flashFogZergGroup, auto43933365_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FlashFogofWarRecedes_Init () {
    gt_FlashFogofWarRecedes = TriggerCreate("gt_FlashFogofWarRecedes_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Section Gameplay Start
//--------------------------------------------------------------------------------------------------
bool gt_Z1SectionGameplayStart_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(600184692), 0.0, -1, 10, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(1293745785), StringExternal("Param/Value/B8162092"));
    PingSetVisible(PingLastCreated(), true);
    ObjectiveCreate(StringExternal("Param/Value/BBA80BF3"), StringToText(""), c_objectiveStateActive, true);
    gv_z1DenObjective = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    ObjectiveCreate(StringExternal("Param/Value/7D8D11AD"), StringToText(""), c_objectiveStateActive, true);
    gv_z1MustSurviveObjective = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    TriggerExecute(gt_TipZ1UnitQ, true, false);
    TriggerExecute(gt_TipZ1ShieldQ, true, false);
    TriggerExecute(gt_TipZ1NitrogenQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1SectionGameplayStart_Init () {
    gt_Z1SectionGameplayStart = TriggerCreate("gt_Z1SectionGameplayStart_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Transmission Sunken Colony Spotted
//--------------------------------------------------------------------------------------------------
bool gt_Z1TransmissionSunkenColonySpotted_Func (bool testConds, bool runActions) {
    // Variable Declarations
    actor lv_reticle;
    int lv_textTag;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_textTag = c_textTagNone;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MinimapPing(PlayerGroupAll(), PointFromId(1615245233), 2.0, Color(100.00, 0.00, 0.00));
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranEnemy, libVCMI_ge_CampaginReticleSize_Small, StringExternal("Param/Value/5703024F"), UnitFromId(821200120), "Ref_Center");
    lv_reticle = libNtve_gf_ActorLastCreated();
    lv_textTag = TextTagLastCreated();
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/B0E981A8"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00009", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerQueueExit();
    while (!((UnitIsAlive(UnitFromId(821200120)) == false))) {
        Wait(1.0, c_timeGame);
    }
    ActorScopeKill(ActorScopeFromActor(lv_reticle));
    TextTagDestroy(lv_textTag);
    gv_z1SunkenColonyLines = 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1TransmissionSunkenColonySpotted_Init () {
    gt_Z1TransmissionSunkenColonySpotted = TriggerCreate("gt_Z1TransmissionSunkenColonySpotted_Func");
    TriggerAddEventUnitRegion(gt_Z1TransmissionSunkenColonySpotted, null, RegionFromId(10), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Zerg Unburrow
//--------------------------------------------------------------------------------------------------
bool gt_Z1ZergUnburrow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFE60E09B_g;
    int autoFE60E09B_u;
    unit autoFE60E09B_var;
    unitgroup autoD929A4FB_g;
    int autoD929A4FB_u;
    unit autoD929A4FB_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    autoFE60E09B_g = gv_z1ZergGroup;
    autoFE60E09B_u = UnitGroupCount(autoFE60E09B_g, c_unitCountAll);
    for (;; autoFE60E09B_u -= 1) {
        autoFE60E09B_var = UnitGroupUnitFromEnd(autoFE60E09B_g, autoFE60E09B_u);
        if (autoFE60E09B_var == null) { break; }
        UnitSetOwner(autoFE60E09B_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(autoFE60E09B_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoFE60E09B_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoFE60E09B_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1170764190)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
    }
    Wait(10.0, c_timeGame);
    autoD929A4FB_g = gv_z1ZergGroup2;
    autoD929A4FB_u = UnitGroupCount(autoD929A4FB_g, c_unitCountAll);
    for (;; autoD929A4FB_u -= 1) {
        autoD929A4FB_var = UnitGroupUnitFromEnd(autoD929A4FB_g, autoD929A4FB_u);
        if (autoD929A4FB_var == null) { break; }
        UnitSetOwner(autoD929A4FB_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(autoD929A4FB_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(gv_introZ1, c_unitCountAlive))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1ZergUnburrow_Init () {
    gt_Z1ZergUnburrow = TriggerCreate("gt_Z1ZergUnburrow_Func");
    TriggerAddEventUnitRegion(gt_Z1ZergUnburrow, null, RegionFromId(5), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Zerg Unburrow2
//--------------------------------------------------------------------------------------------------
bool gt_Z1ZergUnburrow2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9EDC5384_g;
    int auto9EDC5384_u;
    unit auto9EDC5384_var;
    unitgroup autoF3C00BDA_g;
    int autoF3C00BDA_u;
    unit autoF3C00BDA_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto9EDC5384_g = gv_z1ZergGroup3;
    auto9EDC5384_u = UnitGroupCount(auto9EDC5384_g, c_unitCountAll);
    for (;; auto9EDC5384_u -= 1) {
        auto9EDC5384_var = UnitGroupUnitFromEnd(auto9EDC5384_g, auto9EDC5384_u);
        if (auto9EDC5384_var == null) { break; }
        UnitSetOwner(auto9EDC5384_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(auto9EDC5384_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
        UnitIssueOrder(auto9EDC5384_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(gv_introZ1, c_unitCountAlive))), c_orderQueueReplace);
    }
    Wait(3.0, c_timeGame);
    autoF3C00BDA_g = gv_z1ZergGroup4;
    autoF3C00BDA_u = UnitGroupCount(autoF3C00BDA_g, c_unitCountAll);
    for (;; autoF3C00BDA_u -= 1) {
        autoF3C00BDA_var = UnitGroupUnitFromEnd(autoF3C00BDA_g, autoF3C00BDA_u);
        if (autoF3C00BDA_var == null) { break; }
        UnitSetOwner(autoF3C00BDA_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(autoF3C00BDA_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
        UnitIssueOrder(autoF3C00BDA_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitGroupRandomUnit(gv_introZ1, c_unitCountAlive))), c_orderQueueReplace);
    }
    TriggerStop(gt_Z1ZergUnburrow2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1ZergUnburrow2_Init () {
    gt_Z1ZergUnburrow2 = TriggerCreate("gt_Z1ZergUnburrow2_Func");
    TriggerAddEventUnitRegion(gt_Z1ZergUnburrow2, null, RegionFromId(8), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Zerg Unburrow3
//--------------------------------------------------------------------------------------------------
bool gt_Z1ZergUnburrow3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto25846E99_n = 16;
    int auto25846E99_i;
    unitgroup auto6D58F901_g;
    int auto6D58F901_u;
    unit auto6D58F901_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "SunkenColony"))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    for (auto25846E99_i = 1; auto25846E99_i <= auto25846E99_n; auto25846E99_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "ZerglingBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_03_ROACHES_HOSTILE, RegionRandomPoint(RegionFromId(31)));
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        Wait(0.4, c_timeGame);
        auto6D58F901_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(31), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto6D58F901_u = UnitGroupCount(auto6D58F901_g, c_unitCountAll);
        for (;; auto6D58F901_u -= 1) {
            auto6D58F901_var = UnitGroupUnitFromEnd(auto6D58F901_g, auto6D58F901_u);
            if (auto6D58F901_var == null) { break; }
            UnitIssueOrder(auto6D58F901_var, OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1170764190)), c_orderQueueReplace);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1ZergUnburrow3_Init () {
    gt_Z1ZergUnburrow3 = TriggerCreate("gt_Z1ZergUnburrow3_Func");
    TriggerAddEventUnitDied(gt_Z1ZergUnburrow3, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Ultralisk Unburrow
//--------------------------------------------------------------------------------------------------
bool gt_Z1UltraliskUnburrow_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_ultralisk;

    // Automatic Variable Declarations
    unitgroup auto8765C9AF_g;
    int auto8765C9AF_u;
    unit auto8765C9AF_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "UltraliskBurrowed", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1247080744));
    lv_ultralisk = UnitLastCreated();
    UnitGroupAdd(gv_z1ZergGroup, UnitLastCreated());
    auto8765C9AF_g = gv_z1ZergGroup;
    auto8765C9AF_u = UnitGroupCount(auto8765C9AF_g, c_unitCountAll);
    for (;; auto8765C9AF_u -= 1) {
        auto8765C9AF_var = UnitGroupUnitFromEnd(auto8765C9AF_g, auto8765C9AF_u);
        if (auto8765C9AF_var == null) { break; }
        UnitIssueOrder(auto8765C9AF_var, Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
        UnitIssueOrder(auto8765C9AF_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGroupCenterOfGroup(gv_introZ1)), c_orderQueueReplace);
    }
    do {
        UnitIssueOrder(lv_ultralisk, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGroupCenterOfGroup(gv_introZ1)), c_orderQueueReplace);
        Wait(2.0, c_timeGame);
    }while ((UnitIsAlive(lv_ultralisk) == true));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1UltraliskUnburrow_Init () {
    gt_Z1UltraliskUnburrow = TriggerCreate("gt_Z1UltraliskUnburrow_Func");
    TriggerAddEventUnitRegion(gt_Z1UltraliskUnburrow, null, RegionFromId(87), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Transmission - Sunken Colony Spotted 2
//--------------------------------------------------------------------------------------------------
bool gt_Z1TransmissionSunkenColonySpotted2_Func (bool testConds, bool runActions) {
    // Variable Declarations
    actor lv_reticle;
    int lv_textTag;

    // Automatic Variable Declarations
    unitgroup autoC929E90E_g;
    int autoC929E90E_u;
    unit autoC929E90E_var;

    // Variable Initialization
    lv_textTag = c_textTagNone;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    MinimapPing(PlayerGroupAll(), PointFromId(847639465), 2.0, Color(100.00, 0.00, 0.00));
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranEnemy, libVCMI_ge_CampaginReticleSize_Small, null, UnitFromId(2035117817), "Ref_Center");
    lv_reticle = libNtve_gf_ActorLastCreated();
    lv_textTag = TextTagLastCreated();
    TriggerQueueEnter();
    VisRevealArea(gv_pLAYER_01_USER, RegionFromId(88), 5.0, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/C61AD303"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00010", "Z1", true, null, false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00011", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    autoC929E90E_g = gv_introZ1;
    autoC929E90E_u = UnitGroupCount(autoC929E90E_g, c_unitCountAll);
    for (;; autoC929E90E_u -= 1) {
        autoC929E90E_var = UnitGroupUnitFromEnd(autoC929E90E_g, autoC929E90E_u);
        if (autoC929E90E_var == null) { break; }
        UnitAbilityAdd(autoC929E90E_var, "Z1BadgerBomb");
    }
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("Z1BadgerBomb", 0), true);
    TriggerExecute(gt_TipZ1BadgerQ, true, false);
    TriggerQueueExit();
    while (!((UnitIsAlive(UnitFromId(2035117817)) == false))) {
        Wait(1.0, c_timeGame);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1TransmissionSunkenColonySpotted2_Init () {
    gt_Z1TransmissionSunkenColonySpotted2 = TriggerCreate("gt_Z1TransmissionSunkenColonySpotted2_Func");
    TriggerAddEventUnitRegion(gt_Z1TransmissionSunkenColonySpotted2, null, RegionFromId(11), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Badger Used
//--------------------------------------------------------------------------------------------------
bool gt_Z1BadgerUsed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("Z1BadgerBomb", 0), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1BadgerUsed_Init () {
    gt_Z1BadgerUsed = TriggerCreate("gt_Z1BadgerUsed_Func");
    TriggerAddEventUnitAbility(gt_Z1BadgerUsed, null, AbilityCommand("Z1BadgerBomb", 0), c_unitAbilStageAll, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1 Section Victory
//--------------------------------------------------------------------------------------------------
bool gt_Z1SectionVictory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((EventUnit() == UnitFromId(1376593655)))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "HydraliskDen"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveSetState(gv_z1DenObjective, c_objectiveStateCompleted);
    PingDestroyAll();
    Wait(3.0, c_timeGame);
    gv_z1Complete = 1;
    TriggerQueueClear(c_triggerQueueRetain);
    TriggerStop(TriggerGetCurrent());
    TransmissionClearAll();
    TriggerExecute(gt_RoutheSetup, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1SectionVictory_Init () {
    gt_Z1SectionVictory = TriggerCreate("gt_Z1SectionVictory_Func");
    TriggerAddEventUnitDied(gt_Z1SectionVictory, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Routhe Setup
//--------------------------------------------------------------------------------------------------
bool gt_RoutheSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto1B7EFA06_g;
    int auto1B7EFA06_u;
    unit auto1B7EFA06_var;
    unitgroup auto9073CB98_g;
    int auto9073CB98_u;
    unit auto9073CB98_var;
    unitgroup auto2D7D5E3A_g;
    int auto2D7D5E3A_u;
    unit auto2D7D5E3A_var;
    unitgroup autoC26C4354_g;
    int autoC26C4354_u;
    unit autoC26C4354_var;
    unitgroup auto4CE9A723_g;
    int auto4CE9A723_u;
    unit auto4CE9A723_var;

    // Conditions
    if (testConds) {
        if (!((gv_z1Complete == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.5);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(true);
    UnitKill(UnitFromId(821200120));
    UnitKill(UnitFromId(2035117817));
    auto1B7EFA06_g = UnitGroup(null, c_playerAny, RegionFromId(12), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto1B7EFA06_u = UnitGroupCount(auto1B7EFA06_g, c_unitCountAll);
    for (;; auto1B7EFA06_u -= 1) {
        auto1B7EFA06_var = UnitGroupUnitFromEnd(auto1B7EFA06_g, auto1B7EFA06_u);
        if (auto1B7EFA06_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto1B7EFA06_var, true);
    }
    auto9073CB98_g = gv_z1BlockerGroup;
    auto9073CB98_u = UnitGroupCount(auto9073CB98_g, c_unitCountAll);
    for (;; auto9073CB98_u -= 1) {
        auto9073CB98_var = UnitGroupUnitFromEnd(auto9073CB98_g, auto9073CB98_u);
        if (auto9073CB98_var == null) { break; }
        UnitRemove(auto9073CB98_var);
    }
    auto2D7D5E3A_g = UnitGroup("DestructibleAiurDebris6x6", c_playerAny, RegionFromId(32), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2D7D5E3A_u = UnitGroupCount(auto2D7D5E3A_g, c_unitCountAll);
    for (;; auto2D7D5E3A_u -= 1) {
        auto2D7D5E3A_var = UnitGroupUnitFromEnd(auto2D7D5E3A_g, auto2D7D5E3A_u);
        if (auto2D7D5E3A_var == null) { break; }
        UnitRemove(auto2D7D5E3A_var);
    }
    UnitGroupAdd(gv_introRouthe, UnitFromId(105979848));
    UnitGroupAdd(gv_introRouthe, UnitFromId(131783264));
    UnitGroupAdd(gv_introRouthe, UnitFromId(2044429572));
    UnitGroupAdd(gv_introRouthe, UnitFromId(1478135769));
    gv_z1SectionStarts = 0;
    autoC26C4354_g = gv_introZ1;
    autoC26C4354_u = UnitGroupCount(autoC26C4354_g, c_unitCountAll);
    for (;; autoC26C4354_u -= 1) {
        autoC26C4354_var = UnitGroupUnitFromEnd(autoC26C4354_g, autoC26C4354_u);
        if (autoC26C4354_var == null) { break; }
        UnitRemove(autoC26C4354_var);
    }
    auto4CE9A723_g = UnitGroup("Z1", c_playerAny, RegionFromId(67), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto4CE9A723_u = UnitGroupCount(auto4CE9A723_g, c_unitCountAll);
    for (;; auto4CE9A723_u -= 1) {
        auto4CE9A723_var = UnitGroupUnitFromEnd(auto4CE9A723_g, auto4CE9A723_u);
        if (auto4CE9A723_var == null) { break; }
        UnitGroupAdd(gv_introZ1, auto4CE9A723_var);
    }
    gv_z1SectionStarts = 1;
    gv_routhe1 = 1;
    Wait(2.5, c_timeReal);
    GameTimeOfDaySet("15:00:00");
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/2BCE4C6D"), StringExternal("Param/Value/C5ED18EC"), 10.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    RegionPlayableMapSet(RegionFromId(12));
    CameraSetBounds(PlayerGroupAll(), RegionFromId(12), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(510886939), 0.0, -1, 10.0, true);
    Wait(8.0, c_timeReal);
    UIHideTextCrawl(PlayerGroupAll());
    TriggerExecute(gt_RoutheStarts, true, false);
    TriggerStop(gt_RoutheSetup);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoutheSetup_Init () {
    gt_RoutheSetup = TriggerCreate("gt_RoutheSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Routhe Starts
//--------------------------------------------------------------------------------------------------
bool gt_RoutheStarts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto018318E1_g;
    int auto018318E1_u;
    unit auto018318E1_var;
    unitgroup auto2E802BA8_g;
    int auto2E802BA8_u;
    unit auto2E802BA8_var;
    unitgroup auto84717A73_g;
    int auto84717A73_u;
    unit auto84717A73_var;
    unitgroup auto63F2DC78_g;
    int auto63F2DC78_u;
    unit auto63F2DC78_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto018318E1_g = gv_introRouthe;
    auto018318E1_u = UnitGroupCount(auto018318E1_g, c_unitCountAll);
    for (;; auto018318E1_u -= 1) {
        auto018318E1_var = UnitGroupUnitFromEnd(auto018318E1_g, auto018318E1_u);
        if (auto018318E1_var == null) { break; }
        UnitSetOwner(auto018318E1_var, gv_pLAYER_01_USER, true);
        libNtve_gf_MakeUnitFacePoint(auto018318E1_var, libNtve_gf_PointFacingAngle(PointFromId(1436727473), 0.0), 0.0);
    }
    auto2E802BA8_g = gv_introZ1;
    auto2E802BA8_u = UnitGroupCount(auto2E802BA8_g, c_unitCountAll);
    for (;; auto2E802BA8_u -= 1) {
        auto2E802BA8_var = UnitGroupUnitFromEnd(auto2E802BA8_g, auto2E802BA8_u);
        if (auto2E802BA8_var == null) { break; }
        UnitSetOwner(auto2E802BA8_var, gv_pLAYER_01_USER, true);
        libNtve_gf_MakeUnitFacePoint(auto2E802BA8_var, libNtve_gf_PointFacingAngle(PointFromId(1436727473), 0.0), 0.0);
    }
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.5);
    libNtve_gf_GlobalCinematicSetting(false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    Wait(1.0, c_timeReal);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(1477991772), StringExternal("Param/Value/B652160B"));
    gv_routheObjectivePing = PingLastCreated();
    ObjectiveCreate(StringExternal("Param/Value/99575AC4"), StringToText(""), c_objectiveStateActive, true);
    gv_routheObjective = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    TriggerExecute(gt_TipRoutheUnitQ, true, false);
    Wait(5.0, c_timeGame);
    libNtve_gf_CreateUnitsAtPoint2(1, "UltraliskBurrowed", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(323023853));
    UnitGroupAdd(gv_routheUltra, UnitLastCreated());
    auto84717A73_g = gv_routheUltra;
    auto84717A73_u = UnitGroupCount(auto84717A73_g, c_unitCountAll);
    for (;; auto84717A73_u -= 1) {
        auto84717A73_var = UnitGroupUnitFromEnd(auto84717A73_g, auto84717A73_u);
        if (auto84717A73_var == null) { break; }
        UnitIssueOrder(auto84717A73_var, Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
        UnitIssueOrder(auto84717A73_var, OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_introRouthe), c_orderQueueReplace);
    }
    Wait(7.0, c_timeGame);
    libNtve_gf_CreateUnitsAtPoint2(1, "UltraliskBurrowed", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(323023853));
    UnitGroupAdd(gv_routheUltra, UnitLastCreated());
    auto63F2DC78_g = gv_routheUltra;
    auto63F2DC78_u = UnitGroupCount(auto63F2DC78_g, c_unitCountAll);
    for (;; auto63F2DC78_u -= 1) {
        auto63F2DC78_var = UnitGroupUnitFromEnd(auto63F2DC78_g, auto63F2DC78_u);
        if (auto63F2DC78_var == null) { break; }
        UnitIssueOrder(auto63F2DC78_var, Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
        Wait(0.5, c_timeGame);
        UnitIssueOrder(auto63F2DC78_var, OrderTargetingUnitGroup(AbilityCommand("attack", 0), gv_introRouthe), c_orderQueueReplace);
    }
    TriggerStop(gt_RoutheStarts);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoutheStarts_Init () {
    gt_RoutheStarts = TriggerCreate("gt_RoutheStarts_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Z1Transmission - 2 Ultras Dead
//--------------------------------------------------------------------------------------------------
bool gt_Z1Transmission2UltrasDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_ultrasDead == 1))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Ultralisk"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/E3A45D01"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00015", "Z1", true, null, false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    MinimapPing(PlayerGroupAll(), PointFromId(1307502501), 2.0, Color(100.00, 0.00, 0.00));
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Z1Transmission2UltrasDead_Init () {
    gt_Z1Transmission2UltrasDead = TriggerCreate("gt_Z1Transmission2UltrasDead_Func");
    TriggerAddEventUnitDied(gt_Z1Transmission2UltrasDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Routhe Ultra Dead Count
//--------------------------------------------------------------------------------------------------
bool gt_RoutheUltraDeadCount_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_03_ROACHES_HOSTILE))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Ultralisk"))) {
            return false;
        }

        if (!((gv_routhe1 > 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_ultrasDead += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoutheUltraDeadCount_Init () {
    gt_RoutheUltraDeadCount = TriggerCreate("gt_RoutheUltraDeadCount_Func");
    TriggerAddEventUnitDied(gt_RoutheUltraDeadCount, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: RoutheEnd
//--------------------------------------------------------------------------------------------------
bool gt_RoutheEnd_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_routhe1 == 1))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGroupCount(gv_routheZergGroup, c_unitCountAlive) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveDestroy(gv_z1DenObjective);
    ObjectiveSetState(gv_routheObjective, c_objectiveStateCompleted);
    PingDestroy(gv_routheObjectivePing);
    Wait(3.0, c_timeGame);
    gv_routhe1 = 2;
    TriggerQueueClear(c_triggerQueueRetain);
    TriggerStop(TriggerGetCurrent());
    TransmissionClearAll();
    TriggerExecute(gt_A6SectionSetup, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RoutheEnd_Init () {
    gt_RoutheEnd = TriggerCreate("gt_RoutheEnd_Func");
    TriggerAddEventUnitDied(gt_RoutheEnd, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: A6 Section Setup
//--------------------------------------------------------------------------------------------------
bool gt_A6SectionSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFFD1C8C4_g;
    int autoFFD1C8C4_u;
    unit autoFFD1C8C4_var;
    unitgroup auto92A72E02_g;
    int auto92A72E02_u;
    unit auto92A72E02_var;
    unitgroup auto1B236C1E_g;
    int auto1B236C1E_u;
    unit auto1B236C1E_var;
    unitgroup auto85249A7F_g;
    int auto85249A7F_u;
    unit auto85249A7F_var;
    unitgroup auto397EA091_g;
    int auto397EA091_u;
    unit auto397EA091_var;
    unitgroup auto7AA3B7E0_g;
    int auto7AA3B7E0_u;
    unit auto7AA3B7E0_var;

    // Conditions
    if (testConds) {
        if (!((gv_routhe1 == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.5);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(true);
    autoFFD1C8C4_g = gv_introRouthe;
    autoFFD1C8C4_u = UnitGroupCount(autoFFD1C8C4_g, c_unitCountAll);
    for (;; autoFFD1C8C4_u -= 1) {
        autoFFD1C8C4_var = UnitGroupUnitFromEnd(autoFFD1C8C4_g, autoFFD1C8C4_u);
        if (autoFFD1C8C4_var == null) { break; }
        UnitRemove(autoFFD1C8C4_var);
    }
    gv_z1SectionStarts = 0;
    auto92A72E02_g = gv_introZ1;
    auto92A72E02_u = UnitGroupCount(auto92A72E02_g, c_unitCountAll);
    for (;; auto92A72E02_u -= 1) {
        auto92A72E02_var = UnitGroupUnitFromEnd(auto92A72E02_g, auto92A72E02_u);
        if (auto92A72E02_var == null) { break; }
        UnitRemove(auto92A72E02_var);
    }
    auto1B236C1E_g = UnitGroup(null, c_playerAny, RegionFromId(68), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto1B236C1E_u = UnitGroupCount(auto1B236C1E_g, c_unitCountAll);
    for (;; auto1B236C1E_u -= 1) {
        auto1B236C1E_var = UnitGroupUnitFromEnd(auto1B236C1E_g, auto1B236C1E_u);
        if (auto1B236C1E_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto1B236C1E_var, true);
        UnitGroupAdd(gv_introA6, auto1B236C1E_var);
        UnitSetState(auto1B236C1E_var, c_unitStateSelectable, false);
    }
    auto85249A7F_g = UnitGroup("Z1", c_playerAny, RegionFromId(68), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto85249A7F_u = UnitGroupCount(auto85249A7F_g, c_unitCountAll);
    for (;; auto85249A7F_u -= 1) {
        auto85249A7F_var = UnitGroupUnitFromEnd(auto85249A7F_g, auto85249A7F_u);
        if (auto85249A7F_var == null) { break; }
        UnitGroupAdd(gv_introZ1, auto85249A7F_var);
    }
    gv_z1SectionStarts = 1;
    GameTimeOfDaySet("18:00:00");
    GameSetToDLighting("BelShirSunset");
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/1D6DC098"), StringExternal("Param/Value/9F5908E1"), 10.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    Wait(8.0, c_timeReal);
    UIHideTextCrawl(PlayerGroupAll());
    gv_routhe1 = 3;
    UnitIssueOrder(UnitFromId(1933472698), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(242726238)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(2073684953), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1583585074)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1148355181), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(782542126)), c_orderQueueReplace);
    auto397EA091_g = gv_introA6;
    auto397EA091_u = UnitGroupCount(auto397EA091_g, c_unitCountAll);
    for (;; auto397EA091_u -= 1) {
        auto397EA091_var = UnitGroupUnitFromEnd(auto397EA091_g, auto397EA091_u);
        if (auto397EA091_var == null) { break; }
        libNtve_gf_MakeUnitFacePoint(auto397EA091_var, libNtve_gf_PointFacingAngle(PointFromId(783847725), 0.0), 0.0);
    }
    auto7AA3B7E0_g = gv_introZ1;
    auto7AA3B7E0_u = UnitGroupCount(auto7AA3B7E0_g, c_unitCountAll);
    for (;; auto7AA3B7E0_u -= 1) {
        auto7AA3B7E0_var = UnitGroupUnitFromEnd(auto7AA3B7E0_g, auto7AA3B7E0_u);
        if (auto7AA3B7E0_var == null) { break; }
        libNtve_gf_MakeUnitFacePoint(auto7AA3B7E0_var, libNtve_gf_PointFacingAngle(PointFromId(783847725), 0.0), 0.0);
    }
    gv_routhe2 = 1;
    Wait(1.0, c_timeGame);
    libNtve_gf_ShareVisionofUnit(UnitFromId(1029355205), true, gv_pLAYER_01_USER);
    TriggerExecute(gt_A6SectionStarts, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_A6SectionSetup_Init () {
    gt_A6SectionSetup = TriggerCreate("gt_A6SectionSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: A6 Section Starts
//--------------------------------------------------------------------------------------------------
bool gt_A6SectionStarts_Func (bool testConds, bool runActions) {
    // Variable Declarations
    actor lv_actor;
    int lv_textTag;

    // Automatic Variable Declarations
    unitgroup auto73F8F345_g;
    int auto73F8F345_u;
    unit auto73F8F345_var;
    unitgroup auto2A62DC1E_g;
    int auto2A62DC1E_u;
    unit auto2A62DC1E_var;
    unitgroup autoAE425CB4_g;
    int autoAE425CB4_u;
    unit autoAE425CB4_var;

    // Variable Initialization
    lv_textTag = c_textTagNone;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    RegionPlayableMapSet(RegionFromId(13));
    CameraSetBounds(PlayerGroupAll(), RegionFromId(13), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(601995553), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    Wait(1.0, c_timeGame);
    TriggerExecute(gt_TipA6UnitQ, true, false);
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranEnemy, libVCMI_ge_CampaginReticleSize_Small, StringToText(""), UnitFromId(1933472698), "Ref_Origin");
    gv_a6BlimpReticle = libNtve_gf_ActorLastCreated();
    gv_a6BlimpTextTag = TextTagLastCreated();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/6ED0548B"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00012", "Z1", true, UnitFromId(89362262), false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00013", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/E0159655"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00014", "Z1", true, UnitFromId(89362262), false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.5);
    libNtve_gf_GlobalCinematicSetting(false);
    auto73F8F345_g = UnitGroup(null, c_playerAny, RegionFromId(68), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto73F8F345_u = UnitGroupCount(auto73F8F345_g, c_unitCountAll);
    for (;; auto73F8F345_u -= 1) {
        auto73F8F345_var = UnitGroupUnitFromEnd(auto73F8F345_g, auto73F8F345_u);
        if (auto73F8F345_var == null) { break; }
        UnitSetState(auto73F8F345_var, c_unitStateSelectable, true);
    }
    auto2A62DC1E_g = gv_introA6;
    auto2A62DC1E_u = UnitGroupCount(auto2A62DC1E_g, c_unitCountAll);
    for (;; auto2A62DC1E_u -= 1) {
        auto2A62DC1E_var = UnitGroupUnitFromEnd(auto2A62DC1E_g, auto2A62DC1E_u);
        if (auto2A62DC1E_var == null) { break; }
        UnitSetOwner(auto2A62DC1E_var, gv_pLAYER_01_USER, true);
    }
    autoAE425CB4_g = gv_introZ1;
    autoAE425CB4_u = UnitGroupCount(autoAE425CB4_g, c_unitCountAll);
    for (;; autoAE425CB4_u -= 1) {
        autoAE425CB4_var = UnitGroupUnitFromEnd(autoAE425CB4_g, autoAE425CB4_u);
        if (autoAE425CB4_var == null) { break; }
        UnitSetOwner(autoAE425CB4_var, gv_pLAYER_01_USER, true);
    }
    libNtve_gf_ShareVisionofUnit(UnitFromId(1029355205), false, 1);
    libNtve_gf_MakeUnitInvulnerable(UnitFromId(1933472698), false);
    ObjectiveCreate(StringExternal("Param/Value/1A98B847"), StringToText(""), c_objectiveStateActive, true);
    gv_routheObjective2 = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(1176663029), StringExternal("Param/Value/7CBC6635"));
    gv_a6Kilo9Ping = PingLastCreated();
    libNtve_gf_KillModel(gv_a6BlimpReticle);
    TextTagDestroy(gv_a6BlimpTextTag);
    while (!((UnitIsAlive(UnitFromId(1933472698)) == false))) {
        Wait(1.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_A6SectionStarts_Init () {
    gt_A6SectionStarts = TriggerCreate("gt_A6SectionStarts_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: A6 Section End
//--------------------------------------------------------------------------------------------------
bool gt_A6SectionEnd_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGroupCount(gv_routheUltra2, c_unitCountAlive) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveDestroy(gv_routheObjective);
    ObjectiveSetState(gv_routheObjective2, c_objectiveStateCompleted);
    ObjectiveSetState(gv_z1MustSurviveObjective, c_objectiveStateCompleted);
    PingDestroy(gv_a6Kilo9Ping);
    gv_z1SectionStarts = 0;
    TriggerEnable(gt_DefeatScoutZ1sDead, false);
    gv_routhe4 = 1;
    TriggerExecute(gt_TR17Setup, true, false);
    TriggerStop(gt_A6SectionEnd);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "A6ExplosiveRounds", 0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_A6SectionEnd_Init () {
    gt_A6SectionEnd = TriggerCreate("gt_A6SectionEnd_Func");
    TriggerAddEventUnitDied(gt_A6SectionEnd, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 Setup
//--------------------------------------------------------------------------------------------------
bool gt_TR17Setup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_routhe4 == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_DefeatScoutZ1sDead, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.5);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(true);
    Wait(2.5, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(701447716), 0.0, -1, 10.0, true);
    GameTimeOfDaySet("21:00:00");
    GameSetToDLighting("AiurNight");
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/3338E737"), StringExternal("Param/Value/7F65F8F2"), 10.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    Wait(8.0, c_timeReal);
    UIHideTextCrawl(PlayerGroupAll());
    TriggerExecute(gt_TR17UnitSetup, true, false);
    gv_tR17SectionActive = 1;
    TriggerExecute(gt_TR17Start, true, false);
    TriggerStop(gt_TR17Setup);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17Setup_Init () {
    gt_TR17Setup = TriggerCreate("gt_TR17Setup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 UnitSetup
//--------------------------------------------------------------------------------------------------
bool gt_TR17UnitSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto3C338288_g;
    int auto3C338288_u;
    unit auto3C338288_var;
    unitgroup auto17DE6D5C_g;
    int auto17DE6D5C_u;
    unit auto17DE6D5C_var;
    unitgroup autoB6F6C293_g;
    int autoB6F6C293_u;
    unit autoB6F6C293_var;
    unitgroup auto246B0BD8_g;
    int auto246B0BD8_u;
    unit auto246B0BD8_var;
    unitgroup auto11620AD4_g;
    int auto11620AD4_u;
    unit auto11620AD4_var;
    unitgroup auto18B0B9B4_g;
    int auto18B0B9B4_u;
    unit auto18B0B9B4_var;
    unitgroup autoB72B64F2_g;
    int autoB72B64F2_u;
    unit autoB72B64F2_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto3C338288_g = UnitGroup(null, c_playerAny, RegionFromId(70), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto3C338288_u = UnitGroupCount(auto3C338288_g, c_unitCountAll);
    for (;; auto3C338288_u -= 1) {
        auto3C338288_var = UnitGroupUnitFromEnd(auto3C338288_g, auto3C338288_u);
        if (auto3C338288_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto3C338288_var, false);
    }
    auto17DE6D5C_g = gv_introA6;
    auto17DE6D5C_u = UnitGroupCount(auto17DE6D5C_g, c_unitCountAll);
    for (;; auto17DE6D5C_u -= 1) {
        auto17DE6D5C_var = UnitGroupUnitFromEnd(auto17DE6D5C_g, auto17DE6D5C_u);
        if (auto17DE6D5C_var == null) { break; }
        UnitRemove(auto17DE6D5C_var);
    }
    autoB6F6C293_g = gv_introZ1;
    autoB6F6C293_u = UnitGroupCount(autoB6F6C293_g, c_unitCountAll);
    for (;; autoB6F6C293_u -= 1) {
        autoB6F6C293_var = UnitGroupUnitFromEnd(autoB6F6C293_g, autoB6F6C293_u);
        if (autoB6F6C293_var == null) { break; }
        UnitRemove(autoB6F6C293_var);
    }
    auto246B0BD8_g = UnitGroup(null, c_playerAny, RegionFromId(69), UnitFilter(0, 0, (1 << c_targetFilterRawResource) | (1 << c_targetFilterHarvestableResource) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto246B0BD8_u = UnitGroupCount(auto246B0BD8_g, c_unitCountAll);
    for (;; auto246B0BD8_u -= 1) {
        auto246B0BD8_var = UnitGroupUnitFromEnd(auto246B0BD8_g, auto246B0BD8_u);
        if (auto246B0BD8_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto246B0BD8_var, true);
        UnitSetOwner(auto246B0BD8_var, gv_pLAYER_01_USER, true);
        libNtve_gf_MakeUnitFacePoint(auto246B0BD8_var, libNtve_gf_PointFacingAngle(PointFromId(1170764190), 0.0), 0.0);
    }
    auto11620AD4_g = UnitGroup("TR17", c_playerAny, RegionFromId(69), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto11620AD4_u = UnitGroupCount(auto11620AD4_g, c_unitCountAll);
    for (;; auto11620AD4_u -= 1) {
        auto11620AD4_var = UnitGroupUnitFromEnd(auto11620AD4_g, auto11620AD4_u);
        if (auto11620AD4_var == null) { break; }
        UnitGroupAdd(gv_TR17Group, auto11620AD4_var);
    }
    auto18B0B9B4_g = gv_introInfantryB;
    auto18B0B9B4_u = UnitGroupCount(auto18B0B9B4_g, c_unitCountAll);
    for (;; auto18B0B9B4_u -= 1) {
        auto18B0B9B4_var = UnitGroupUnitFromEnd(auto18B0B9B4_g, auto18B0B9B4_u);
        if (auto18B0B9B4_var == null) { break; }
        UnitSetOwner(auto18B0B9B4_var, gv_pLAYER_01_USER, true);
        Wait(0.5, c_timeReal);
        UnitIssueOrder(auto18B0B9B4_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(968512075)), c_orderQueueReplace);
    }
    autoB72B64F2_g = gv_introInfantryA;
    autoB72B64F2_u = UnitGroupCount(autoB72B64F2_g, c_unitCountAll);
    for (;; autoB72B64F2_u -= 1) {
        autoB72B64F2_var = UnitGroupUnitFromEnd(autoB72B64F2_g, autoB72B64F2_u);
        if (autoB72B64F2_var == null) { break; }
        UnitSetOwner(autoB72B64F2_var, gv_pLAYER_01_USER, true);
        Wait(0.5, c_timeReal);
        UnitIssueOrder(autoB72B64F2_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1087793978)), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17UnitSetup_Init () {
    gt_TR17UnitSetup = TriggerCreate("gt_TR17UnitSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 Start
//--------------------------------------------------------------------------------------------------
bool gt_TR17Start_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoBE98E3D6_g;
    int autoBE98E3D6_u;
    unit autoBE98E3D6_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    RegionPlayableMapSet(RegionFromId(14));
    CameraSetBounds(PlayerGroupAll(), RegionFromId(14), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(701447716), 0.0, -1, 10.0, true);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.5);
    libNtve_gf_GlobalCinematicSetting(false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_TutorialMusic1A", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    TriggerExecute(gt_TipTR17UnitQ, true, false);
    TriggerExecute(gt_TR17RoachWaveTiming, true, false);
    TriggerExecute(gt_TipTR17StarburstQ, true, false);
    ObjectiveCreate(StringExternal("Param/Value/5547B0F9"), StringExternal("Param/Value/5B7028B5"), c_objectiveStateActive, true);
    gv_tR17Objective = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    autoBE98E3D6_g = UnitGroup(null, c_playerAny, RegionFromId(14), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBE98E3D6_u = UnitGroupCount(autoBE98E3D6_g, c_unitCountAll);
    for (;; autoBE98E3D6_u -= 1) {
        autoBE98E3D6_var = UnitGroupUnitFromEnd(autoBE98E3D6_g, autoBE98E3D6_u);
        if (autoBE98E3D6_var == null) { break; }
        UnitIssueOrder(autoBE98E3D6_var, Order(AbilityCommand("TR17Siege", 0)), c_orderQueueReplace);
    }
    Wait(6.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    TriggerStop(gt_TR17Start);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17Start_Init () {
    gt_TR17Start = TriggerCreate("gt_TR17Start_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 Roach Wave Timing
//--------------------------------------------------------------------------------------------------
bool gt_TR17RoachWaveTiming_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_TR17RoachWaves, true, false);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_TR17RoachWaves, true, false);
    Wait(10.0, c_timeGame);
    TriggerExecute(gt_TR17RoachWaves, true, false);
    Wait(13.0, c_timeGame);
    TriggerExecute(gt_TR17RoachWaves2, true, false);
    Wait(13.0, c_timeGame);
    TriggerExecute(gt_TR17Reinforcements, true, false);
    Wait(13.0, c_timeGame);
    TriggerExecute(gt_TR17RoachWaves2, true, false);
    TriggerExecute(gt_TR17RoachWaves, true, false);
    Wait(17.0, c_timeGame);
    TriggerExecute(gt_TR17RoachWaves2, true, false);
    TriggerExecute(gt_TR17RoachWaves, true, false);
    TriggerExecute(gt_TR17RoachWaves, true, false);
    Wait(17.0, c_timeGame);
    TriggerExecute(gt_TR17RoachWaves3, true, false);
    Wait(15.0, c_timeGame);
    gv_routhe3 = 1;
    TriggerExecute(gt_TR17RoachWaves, true, false);
    TriggerStop(gt_TR17RoachWaveTiming);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17RoachWaveTiming_Init () {
    gt_TR17RoachWaveTiming = TriggerCreate("gt_TR17RoachWaveTiming_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 Reinforcements
//--------------------------------------------------------------------------------------------------
bool gt_TR17Reinforcements_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto2047B716_n = 2;
    int auto2047B716_i;
    const int auto290DF7D2_n = 2;
    int auto290DF7D2_i;
    const int auto749D325C_n = 1;
    int auto749D325C_i;
    const int autoC0D5E499_n = 2;
    int autoC0D5E499_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto2047B716_i = 1; auto2047B716_i <= auto2047B716_n; auto2047B716_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRocket", 0, gv_pLAYER_04_UPL_NEUTRAL, PointFromId(427489286));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(73))), c_orderQueueReplace);
        Wait(0.5, c_timeReal);
    }
    for (auto290DF7D2_i = 1; auto290DF7D2_i <= auto290DF7D2_n; auto290DF7D2_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_pLAYER_04_UPL_NEUTRAL, PointFromId(427489286));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(73))), c_orderQueueReplace);
        Wait(0.5, c_timeReal);
    }
    for (auto749D325C_i = 1; auto749D325C_i <= auto749D325C_n; auto749D325C_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Z1", 0, gv_pLAYER_04_UPL_NEUTRAL, PointFromId(1454369732));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(73))), c_orderQueueReplace);
        Wait(1.0, c_timeReal);
    }
    for (autoC0D5E499_i = 1; autoC0D5E499_i <= autoC0D5E499_n; autoC0D5E499_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Z1", 0, gv_pLAYER_04_UPL_NEUTRAL, PointFromId(1454369732));
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(73))), c_orderQueueReplace);
        Wait(1.0, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17Reinforcements_Init () {
    gt_TR17Reinforcements = TriggerCreate("gt_TR17Reinforcements_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 Reinforcements Rescued
//--------------------------------------------------------------------------------------------------
bool gt_TR17ReinforcementsRescued_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_04_UPL_NEUTRAL))) {
            return false;
        }

        if (!((gv_tR17SectionActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_RescueUnit(EventUnit(), gv_pLAYER_01_USER, true);
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(73))), c_orderQueueReplace);
    UnitGroupAdd(gv_TR17Group, EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17ReinforcementsRescued_Init () {
    gt_TR17ReinforcementsRescued = TriggerCreate("gt_TR17ReinforcementsRescued_Func");
    TriggerAddEventUnitRegion(gt_TR17ReinforcementsRescued, null, RegionFromId(23), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 RoachWaves
//--------------------------------------------------------------------------------------------------
bool gt_TR17RoachWaves_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto44B1774D_n = 22;
    int auto44B1774D_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto44B1774D_i = 1; auto44B1774D_i <= auto44B1774D_n; auto44B1774D_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1247080744));
        UnitGroupAdd(gv_routheUltra3, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1924846296)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(265901795)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17RoachWaves_Init () {
    gt_TR17RoachWaves = TriggerCreate("gt_TR17RoachWaves_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 RoachWaves 2
//--------------------------------------------------------------------------------------------------
bool gt_TR17RoachWaves2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto2CC62263_n = 15;
    int auto2CC62263_i;
    const int auto91204314_n = 7;
    int auto91204314_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto2CC62263_i = 1; auto2CC62263_i <= auto2CC62263_n; auto2CC62263_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1247080744));
        UnitGroupAdd(gv_routheUltra3, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1924846296)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(265901795)), c_orderQueueAddToEnd);
    }
    for (auto91204314_i = 1; auto91204314_i <= auto91204314_n; auto91204314_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1247080744));
        UnitGroupAdd(gv_routheUltra3, UnitLastCreated());
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(1924846296)), c_orderQueueReplace);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(265901795)), c_orderQueueAddToEnd);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17RoachWaves2_Init () {
    gt_TR17RoachWaves2 = TriggerCreate("gt_TR17RoachWaves2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 RoachWaves 3
//--------------------------------------------------------------------------------------------------
bool gt_TR17RoachWaves3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoB41C657E_n = 4;
    int autoB41C657E_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoB41C657E_i = 1; autoB41C657E_i <= autoB41C657E_n; autoB41C657E_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "UltraliskBurrowed", c_unitCreateIgnorePlacement, gv_pLAYER_06_ROACHES_NEUTRAL, PointFromId(118735389));
        UnitGroupAdd(gv_routheUltra3, UnitLastCreated());
        UnitSetOwner(UnitLastCreated(), gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(UnitLastCreated(), Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueAddToEnd);
        Wait(1.0, c_timeGame);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), PointFromId(265901795)), c_orderQueueAddToEnd);
        Wait(0.5, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17RoachWaves3_Init () {
    gt_TR17RoachWaves3 = TriggerCreate("gt_TR17RoachWaves3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR17 End
//--------------------------------------------------------------------------------------------------
bool gt_TR17End_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGroupCount(gv_routheUltra3, c_unitCountAlive) < 5))) {
            return false;
        }

        if (!((gv_routhe3 == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_DefeatTR17CrewDead, false);
    ObjectiveDestroy(gv_z1MustSurviveObjective);
    ObjectiveDestroy(gv_routheObjective2);
    ObjectiveSetState(gv_tR17Objective, c_objectiveStateCompleted);
    Wait(4.0, c_timeGame);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    gv_routhe3 = 2;
    TriggerExecute(gt_MutasorUltrasQ, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17End_Init () {
    gt_TR17End = TriggerCreate("gt_TR17End_Func");
    TriggerAddEventUnitDied(gt_TR17End, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: DestroyPressureCooker
//--------------------------------------------------------------------------------------------------
bool gt_DestroyPressureCooker_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitRemove(UnitFromId(830359926));
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    RegionPlayableMapSet(RegionFromId(15));
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1157872457), 0.0, -1, 10.0, true);
    CameraSetBounds(PlayerGroupAll(), RegionFromId(15), true);
    gv_spySectionStarts = 1;
    TriggerExecute(gt_SpyReinforcements, true, false);
    PlayerSetColorIndex(gv_pLAYER_01_USER, 2, true);
    ObjectiveDestroyAll(PlayerGroupAll());
    UISetMode(PlayerGroupAll(), c_uiModeConsole, c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_TutorialMusic2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(303812430), StringExternal("Param/Value/FD826019"));
    PingSetVisible(PingLastCreated(), true);
    ObjectiveCreate(StringExternal("Param/Value/B32C1A5A"), StringToText(""), c_objectiveStateActive, true);
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    gv_objectiveCooker = ObjectiveLastCreated();
    ObjectiveCreate(StringExternal("Param/Value/9A7031DA"), StringToText(""), c_objectiveStateActive, true);
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    gv_objectiveOtherStuff = ObjectiveLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DestroyPressureCooker_Init () {
    gt_DestroyPressureCooker = TriggerCreate("gt_DestroyPressureCooker_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DestroySpire
//--------------------------------------------------------------------------------------------------
bool gt_DestroySpire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    UnitRemove(UnitFromId(830359926));
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    RegionPlayableMapSet(RegionFromId(15));
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(600184692), 0.0, -1, 10.0, true);
    CameraSetBounds(PlayerGroupAll(), RegionFromId(15), true);
    gv_spySectionStarts = 1;
    TriggerExecute(gt_SpyReinforcements, true, false);
    PlayerSetColorIndex(1, 2, true);
    ObjectiveDestroyAll(PlayerGroupAll());
    UISetMode(PlayerGroupAll(), c_uiModeConsole, c_transitionDurationDefault);
    libNtve_gf_GlobalCinematicSetting(false);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_TutorialMusic2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(688228916), StringExternal("Param/Value/8B1944C8"));
    PingSetVisible(PingLastCreated(), true);
    ObjectiveCreate(StringExternal("Param/Value/80045F3B"), StringToText(""), c_objectiveStateActive, true);
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    gv_objectiveOven = ObjectiveLastCreated();
    ObjectiveCreate(StringExternal("Param/Value/EEE40E60"), StringToText(""), c_objectiveStateActive, true);
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    gv_objectiveOtherStuff = ObjectiveLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DestroySpire_Init () {
    gt_DestroySpire = TriggerCreate("gt_DestroySpire_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpyReinforcements
//--------------------------------------------------------------------------------------------------
bool gt_SpyReinforcements_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRocket", 0, gv_pLAYER_01_USER, PointFromId(1559643373), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRocket", 0, gv_pLAYER_01_USER, PointFromId(1559643373), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRifle", 0, gv_pLAYER_01_USER, PointFromId(2054620772), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRifle", 0, gv_pLAYER_01_USER, PointFromId(2054620772), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRifle", 0, gv_pLAYER_01_USER, PointFromId(2054620772), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryHeavy", 0, gv_pLAYER_01_USER, PointFromId(2040873119), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryHeavy", 0, gv_pLAYER_01_USER, PointFromId(2040873119), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "A6", 0, gv_pLAYER_01_USER, PointFromId(1635316524), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "A6", 0, gv_pLAYER_01_USER, PointFromId(1635316524), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "RoutheTank", 0, gv_pLAYER_01_USER, PointFromId(1349242035), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "RoutheTank", 0, gv_pLAYER_01_USER, PointFromId(1349242035), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "TR17", 0, gv_pLAYER_01_USER, PointFromId(971012392), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "TR17", 0, gv_pLAYER_01_USER, PointFromId(971012392), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "TR17", 0, gv_pLAYER_01_USER, PointFromId(1349242035), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(166564118), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(166564118), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(166564118), libNtve_gf_PointFacingAngle(PointFromId(152342473), 0.0));
    UnitGroupAdd(gv_spySectionUPL, UnitLastCreated());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpyReinforcements_Init () {
    gt_SpyReinforcements = TriggerCreate("gt_SpyReinforcements_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpyRoaches1
//--------------------------------------------------------------------------------------------------
bool gt_SpyRoaches1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto4BF6AEF4_g;
    int auto4BF6AEF4_u;
    unit auto4BF6AEF4_var;
    unitgroup auto3532E892_g;
    int auto3532E892_u;
    unit auto3532E892_var;
    unitgroup autoD0B9F3F9_g;
    int autoD0B9F3F9_u;
    unit autoD0B9F3F9_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitGroupAdd(gv_spySurprise4, UnitFromId(2088453453));
    UnitGroupAdd(gv_spySurprise4, UnitFromId(451861805));
    auto4BF6AEF4_g = gv_spySurprise4;
    auto4BF6AEF4_u = UnitGroupCount(auto4BF6AEF4_g, c_unitCountAll);
    for (;; auto4BF6AEF4_u -= 1) {
        auto4BF6AEF4_var = UnitGroupUnitFromEnd(auto4BF6AEF4_g, auto4BF6AEF4_u);
        if (auto4BF6AEF4_var == null) { break; }
        UnitSetOwner(auto4BF6AEF4_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(auto4BF6AEF4_var, Order(AbilityCommand("BurrowUltraliskUp", 0)), c_orderQueueReplace);
    }
    auto3532E892_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3532E892_u = UnitGroupCount(auto3532E892_g, c_unitCountAll);
    for (;; auto3532E892_u -= 1) {
        auto3532E892_var = UnitGroupUnitFromEnd(auto3532E892_g, auto3532E892_u);
        if (auto3532E892_var == null) { break; }
        UnitSetOwner(auto3532E892_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
    }
    autoD0B9F3F9_g = UnitGroup("Drone", gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD0B9F3F9_u = UnitGroupCount(autoD0B9F3F9_g, c_unitCountAll);
    for (;; autoD0B9F3F9_u -= 1) {
        autoD0B9F3F9_var = UnitGroupUnitFromEnd(autoD0B9F3F9_g, autoD0B9F3F9_u);
        if (autoD0B9F3F9_var == null) { break; }
        UnitSetOwner(autoD0B9F3F9_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionFromId(15), gv_pLAYER_03_ROACHES_HOSTILE);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpyRoaches1_Init () {
    gt_SpyRoaches1 = TriggerCreate("gt_SpyRoaches1_Func");
    TriggerAddEventUnitRegion(gt_SpyRoaches1, null, RegionFromId(16), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpySectionEnds1
//--------------------------------------------------------------------------------------------------
bool gt_SpySectionEnds1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGroupCount(gv_whattoKillStructureGroup, c_unitCountAlive) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroyAll();
    ObjectiveSetState(gv_objectiveOtherStuff, c_objectiveStateCompleted);
    gv_spySectionComplete += 1;
    TriggerExecute(gt_SpySectionWrapup, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpySectionEnds1_Init () {
    gt_SpySectionEnds1 = TriggerCreate("gt_SpySectionEnds1_Func");
    TriggerAddEventUnitDied(gt_SpySectionEnds1, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpySectionEnds2
//--------------------------------------------------------------------------------------------------
bool gt_SpySectionEnds2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroyAll();
    ObjectiveSetState(gv_objectiveCooker, c_objectiveStateCompleted);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/C91D065C"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00019", "Z1", true, UnitFromId(89362262), false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    gv_spySectionComplete += 1;
    gv_spySectionPressureCookerDead = 1;
    TriggerDestroy(gt_PatrolsInTheClearUltra);
    TriggerExecute(gt_SpySectionWrapup, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpySectionEnds2_Init () {
    gt_SpySectionEnds2 = TriggerCreate("gt_SpySectionEnds2_Func");
    TriggerAddEventUnitDied(gt_SpySectionEnds2, UnitRefFromUnit(UnitFromId(1757504454)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpySectionEnds3
//--------------------------------------------------------------------------------------------------
bool gt_SpySectionEnds3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_objectiveOven, c_objectiveStateCompleted);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/7660A653"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00018", "Z1", true, UnitFromId(89362262), false, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    gv_spySectionComplete += 1;
    gv_spySectionOvenDead = 1;
    TriggerDestroy(gt_PatrolsInTheClearMutas);
    TriggerExecute(gt_SpySectionWrapup, true, false);
    TriggerExecute(gt_HideBirds, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpySectionEnds3_Init () {
    gt_SpySectionEnds3 = TriggerCreate("gt_SpySectionEnds3_Func");
    TriggerAddEventUnitDied(gt_SpySectionEnds3, UnitRefFromUnit(UnitFromId(1940943526)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: SpySectionWrapup
//--------------------------------------------------------------------------------------------------
bool gt_SpySectionWrapup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_spySectionComplete == 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_CounterattackQ, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SpySectionWrapup_Init () {
    gt_SpySectionWrapup = TriggerCreate("gt_SpySectionWrapup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterattackUnitPrep
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackUnitPrep_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto455128D6_g;
    int auto455128D6_u;
    unit auto455128D6_var;
    unitgroup auto66DE3D8A_g;
    int auto66DE3D8A_u;
    unit auto66DE3D8A_var;
    unitgroup autoAA557E7D_g;
    int autoAA557E7D_u;
    unit autoAA557E7D_var;
    unitgroup auto0E230A4E_g;
    int auto0E230A4E_u;
    unit auto0E230A4E_var;
    unitgroup auto800C3B42_g;
    int auto800C3B42_u;
    unit auto800C3B42_var;
    unitgroup auto42819168_g;
    int auto42819168_u;
    unit auto42819168_var;
    unitgroup autoD0BD07C9_g;
    int autoD0BD07C9_u;
    unit autoD0BD07C9_var;
    unitgroup autoA546470D_g;
    int autoA546470D_u;
    unit autoA546470D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto455128D6_g = UnitGroup(null, 14, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto455128D6_u = UnitGroupCount(auto455128D6_g, c_unitCountAll);
    for (;; auto455128D6_u -= 1) {
        auto455128D6_var = UnitGroupUnitFromEnd(auto455128D6_g, auto455128D6_u);
        if (auto455128D6_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto455128D6_var, true);
        UnitSetOwner(auto455128D6_var, gv_pLAYER_01_USER, true);
    }
    auto66DE3D8A_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto66DE3D8A_u = UnitGroupCount(auto66DE3D8A_g, c_unitCountAll);
    for (;; auto66DE3D8A_u -= 1) {
        auto66DE3D8A_var = UnitGroupUnitFromEnd(auto66DE3D8A_g, auto66DE3D8A_u);
        if (auto66DE3D8A_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto66DE3D8A_var, true);
    }
    autoAA557E7D_g = UnitGroup(null, gv_pLAYER_00_NEUTRAL, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoAA557E7D_u = UnitGroupCount(autoAA557E7D_g, c_unitCountAll);
    for (;; autoAA557E7D_u -= 1) {
        autoAA557E7D_var = UnitGroupUnitFromEnd(autoAA557E7D_g, autoAA557E7D_u);
        if (autoAA557E7D_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoAA557E7D_var, true);
    }
    auto0E230A4E_g = UnitGroup(null, gv_pLAYER_04_UPL_NEUTRAL, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto0E230A4E_u = UnitGroupCount(auto0E230A4E_g, c_unitCountAll);
    for (;; auto0E230A4E_u -= 1) {
        auto0E230A4E_var = UnitGroupUnitFromEnd(auto0E230A4E_g, auto0E230A4E_u);
        if (auto0E230A4E_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto0E230A4E_var, true);
        UnitSetOwner(auto0E230A4E_var, gv_pLAYER_01_USER, true);
    }
    auto800C3B42_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto800C3B42_u = UnitGroupCount(auto800C3B42_g, c_unitCountAll);
    for (;; auto800C3B42_u -= 1) {
        auto800C3B42_var = UnitGroupUnitFromEnd(auto800C3B42_g, auto800C3B42_u);
        if (auto800C3B42_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto800C3B42_var, true);
    }
    Wait(1.0, c_timeReal);
    auto42819168_g = UnitGroup("Overlord", gv_pLAYER_03_ROACHES_HOSTILE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto42819168_u = UnitGroupCount(auto42819168_g, c_unitCountAll);
    for (;; auto42819168_u -= 1) {
        auto42819168_var = UnitGroupUnitFromEnd(auto42819168_g, auto42819168_u);
        if (auto42819168_var == null) { break; }
        UnitIssueOrder(auto42819168_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(401549130)), c_orderQueueReplace);
    }
    UnitRemove(UnitFromId(729593720));
    autoD0BD07C9_g = UnitGroup("TR17", gv_pLAYER_01_USER, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoD0BD07C9_u = UnitGroupCount(autoD0BD07C9_g, c_unitCountAll);
    for (;; autoD0BD07C9_u -= 1) {
        autoD0BD07C9_var = UnitGroupUnitFromEnd(autoD0BD07C9_g, autoD0BD07C9_u);
        if (autoD0BD07C9_var == null) { break; }
        UnitIssueOrder(autoD0BD07C9_var, Order(AbilityCommand("TR17Siege", 0)), c_orderQueueReplace);
    }
    autoA546470D_g = UnitGroup("InfantryMortar", gv_pLAYER_01_USER, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoA546470D_u = UnitGroupCount(autoA546470D_g, c_unitCountAll);
    for (;; autoA546470D_u -= 1) {
        autoA546470D_var = UnitGroupUnitFromEnd(autoA546470D_g, autoA546470D_u);
        if (autoA546470D_var == null) { break; }
        UnitIssueOrder(autoA546470D_var, Order(AbilityCommand("InfantryMortarModeSiege", 0)), c_orderQueueReplace);
    }
    libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionFromId(71), gv_pLAYER_01_USER);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackUnitPrep_Init () {
    gt_CounterattackUnitPrep = TriggerCreate("gt_CounterattackUnitPrep_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterattackSectionStarts
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackSectionStarts_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoC05A80A6_g;
    int autoC05A80A6_u;
    unit autoC05A80A6_var;
    unitgroup auto30C1B5E6_g;
    int auto30C1B5E6_u;
    unit auto30C1B5E6_var;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_SetHeroPanelUnit(1, gv_colonelGraves);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    lib1926661B_gf_SetHeroPanelUnit(2, gv_sergeantJerico);
    lib1926661B_gf_ShowHideHeroPanel(2, true);
    lib1926661B_gf_SetHeroPanelUnit(3, gv_cARR);
    lib1926661B_gf_ShowHideHeroPanel(3, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveDestroyAll(PlayerGroupAll());
    Wait(0.5, c_timeGame);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(269924821), 0.0, -1, 10.0, true);
    RegionPlayableMapSet(RegionFromId(86));
    CameraSetBounds(PlayerGroupAll(), RegionEntireMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    TriggerExecute(gt_CounterattackUnitPrep, true, true);
    libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), gv_pLAYER_01_USER);
    Wait(0.5, c_timeGame);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.5);
    libNtve_gf_GlobalCinematicSetting(false);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/DA5DD735"));
    gv_counterattackLighting = true;
    ObjectiveDestroy(gv_objectiveCooker);
    ObjectiveDestroy(gv_objectiveOtherStuff);
    ObjectiveDestroy(gv_objectiveOven);
    ObjectiveCreate(StringExternal("Param/Value/3F789009"), StringToText(""), c_objectiveStateActive, true);
    gv_routheObjective3 = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    ObjectiveCreate(StringExternal("Param/Value/9763B1AA"), StringToText(""), c_objectiveStateActive, true);
    gv_routheObjective5 = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_BaseAttackMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    SoundPlayForPlayer(SoundLink("M4BaseAlarm", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.0, c_timeGame);
    PlayerSetAlliance(gv_pLAYER_01_USER, c_allianceIdVision, gv_pLAYER_03_ROACHES_HOSTILE, true);
    TriggerExecute(gt_CounterAttackUnitGroupFills, true, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00022", null, true, gv_sergeantJerico, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00023", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    Wait(30.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4BaseAlarm", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(80.0, c_timeGame);
    UnitSetPropertyFixed(UnitFromId(534092670), c_unitPropLife, 15.0);
    autoC05A80A6_g = UnitGroup(null, gv_pLAYER_06_ROACHES_NEUTRAL, RegionFromId(85), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoC05A80A6_u = UnitGroupCount(autoC05A80A6_g, c_unitCountAll);
    for (;; autoC05A80A6_u -= 1) {
        autoC05A80A6_var = UnitGroupUnitFromEnd(autoC05A80A6_g, autoC05A80A6_u);
        if (autoC05A80A6_var == null) { break; }
        UnitSetOwner(autoC05A80A6_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
        UnitIssueOrder(autoC05A80A6_var, Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoC05A80A6_var, Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoC05A80A6_var, Order(AbilityCommand("BurrowRoachUp", 0)), c_orderQueueReplace);
    }
    Wait(0.5, c_timeGame);
    auto30C1B5E6_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(85), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto30C1B5E6_u = UnitGroupCount(auto30C1B5E6_g, c_unitCountAll);
    for (;; auto30C1B5E6_u -= 1) {
        auto30C1B5E6_var = UnitGroupUnitFromEnd(auto30C1B5E6_g, auto30C1B5E6_u);
        if (auto30C1B5E6_var == null) { break; }
        UnitIssueOrder(auto30C1B5E6_var, OrderTargetingUnit(AbilityCommand("attack", 0), UnitFromId(534092670)), c_orderQueueReplace);
    }
    Wait(1.0, c_timeGame);
    UnitDamage(gv_colonelGraves, "Claws", UnitFromId(534092670), 100.0);
    Wait(27.0, c_timeGame);
    TriggerExecute(gt_CounterattackWait, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackSectionStarts_Init () {
    gt_CounterattackSectionStarts = TriggerCreate("gt_CounterattackSectionStarts_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterattackWait
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackWait_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto85B18238_g;
    int auto85B18238_u;
    unit auto85B18238_var;
    unitgroup autoFEA611B9_g;
    int autoFEA611B9_u;
    unit autoFEA611B9_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((PlayerGetPropertyInt(gv_pLAYER_01_USER, c_playerPropSuppliesUsed) < 70)) {
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
        lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/1E704067"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00024", "InfantryRocket", true, null, false, c_transmissionDurationAdd, 0.0);
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
        lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/2BC19B29"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00025", "InfantryHeavy", true, null, false, c_transmissionDurationAdd, 0.0);
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
        auto85B18238_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto85B18238_u = UnitGroupCount(auto85B18238_g, c_unitCountAll);
        for (;; auto85B18238_u -= 1) {
            auto85B18238_var = UnitGroupUnitFromEnd(auto85B18238_g, auto85B18238_u);
            if (auto85B18238_var == null) { break; }
            libNtve_gf_ChangeUnitDamage(auto85B18238_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
        }
        autoFEA611B9_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoFEA611B9_u = UnitGroupCount(autoFEA611B9_g, c_unitCountAll);
        for (;; autoFEA611B9_u -= 1) {
            autoFEA611B9_var = UnitGroupUnitFromEnd(autoFEA611B9_g, autoFEA611B9_u);
            if (autoFEA611B9_var == null) { break; }
            UnitIssueOrder(autoFEA611B9_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(3))), c_orderQueueReplace);
            UnitIssueOrder(autoFEA611B9_var, Order(AbilityCommand("move", 2)), c_orderQueueAddToEnd);
        }
        TriggerExecute(gt_CounterattackArtillery, true, true);
        TriggerExecute(gt_CounterattackOver, true, false);
    }
    else {
        TriggerEnable(TriggerGetCurrent(), false);
        GameSetLighting("Agria", 3.0);
        SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
        Wait(3.0, c_timeReal);
        TriggerExecute(gt_CounterattackOver, true, false);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackWait_Init () {
    gt_CounterattackWait = TriggerCreate("gt_CounterattackWait_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterattackArtillery
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackArtillery_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto506A4D1D_n = 60;
    int auto506A4D1D_i;
    unitgroup auto5023C553_g;
    int auto5023C553_u;
    unit auto5023C553_var;
    unitgroup auto2C9D752B_g;
    int auto2C9D752B_u;
    unit auto2C9D752B_var;
    const int auto3E58D6B0_n = 50;
    int auto3E58D6B0_i;
    unitgroup auto6ECBF5E6_g;
    int auto6ECBF5E6_u;
    unit auto6ECBF5E6_var;
    unitgroup auto5086E2AE_g;
    int auto5086E2AE_u;
    unit auto5086E2AE_var;
    const int auto1B6439C2_n = 60;
    int auto1B6439C2_i;
    unitgroup autoB82F0891_g;
    int autoB82F0891_u;
    unit autoB82F0891_var;
    unitgroup auto86A9ECD0_g;
    int auto86A9ECD0_u;
    unit auto86A9ECD0_var;
    const int auto3ABBD8B4_n = 50;
    int auto3ABBD8B4_i;
    unitgroup auto908D8921_g;
    int auto908D8921_u;
    unit auto908D8921_var;
    unitgroup auto0C449AB9_g;
    int auto0C449AB9_u;
    unit auto0C449AB9_var;
    const int autoC72B89E2_n = 50;
    int autoC72B89E2_i;
    unitgroup autoE44344C1_g;
    int autoE44344C1_u;
    unit autoE44344C1_var;
    unitgroup autoC74040E1_g;
    int autoC74040E1_u;
    unit autoC74040E1_var;
    const int autoD35E2BAA_n = 65;
    int autoD35E2BAA_i;
    unitgroup auto1AC268DD_g;
    int auto1AC268DD_u;
    unit auto1AC268DD_var;
    unitgroup auto20D142FE_g;
    int auto20D142FE_u;
    unit auto20D142FE_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    VisRevealArea(gv_pLAYER_01_USER, RegionFromId(76), 20.0, false);
    VisRevealArea(gv_pLAYER_01_USER, RegionFromId(75), 20.0, false);
    VisRevealArea(gv_pLAYER_01_USER, RegionFromId(77), 20.0, false);
    SoundPlayForPlayer(SoundLink("M4RadioChatter", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    CameraLockInput(gv_pLAYER_01_USER, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(823589005), 4.0, -1, 10.0, true);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 2.0);
    libNtve_gf_GlobalCinematicSetting(true);
    Wait(5.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("M4Artillery1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(1.0, c_timeReal);
    for (auto506A4D1D_i = 1; auto506A4D1D_i <= auto506A4D1D_n; auto506A4D1D_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(76)));
    }
    UnitRemove(gv_colonelGraves);
    UnitRemove(gv_sergeantJerico);
    auto5023C553_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5023C553_u = UnitGroupCount(auto5023C553_g, c_unitCountAll);
    for (;; auto5023C553_u -= 1) {
        auto5023C553_var = UnitGroupUnitFromEnd(auto5023C553_g, auto5023C553_u);
        if (auto5023C553_var == null) { break; }
        UnitKill(auto5023C553_var);
    }
    auto2C9D752B_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterGroundUnit - 32))), 0);
    auto2C9D752B_u = UnitGroupCount(auto2C9D752B_g, c_unitCountAll);
    for (;; auto2C9D752B_u -= 1) {
        auto2C9D752B_var = UnitGroupUnitFromEnd(auto2C9D752B_g, auto2C9D752B_u);
        if (auto2C9D752B_var == null) { break; }
        UnitKill(auto2C9D752B_var);
    }
    SoundPlayForPlayer(SoundLink("M4Artillery2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(0.7, c_timeReal);
    for (auto3E58D6B0_i = 1; auto3E58D6B0_i <= auto3E58D6B0_n; auto3E58D6B0_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(75)));
    }
    auto6ECBF5E6_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(75), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6ECBF5E6_u = UnitGroupCount(auto6ECBF5E6_g, c_unitCountAll);
    for (;; auto6ECBF5E6_u -= 1) {
        auto6ECBF5E6_var = UnitGroupUnitFromEnd(auto6ECBF5E6_g, auto6ECBF5E6_u);
        if (auto6ECBF5E6_var == null) { break; }
        UnitKill(auto6ECBF5E6_var);
    }
    auto5086E2AE_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(75), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterGroundUnit - 32))), 0);
    auto5086E2AE_u = UnitGroupCount(auto5086E2AE_g, c_unitCountAll);
    for (;; auto5086E2AE_u -= 1) {
        auto5086E2AE_var = UnitGroupUnitFromEnd(auto5086E2AE_g, auto5086E2AE_u);
        if (auto5086E2AE_var == null) { break; }
        UnitKill(auto5086E2AE_var);
    }
    CameraShake(gv_pLAYER_01_USER, "Light", "Shake", 0.0, 0.0, 2.0);
    UnitKill(UnitFromId(534092670));
    Wait(3.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4Artillery2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(0.7, c_timeReal);
    for (auto1B6439C2_i = 1; auto1B6439C2_i <= auto1B6439C2_n; auto1B6439C2_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(77)));
    }
    autoB82F0891_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(77), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB82F0891_u = UnitGroupCount(autoB82F0891_g, c_unitCountAll);
    for (;; autoB82F0891_u -= 1) {
        autoB82F0891_var = UnitGroupUnitFromEnd(autoB82F0891_g, autoB82F0891_u);
        if (autoB82F0891_var == null) { break; }
        UnitKill(autoB82F0891_var);
    }
    auto86A9ECD0_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(77), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterGroundUnit - 32))), 0);
    auto86A9ECD0_u = UnitGroupCount(auto86A9ECD0_g, c_unitCountAll);
    for (;; auto86A9ECD0_u -= 1) {
        auto86A9ECD0_var = UnitGroupUnitFromEnd(auto86A9ECD0_g, auto86A9ECD0_u);
        if (auto86A9ECD0_var == null) { break; }
        UnitKill(auto86A9ECD0_var);
    }
    SoundPlayForPlayer(SoundLink("M4Artillery3", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(0.7, c_timeReal);
    for (auto3ABBD8B4_i = 1; auto3ABBD8B4_i <= auto3ABBD8B4_n; auto3ABBD8B4_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(76)));
    }
    auto908D8921_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto908D8921_u = UnitGroupCount(auto908D8921_g, c_unitCountAll);
    for (;; auto908D8921_u -= 1) {
        auto908D8921_var = UnitGroupUnitFromEnd(auto908D8921_g, auto908D8921_u);
        if (auto908D8921_var == null) { break; }
        UnitKill(auto908D8921_var);
    }
    auto0C449AB9_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterGroundUnit - 32))), 0);
    auto0C449AB9_u = UnitGroupCount(auto0C449AB9_g, c_unitCountAll);
    for (;; auto0C449AB9_u -= 1) {
        auto0C449AB9_var = UnitGroupUnitFromEnd(auto0C449AB9_g, auto0C449AB9_u);
        if (auto0C449AB9_var == null) { break; }
        UnitKill(auto0C449AB9_var);
    }
    CameraShake(gv_pLAYER_01_USER, "Light", "Shake", 0.0, 0.0, 2.0);
    Wait(3.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4Artillery2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(0.7, c_timeReal);
    for (autoC72B89E2_i = 1; autoC72B89E2_i <= autoC72B89E2_n; autoC72B89E2_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(75)));
    }
    autoE44344C1_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(77), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE44344C1_u = UnitGroupCount(autoE44344C1_g, c_unitCountAll);
    for (;; autoE44344C1_u -= 1) {
        autoE44344C1_var = UnitGroupUnitFromEnd(autoE44344C1_g, autoE44344C1_u);
        if (autoE44344C1_var == null) { break; }
        UnitKill(autoE44344C1_var);
    }
    autoC74040E1_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(77), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterGroundUnit - 32))), 0);
    autoC74040E1_u = UnitGroupCount(autoC74040E1_g, c_unitCountAll);
    for (;; autoC74040E1_u -= 1) {
        autoC74040E1_var = UnitGroupUnitFromEnd(autoC74040E1_g, autoC74040E1_u);
        if (autoC74040E1_var == null) { break; }
        UnitKill(autoC74040E1_var);
    }
    SoundPlayForPlayer(SoundLink("M4Artillery1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    GameSetLighting("Agria", 3.0);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    Wait(1.0, c_timeReal);
    for (autoD35E2BAA_i = 1; autoD35E2BAA_i <= autoD35E2BAA_n; autoD35E2BAA_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(76)));
    }
    auto1AC268DD_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1AC268DD_u = UnitGroupCount(auto1AC268DD_g, c_unitCountAll);
    for (;; auto1AC268DD_u -= 1) {
        auto1AC268DD_var = UnitGroupUnitFromEnd(auto1AC268DD_g, auto1AC268DD_u);
        if (auto1AC268DD_var == null) { break; }
        UnitKill(auto1AC268DD_var);
    }
    auto20D142FE_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(76), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterGroundUnit - 32))), 0);
    auto20D142FE_u = UnitGroupCount(auto20D142FE_g, c_unitCountAll);
    for (;; auto20D142FE_u -= 1) {
        auto20D142FE_var = UnitGroupUnitFromEnd(auto20D142FE_g, auto20D142FE_u);
        if (auto20D142FE_var == null) { break; }
        UnitKill(auto20D142FE_var);
    }
    CameraShake(gv_pLAYER_01_USER, "Light", "Shake", 0.0, 0.0, 2.0);
    Wait(6.0, c_timeGame);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackArtillery_Init () {
    gt_CounterattackArtillery = TriggerCreate("gt_CounterattackArtillery_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: DayandNightCycle
//--------------------------------------------------------------------------------------------------
bool gt_DayandNightCycle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto5CDCE109_n = 50;
    int auto5CDCE109_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto5CDCE109_i = 1; auto5CDCE109_i <= auto5CDCE109_n; auto5CDCE109_i += 1) {
        GameSetLighting("AiurMorning", 10.0);
        gv_lancerMorning = true;
        gv_lancerNight = false;
        Wait(132.0, c_timeGame);
        GameSetLighting("Tarsonis", 30.0);
        gv_lancerDay = true;
        gv_lancerMorning = false;
        Wait(318.0, c_timeGame);
        GameSetLighting("BelShirSunset", 10.0);
        gv_lancerAfternoon = true;
        gv_lancerDay = false;
        Wait(132.0, c_timeGame);
        GameSetLighting("AiurNight", 30.0);
        gv_lancerNight = true;
        gv_lancerAfternoon = false;
        Wait(318.0, c_timeGame);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DayandNightCycle_Init () {
    gt_DayandNightCycle = TriggerCreate("gt_DayandNightCycle_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterattackOver
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackOver_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoA115FFB8_g;
    int autoA115FFB8_u;
    unit autoA115FFB8_var;
    unitgroup auto92768569_g;
    int auto92768569_u;
    unit auto92768569_var;
    unitgroup auto85046E45_g;
    int auto85046E45_u;
    unit auto85046E45_var;
    unitgroup auto7B557934_g;
    int auto7B557934_u;
    unit auto7B557934_var;
    unitgroup auto6593569C_g;
    int auto6593569C_u;
    unit auto6593569C_var;
    const int auto95F61015_n = 5;
    int auto95F61015_i;
    unitgroup auto280A7B74_g;
    int auto280A7B74_u;
    unit auto280A7B74_var;
    unitgroup autoDFB0772D_g;
    int autoDFB0772D_u;
    unit autoDFB0772D_var;
    unitgroup auto75ADF564_g;
    int auto75ADF564_u;
    unit auto75ADF564_var;
    unitgroup auto7CED000C_g;
    int auto7CED000C_u;
    unit auto7CED000C_var;
    unitgroup auto580C131A_g;
    int auto580C131A_u;
    unit auto580C131A_var;
    unitgroup autoAFEA0D51_g;
    int autoAFEA0D51_u;
    unit autoAFEA0D51_var;
    unitgroup autoABBBA740_g;
    int autoABBBA740_u;
    unit autoABBBA740_var;
    unitgroup autoA1E80ADF_g;
    int autoA1E80ADF_u;
    unit autoA1E80ADF_var;
    unitgroup auto079DDE86_g;
    int auto079DDE86_u;
    unit auto079DDE86_var;
    unitgroup auto67BB3C58_g;
    int auto67BB3C58_u;
    unit auto67BB3C58_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_ShowHideHeroPanel(1, false);
    lib1926661B_gf_ShowHideHeroPanel(2, false);
    lib1926661B_gf_ShowHideHeroPanel(3, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.0);
    gv_counterattackSectionActive = 0;
    gv_routhe6 = 1;
    gv_lancerStarts = 1;
    gv_counterattackLighting = false;
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(100.00, 100.00, 100.00), 0.0, true);
    CinematicFade(false, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    PingDestroyAll();
    Wait(1.0, c_timeReal);
    PlayerSetAlliance(gv_pLAYER_01_USER, c_allianceIdVision, gv_pLAYER_03_ROACHES_HOSTILE, false);
    TriggerStop(gt_CounterAttackUnitGroupFills);
    TriggerEnable(gt_CounterAttackUnitGroupFills, false);
    TriggerDestroy(gt_CounterAttackUnitGroupFills);
    GameSetLighting("AiurNight", 0.0);
    Wait(1.0, c_timeReal);
    CameraLockInput(gv_pLAYER_01_USER, false);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(76), c_fillTypeFogged, false);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(75), c_fillTypeFogged, false);
    VisFillArea(gv_pLAYER_01_USER, RegionFromId(77), c_fillTypeFogged, false);
    autoA115FFB8_g = UnitGroup(null, c_playerAny, RegionFromId(85), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoA115FFB8_u = UnitGroupCount(autoA115FFB8_g, c_unitCountAll);
    for (;; autoA115FFB8_u -= 1) {
        autoA115FFB8_var = UnitGroupUnitFromEnd(autoA115FFB8_g, autoA115FFB8_u);
        if (autoA115FFB8_var == null) { break; }
        UnitRemove(autoA115FFB8_var);
    }
    auto92768569_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto92768569_u = UnitGroupCount(auto92768569_g, c_unitCountAll);
    for (;; auto92768569_u -= 1) {
        auto92768569_var = UnitGroupUnitFromEnd(auto92768569_g, auto92768569_u);
        if (auto92768569_var == null) { break; }
        UnitRemove(auto92768569_var);
    }
    auto85046E45_g = gv_counterattackWave1;
    auto85046E45_u = UnitGroupCount(auto85046E45_g, c_unitCountAll);
    for (;; auto85046E45_u -= 1) {
        auto85046E45_var = UnitGroupUnitFromEnd(auto85046E45_g, auto85046E45_u);
        if (auto85046E45_var == null) { break; }
        UnitRemove(auto85046E45_var);
    }
    auto7B557934_g = gv_counterattackWave2;
    auto7B557934_u = UnitGroupCount(auto7B557934_g, c_unitCountAll);
    for (;; auto7B557934_u -= 1) {
        auto7B557934_var = UnitGroupUnitFromEnd(auto7B557934_g, auto7B557934_u);
        if (auto7B557934_var == null) { break; }
        UnitRemove(auto7B557934_var);
    }
    auto6593569C_g = gv_counterattackWave3;
    auto6593569C_u = UnitGroupCount(auto6593569C_g, c_unitCountAll);
    for (;; auto6593569C_u -= 1) {
        auto6593569C_var = UnitGroupUnitFromEnd(auto6593569C_g, auto6593569C_u);
        if (auto6593569C_var == null) { break; }
        UnitRemove(auto6593569C_var);
    }
    for (auto95F61015_i = 1; auto95F61015_i <= auto95F61015_n; auto95F61015_i += 1) {
        UnitCreate(1, "MiningDrone", 0, gv_pLAYER_01_USER, RegionRandomPoint(RegionFromId(84)), 270.0);
    }
    auto280A7B74_g = UnitGroup(null, 12, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto280A7B74_u = UnitGroupCount(auto280A7B74_g, c_unitCountAll);
    for (;; auto280A7B74_u -= 1) {
        auto280A7B74_var = UnitGroupUnitFromEnd(auto280A7B74_g, auto280A7B74_u);
        if (auto280A7B74_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto280A7B74_var, true);
        UnitSetOwner(auto280A7B74_var, gv_pLAYER_01_USER, true);
        libNtve_gf_MakeUnitUncommandable(auto280A7B74_var, false);
    }
    UnitSetPropertyFixed(UnitFromId(1872158756), c_unitPropLifePercent, 44.0);
    UnitSetPropertyFixed(UnitFromId(523901791), c_unitPropLifePercent, 55.0);
    UnitSetPropertyFixed(UnitFromId(1236282489), c_unitPropLifePercent, 22.0);
    autoDFB0772D_g = UnitGroup("TR17", gv_pLAYER_01_USER, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoDFB0772D_u = UnitGroupCount(autoDFB0772D_g, c_unitCountAll);
    for (;; autoDFB0772D_u -= 1) {
        autoDFB0772D_var = UnitGroupUnitFromEnd(autoDFB0772D_g, autoDFB0772D_u);
        if (autoDFB0772D_var == null) { break; }
        UnitIssueOrder(autoDFB0772D_var, Order(AbilityCommand("TR17Siege", 0)), c_orderQueueReplace);
    }
    auto75ADF564_g = UnitGroup("InfantryMortar", gv_pLAYER_01_USER, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto75ADF564_u = UnitGroupCount(auto75ADF564_g, c_unitCountAll);
    for (;; auto75ADF564_u -= 1) {
        auto75ADF564_var = UnitGroupUnitFromEnd(auto75ADF564_g, auto75ADF564_u);
        if (auto75ADF564_var == null) { break; }
        UnitIssueOrder(auto75ADF564_var, Order(AbilityCommand("InfantryMortarModeSiege", 0)), c_orderQueueReplace);
    }
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1248098134), 0.0, -1, 10.0, true);
    auto7CED000C_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7CED000C_u = UnitGroupCount(auto7CED000C_g, c_unitCountAll);
    for (;; auto7CED000C_u -= 1) {
        auto7CED000C_var = UnitGroupUnitFromEnd(auto7CED000C_g, auto7CED000C_u);
        if (auto7CED000C_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto7CED000C_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), gv_pLAYER_01_USER);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "WilliamGraves", c_unitCreateIgnorePlacement, gv_pLAYER_04_UPL_NEUTRAL, PointFromId(286390327));
    gv_colonelGraves = UnitLastCreated();
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "RileyJerico", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, RegionRandomPoint(RegionFromId(78)));
    gv_sergeantJerico = UnitLastCreated();
    lib1926661B_gf_SetHeroPanelUnit(2, gv_sergeantJerico);
    lib1926661B_gf_ShowHideHeroPanel(2, true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "CARR", c_unitCreateIgnorePlacement, gv_pLAYER_01_USER, RegionRandomPoint(RegionFromId(78)));
    gv_cARR = UnitLastCreated();
    lib1926661B_gf_SetHeroPanelUnit(3, gv_cARR);
    lib1926661B_gf_ShowHideHeroPanel(3, true);
    libNtve_gf_MakeUnitInvulnerable(UnitLastCreated(), true);
    Wait(2.0, c_timeReal);
    UISetMiniMapCameraFoVVisible(false);
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/98749572"), StringExternal("Param/Value/7C57D286"), 10.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    Wait(8.0, c_timeReal);
    UIHideTextCrawl(PlayerGroupAll());
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(false);
    ObjectiveDestroy(gv_routheObjective5);
    PlayerModifyPropertyInt(gv_pLAYER_01_USER, c_playerPropVespene, c_playerPropOperSetTo, 522);
    UISetMiniMapCameraFoVVisible(true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, true);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, true);
    GameTimeOfDaySet("07:00:00");
    GameSetLighting("AiurMorning", 3.0);
    RegionPlayableMapSet(RegionFromId(71));
    CameraSetBounds(PlayerGroupAll(), RegionEntireMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    TriggerExecute(gt_DayandNightCycle, true, false);
    auto580C131A_g = UnitGroup("MiningDrone", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto580C131A_u = UnitGroupCount(auto580C131A_g, c_unitCountAll);
    for (;; auto580C131A_u -= 1) {
        auto580C131A_var = UnitGroupUnitFromEnd(auto580C131A_g, auto580C131A_u);
        if (auto580C131A_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto580C131A_var, true);
    }
    autoAFEA0D51_g = UnitGroup(null, 0, RegionFromId(34), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoAFEA0D51_u = UnitGroupCount(autoAFEA0D51_g, c_unitCountAll);
    for (;; autoAFEA0D51_u -= 1) {
        autoAFEA0D51_var = UnitGroupUnitFromEnd(autoAFEA0D51_g, autoAFEA0D51_u);
        if (autoAFEA0D51_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoAFEA0D51_var, true);
        UnitSetState(autoAFEA0D51_var, c_unitStateHighlightable, false);
        UnitSetState(autoAFEA0D51_var, c_unitStateSelectable, false);
        UnitSetState(autoAFEA0D51_var, c_unitStateTargetable, false);
        libNtve_gf_MakeUnitInvulnerable(autoAFEA0D51_var, true);
    }
    autoABBBA740_g = UnitGroup(null, 0, RegionFromId(35), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoABBBA740_u = UnitGroupCount(autoABBBA740_g, c_unitCountAll);
    for (;; autoABBBA740_u -= 1) {
        autoABBBA740_var = UnitGroupUnitFromEnd(autoABBBA740_g, autoABBBA740_u);
        if (autoABBBA740_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoABBBA740_var, true);
        UnitSetState(autoABBBA740_var, c_unitStateHighlightable, false);
        UnitSetState(autoABBBA740_var, c_unitStateSelectable, false);
        UnitSetState(autoABBBA740_var, c_unitStateTargetable, false);
        libNtve_gf_MakeUnitInvulnerable(autoABBBA740_var, true);
    }
    autoA1E80ADF_g = UnitGroup("InfantryMortar", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoA1E80ADF_u = UnitGroupCount(autoA1E80ADF_g, c_unitCountAll);
    for (;; autoA1E80ADF_u -= 1) {
        autoA1E80ADF_var = UnitGroupUnitFromEnd(autoA1E80ADF_g, autoA1E80ADF_u);
        if (autoA1E80ADF_var == null) { break; }
        UnitSetTeamColorIndex(autoA1E80ADF_var, 0);
    }
    auto079DDE86_g = UnitGroup("FluoriteDeposit", c_playerAny, RegionFromId(83), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto079DDE86_u = UnitGroupCount(auto079DDE86_g, c_unitCountAll);
    for (;; auto079DDE86_u -= 1) {
        auto079DDE86_var = UnitGroupUnitFromEnd(auto079DDE86_g, auto079DDE86_u);
        if (auto079DDE86_var == null) { break; }
        UnitRemove(auto079DDE86_var);
    }
    auto67BB3C58_g = UnitGroup("InfantryMortar", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto67BB3C58_u = UnitGroupCount(auto67BB3C58_g, c_unitCountAll);
    for (;; auto67BB3C58_u -= 1) {
        auto67BB3C58_var = UnitGroupUnitFromEnd(auto67BB3C58_g, auto67BB3C58_u);
        if (auto67BB3C58_var == null) { break; }
        UnitSetTeamColorIndex(auto67BB3C58_var, 0);
    }
    UnitCreate(1, "FluoriteDeposit", c_unitCreateIgnorePlacement, 0, PointFromId(622736254), 270.0);
    CinematicFade(true, 2.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLGenerator", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "MiningDrone", true);
    libNtve_gf_HideGameUI(true, PlayerGroupAll());
    PlayerSetColorIndex(1, 2, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00026", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_GravesVanishes, true, false);
    TriggerExecute(gt_LancerTutorial1Repair, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackOver_Init () {
    gt_CounterattackOver = TriggerCreate("gt_CounterattackOver_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1Repair_Func (bool testConds, bool runActions) {
    // Variable Declarations
    actor lv_reticle;
    int lv_textTag;

    // Automatic Variable Declarations
    unitgroup auto261186F7_g;
    int auto261186F7_u;
    unit auto261186F7_var;

    // Variable Initialization
    lv_textTag = c_textTagNone;

    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    auto261186F7_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto261186F7_u = UnitGroupCount(auto261186F7_g, c_unitCountAll);
    for (;; auto261186F7_u -= 1) {
        auto261186F7_var = UnitGroupUnitFromEnd(auto261186F7_g, auto261186F7_u);
        if (auto261186F7_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto261186F7_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew1", -1), StringExternal("Param/Value/7B10BC90"), StringExternal("Param/Value/BBBF8920"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew1a", -1), StringExternal("Param/Value/6097FE38"), StringExternal("Param/Value/9063B298"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew2", -1), StringExternal("Param/Value/82DB1C3A"), StringExternal("Param/Value/71EEC02A"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew3", -1), StringExternal("Param/Value/04535736"), StringExternal("Param/Value/E4CE7778"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew3a", -1), StringExternal("Param/Value/8F560966"), StringExternal("Param/Value/D8D45316"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("UPLMiningDroneRepair", 0), true);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLMiningDroneRepair", 0), true);
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranMainObjective, libVCMI_ge_CampaginReticleSize_Medium, null, UnitFromId(1236282489), "Ref_Center");
    gv_lancerRepairPings1 = libNtve_gf_ActorLastCreated();
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranMainObjective, libVCMI_ge_CampaginReticleSize_Large, null, UnitFromId(1872158756), "Ref_Center");
    gv_lancerRepairPings2 = libNtve_gf_ActorLastCreated();
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranMainObjective, libVCMI_ge_CampaginReticleSize_Large, null, UnitFromId(523901791), "Ref_Center");
    gv_lancerRepairPings3 = libNtve_gf_ActorLastCreated();
    ObjectiveCreate(StringExternal("Param/Value/6BC8971C"), StringExternal("Param/Value/AF0A30DF"), c_objectiveStateActive, true);
    gv_lancerRepairSomething = ObjectiveLastCreated();
    ObjectiveShow(gv_lancerRepairSomething, PlayerGroupAll(), true);
    Wait(240.0, c_timeGame);
    if ((gv_lancerFalseStart == false)) {
        libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/D820170B"));
        SoundPlayForPlayer(SoundLink("SkyTank_Missile_TargetWarning", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        Wait(6.0, c_timeReal);
        libVCUI_gf_HideCampaignDirective();
        ObjectiveDestroy(gv_lancerBuildFOB);
        ObjectiveDestroy(gv_lancerBuildManufacturingFacility);
        ObjectiveDestroy(gv_lancerRepairSomething);
    }

    TriggerExecute(gt_LancerTutorial2Complete, false, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1Repair_Init () {
    gt_LancerTutorial1Repair = TriggerCreate("gt_LancerTutorial1Repair_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair Complete1
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1RepairComplete1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!(((EventUnitTargetUnit() == UnitFromId(1236282489))))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3, false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLMiningDroneRepair", 0), false);
    ObjectiveSetState(gv_lancerRepairSomething, c_objectiveStateCompleted);
    libNtve_gf_KillModel(gv_lancerRepairPings1);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew4", -1), StringExternal("Param/Value/CCC7B6A3"), StringExternal("Param/Value/8B923B1C"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew4a", -1), StringExternal("Param/Value/46C269AE"), StringExternal("Param/Value/06ED4079"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_LancerTutorial2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1RepairComplete1_Init () {
    gt_LancerTutorial1RepairComplete1 = TriggerCreate("gt_LancerTutorial1RepairComplete1_Func");
    TriggerAddEventUnitAbility(gt_LancerTutorial1RepairComplete1, null, AbilityCommand("UPLMiningDroneRepair", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair Complete1A
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1RepairComplete1A_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!(((EventUnitTargetUnit() == UnitFromId(1236282489))))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3, false);
    libNtve_gf_KillModel(gv_lancerRepairPings1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1RepairComplete1A_Init () {
    gt_LancerTutorial1RepairComplete1A = TriggerCreate("gt_LancerTutorial1RepairComplete1A_Func");
    TriggerAddEventUnitAbility(gt_LancerTutorial1RepairComplete1A, null, AbilityCommand("UPLMiningDroneRepair", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair Complete2
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1RepairComplete2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!(((EventUnitTargetUnit() == UnitFromId(1872158756))))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_LancerTutorial1RepairComplete1, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3, false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLMiningDroneRepair", 0), false);
    ObjectiveSetState(gv_lancerRepairSomething, c_objectiveStateCompleted);
    libNtve_gf_KillModel(gv_lancerRepairPings2);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew4", -1), StringExternal("Param/Value/E9AD066A"), StringExternal("Param/Value/DDAFE92D"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew4a", -1), StringExternal("Param/Value/0B6553CD"), StringExternal("Param/Value/32D6014B"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_LancerTutorial2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1RepairComplete2_Init () {
    gt_LancerTutorial1RepairComplete2 = TriggerCreate("gt_LancerTutorial1RepairComplete2_Func");
    TriggerAddEventUnitAbility(gt_LancerTutorial1RepairComplete2, null, AbilityCommand("UPLMiningDroneRepair", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair Complete2A
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1RepairComplete2A_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!(((EventUnitTargetUnit() == UnitFromId(1872158756))))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3, false);
    libNtve_gf_KillModel(gv_lancerRepairPings2);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1RepairComplete2A_Init () {
    gt_LancerTutorial1RepairComplete2A = TriggerCreate("gt_LancerTutorial1RepairComplete2A_Func");
    TriggerAddEventUnitAbility(gt_LancerTutorial1RepairComplete2A, null, AbilityCommand("UPLMiningDroneRepair", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair Complete3
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1RepairComplete3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!(((EventUnitTargetUnit() == UnitFromId(523901791))))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete1, false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLMiningDroneRepair", 0), false);
    ObjectiveSetState(gv_lancerRepairSomething, c_objectiveStateCompleted);
    libNtve_gf_KillModel(gv_lancerRepairPings3);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew4", -1), StringExternal("Param/Value/BC6EA2BA"), StringExternal("Param/Value/4122D360"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew4a", -1), StringExternal("Param/Value/A1BCC46A"), StringExternal("Param/Value/04C068A7"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_LancerTutorial2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1RepairComplete3_Init () {
    gt_LancerTutorial1RepairComplete3 = TriggerCreate("gt_LancerTutorial1RepairComplete3_Func");
    TriggerAddEventUnitAbility(gt_LancerTutorial1RepairComplete3, null, AbilityCommand("UPLMiningDroneRepair", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 1 Repair Complete3A
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial1RepairComplete3A_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!(((EventUnitTargetUnit() == UnitFromId(523901791))))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3, false);
    libNtve_gf_KillModel(gv_lancerRepairPings3);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial1RepairComplete3A_Init () {
    gt_LancerTutorial1RepairComplete3A = TriggerCreate("gt_LancerTutorial1RepairComplete3A_Func");
    TriggerAddEventUnitAbility(gt_LancerTutorial1RepairComplete3A, null, AbilityCommand("UPLMiningDroneRepair", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 2
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew5", -1), StringExternal("Param/Value/A41072E4"), StringExternal("Param/Value/733324FD"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew5a", -1), StringExternal("Param/Value/99827EAE"), StringExternal("Param/Value/D8452C84"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLManufacturingFacility", true);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLBuild", 10), true);
    ObjectiveCreate(StringExternal("Param/Value/DABEDE44"), StringExternal("Param/Value/B8C40FB2"), c_objectiveStateActive, true);
    gv_lancerBuildManufacturingFacility = ObjectiveLastCreated();
    ObjectiveShow(gv_lancerBuildManufacturingFacility, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial2_Init () {
    gt_LancerTutorial2 = TriggerCreate("gt_LancerTutorial2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial 2 Complete
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorial2Complete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoA6C67993_g;
    int autoA6C67993_u;
    unit autoA6C67993_var;

    // Conditions
    if (testConds) {
        if (!((gv_lancerFalseStart == false))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnitProgressUnit()) == "UPLManufacturingFacility"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    ObjectiveDestroy(gv_lancerRepairSomething);
    ObjectiveSetState(gv_lancerBuildManufacturingFacility, c_objectiveStateCompleted);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLBuild", 10), false);
    TransmissionClearAll();
    TriggerStop(gt_LancerTutorial1RepairComplete1);
    TriggerStop(gt_LancerTutorial1RepairComplete1A);
    TriggerStop(gt_LancerTutorial1RepairComplete2);
    TriggerStop(gt_LancerTutorial1RepairComplete2A);
    TriggerStop(gt_LancerTutorial1RepairComplete3);
    TriggerStop(gt_LancerTutorial1RepairComplete3A);
    TriggerStop(gt_LancerTutorial2);
    TriggerStop(gt_LancerTutorial1Repair);
    TriggerDestroy(gt_LancerTutorial1Repair);
    TriggerEnable(gt_LancerTutorial1RepairComplete1, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete1A, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete2A, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3, false);
    TriggerEnable(gt_LancerTutorial1RepairComplete3A, false);
    TriggerEnable(gt_LancerTutorial2, false);
    gv_lancerFalseStart = true;
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLMiningDroneRepair", 0), false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLBuild", 10), false);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLBuild", 9), false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLManufacturingFacility", true);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("UPLMiningDroneRepair", 0), true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLForwardOperatingBase", true);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("UPLBuild", 9), false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLCommStation", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "MiningDrone", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CSV", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryOfficer", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CARR", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLRnDFacility", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLBillet", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLHeadquarters", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLExhumer", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLElectrostaticDefenseTower", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "UPLGenerator", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryHeavy", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryFlamethrower", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryRifle", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryMortar", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfantryRocket", true);
    TechTreeUnitHelp(gv_pLAYER_01_USER, "InfantryRocket", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "A6", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Z1", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "RoutheTank", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "TR17", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CSV", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryArmorLevel2", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehiclePlatingLevel2", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryWeaponsLevel2", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehicleWeaponsLevel2", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryArmorLevel1", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehiclePlatingLevel1", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLInfantryWeaponsLevel1", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "UPLVehicleWeaponsLevel1", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "InfantryRifleRangeUpgrade", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "InfantryMedkit", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "InfantryMortarRangeUpgrade", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "RoutheTankArmorPlating", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "CSVPersonnelCarrier", true);
    TechTreeUpgradeAllow(gv_pLAYER_01_USER, "CSVSupplyLineManagement", true);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("Z1BadgerBomb", 0), true);
    autoA6C67993_g = UnitGroup("MiningDrone", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA6C67993_u = UnitGroupCount(autoA6C67993_g, c_unitCountAll);
    for (;; autoA6C67993_u -= 1) {
        autoA6C67993_var = UnitGroupUnitFromEnd(autoA6C67993_g, autoA6C67993_u);
        if (autoA6C67993_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(autoA6C67993_var, false);
    }
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew8", -1), StringExternal("Param/Value/6BF4FA13"), StringExternal("Param/Value/C885BB8B"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew8a", -1), StringExternal("Param/Value/C8B25682"), StringExternal("Param/Value/515AB7CF"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew9", -1), StringExternal("Param/Value/379E34AE"), StringExternal("Param/Value/2AA76C3A"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARRNew9a", -1), StringExternal("Param/Value/48EC6117"), StringExternal("Param/Value/144AB87A"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    libNtve_gf_MakeUnitInvulnerable(gv_cARR, false);
    TriggerExecute(gt_LancerTutorialFinal, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorial2Complete_Init () {
    gt_LancerTutorial2Complete = TriggerCreate("gt_LancerTutorial2Complete_Func");
    TriggerAddEventUnitConstructProgress(gt_LancerTutorial2Complete, null, c_unitProgressStageComplete);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Lancer Tutorial Final
//--------------------------------------------------------------------------------------------------
bool gt_LancerTutorialFinal_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto265659EA_g;
    int auto265659EA_u;
    unit auto265659EA_var;
    unitgroup autoE0A5CF3D_g;
    int autoE0A5CF3D_u;
    unit autoE0A5CF3D_var;
    unitgroup auto6060EDA2_g;
    int auto6060EDA2_u;
    unit auto6060EDA2_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_lancerRepairPings1);
    libNtve_gf_KillModel(gv_lancerRepairPings2);
    libNtve_gf_KillModel(gv_lancerRepairPings3);
    TriggerEnable(TriggerGetCurrent(), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("UPLMiningDroneRepair", 0), true);
    TriggerEnable(gt_CARRRebuilt, true);
    RegionPlayableMapSet(RegionEntireMap());
    CameraSetBounds(PlayerGroupAll(), RegionEntireMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    auto265659EA_g = UnitGroup("DestructibleAiurDebris6x6", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto265659EA_u = UnitGroupCount(auto265659EA_g, c_unitCountAll);
    for (;; auto265659EA_u -= 1) {
        auto265659EA_var = UnitGroupUnitFromEnd(auto265659EA_g, auto265659EA_u);
        if (auto265659EA_var == null) { break; }
        UnitSetState(auto265659EA_var, c_unitStateHighlightable, true);
        UnitSetState(auto265659EA_var, c_unitStateSelectable, true);
        UnitSetState(auto265659EA_var, c_unitStateTargetable, true);
        libNtve_gf_MakeUnitInvulnerable(auto265659EA_var, false);
        UnitSetInfoText2(UnitLastCreated(), StringExternal("Param/Value/051895CA"));
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00036", null, true, gv_sergeantJerico, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_sergeantJerico, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4Jerico3a", -1), StringExternal("Param/Value/4F95A1DB"), StringExternal("Param/Value/2055AACC"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_sergeantJerico, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4Jerico3b", -1), StringExternal("Param/Value/F7E6893D"), StringExternal("Param/Value/92819379"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_TipJericoUnitQ, true, false);
    TriggerExecute(gt_TipGravesUnitQ, true, false);
    ObjectiveCreate(StringExternal("Param/Value/14618981"), StringToText(""), c_objectiveStateActive, true);
    gv_lancerObjective = ObjectiveLastCreated();
    ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
    MinimapPing(PlayerGroupAll(), PointFromId(401549130), 3.0, Color(100.00, 0.00, 0.00));
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(401549130), StringExternal("Param/Value/83A5E375"));
    gv_lancerObjectivePing = PingLastCreated();
    gv_lancerFog = 1;
    autoE0A5CF3D_g = UnitGroup(null, 0, RegionFromId(34), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE0A5CF3D_u = UnitGroupCount(autoE0A5CF3D_g, c_unitCountAll);
    for (;; autoE0A5CF3D_u -= 1) {
        autoE0A5CF3D_var = UnitGroupUnitFromEnd(autoE0A5CF3D_g, autoE0A5CF3D_u);
        if (autoE0A5CF3D_var == null) { break; }
        UnitSetState(autoE0A5CF3D_var, c_unitStateHighlightable, true);
        UnitSetState(autoE0A5CF3D_var, c_unitStateSelectable, true);
        UnitSetState(autoE0A5CF3D_var, c_unitStateTargetable, true);
        libNtve_gf_MakeUnitInvulnerable(autoE0A5CF3D_var, false);
    }
    auto6060EDA2_g = UnitGroup(null, 0, RegionFromId(35), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6060EDA2_u = UnitGroupCount(auto6060EDA2_g, c_unitCountAll);
    for (;; auto6060EDA2_u -= 1) {
        auto6060EDA2_var = UnitGroupUnitFromEnd(auto6060EDA2_g, auto6060EDA2_u);
        if (auto6060EDA2_var == null) { break; }
        UnitSetState(auto6060EDA2_var, c_unitStateHighlightable, true);
        UnitSetState(auto6060EDA2_var, c_unitStateSelectable, true);
        UnitSetState(auto6060EDA2_var, c_unitStateTargetable, true);
        libNtve_gf_MakeUnitInvulnerable(auto6060EDA2_var, false);
    }
    TriggerEnable(gt_PatrolsInTheClearMutas, true);
    TriggerEnable(gt_PatrolsInTheClearUltra, true);
    TriggerExecute(gt_MutasAppear, true, false);
    TriggerExecute(gt_UltrasAppear, true, false);
    Wait(6.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerTutorialFinal_Init () {
    gt_LancerTutorialFinal = TriggerCreate("gt_LancerTutorialFinal_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MutasAppear
//--------------------------------------------------------------------------------------------------
bool gt_MutasAppear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoA676CB2C_g;
    int autoA676CB2C_u;
    unit autoA676CB2C_var;

    // Conditions
    if (testConds) {
        if (!((gv_mutasChosen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoA676CB2C_g = UnitGroup("Mutalisk", gv_pLAYER_06_ROACHES_NEUTRAL, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoA676CB2C_u = UnitGroupCount(autoA676CB2C_g, c_unitCountAll);
    for (;; autoA676CB2C_u -= 1) {
        autoA676CB2C_var = UnitGroupUnitFromEnd(autoA676CB2C_g, autoA676CB2C_u);
        if (autoA676CB2C_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoA676CB2C_var, true);
        UnitSetOwner(autoA676CB2C_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutasAppear_Init () {
    gt_MutasAppear = TriggerCreate("gt_MutasAppear_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: UltrasAppear
//--------------------------------------------------------------------------------------------------
bool gt_UltrasAppear_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7BE7582D_g;
    int auto7BE7582D_u;
    unit auto7BE7582D_var;

    // Conditions
    if (testConds) {
        if (!((gv_ultrasChosen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto7BE7582D_g = UnitGroup("Ultralisk", gv_pLAYER_06_ROACHES_NEUTRAL, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7BE7582D_u = UnitGroupCount(auto7BE7582D_g, c_unitCountAll);
    for (;; auto7BE7582D_u -= 1) {
        auto7BE7582D_var = UnitGroupUnitFromEnd(auto7BE7582D_g, auto7BE7582D_u);
        if (auto7BE7582D_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto7BE7582D_var, true);
        UnitSetOwner(auto7BE7582D_var, gv_pLAYER_03_ROACHES_HOSTILE, true);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_UltrasAppear_Init () {
    gt_UltrasAppear = TriggerCreate("gt_UltrasAppear_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: GravesVanishes
//--------------------------------------------------------------------------------------------------
bool gt_GravesVanishes_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(1.0, c_timeGame);
    UnitRemove(gv_colonelGraves);
    Wait(265.0, c_timeGame);
    SoundPlayForPlayer(SoundLink("SoundDirective", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCUI_gf_DisplayCampaignDirective(StringExternal("Param/Value/5885183B"));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "WilliamGraves", 0, gv_pLAYER_01_USER, PointFromId(286390327));
    gv_colonelGraves = UnitLastCreated();
    lib1926661B_gf_SetHeroPanelUnit(1, gv_colonelGraves);
    lib1926661B_gf_ShowHideHeroPanel(1, true);
    ObjectiveSetName(gv_lancerHeroesObjective, StringExternal("Param/Value/AEE87700"));
    Wait(6.0, c_timeGame);
    libVCUI_gf_HideCampaignDirective();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GravesVanishes_Init () {
    gt_GravesVanishes = TriggerCreate("gt_GravesVanishes_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: MajorAttackGroupDead
//--------------------------------------------------------------------------------------------------
bool gt_MajorAttackGroupDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoF5C164AA_g;
    int autoF5C164AA_u;
    unit autoF5C164AA_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lancerAncillaryObjectiveSet == 0))) {
            return false;
        }

        if (!((UnitGroupCount(gv_majorAttackGroup, c_unitCountAlive) <= 5))) {
            return false;
        }

        if (!((gv_majorAttackGroupActive == 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_lancerAncillaryObjectiveSet = 1;
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_colonelGraves, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4Graves9e1", -1), StringExternal("Param/Value/6C11C3C8"), StringExternal("Param/Value/062B0C86"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(0.25, c_timeReal);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_colonelGraves, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4Graves9e2", -1), StringExternal("Param/Value/1BA8205F"), StringExternal("Param/Value/92860B78"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(1.0, c_timeGame);
    if ((gv_lancerDenDestroyed < 1) && (UnitIsAlive(gv_cARR) == true)) {
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARR5a", -1), StringExternal("Param/Value/5D56BF98"), StringExternal("Param/Value/FA99D20A"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        Wait(0.25, c_timeReal);
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARR5b", -1), StringExternal("Param/Value/D80F2E44"), StringExternal("Param/Value/F9A053EE"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
        RegionPlayableMapSet(RegionEntireMap());
        CameraSetBounds(PlayerGroupAll(), RegionEntireMap(), true);
        UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
        Wait(0.5, c_timeGame);
        autoF5C164AA_g = UnitGroup(null, gv_pLAYER_03_ROACHES_HOSTILE, RegionFromId(60), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterAirUnit - 32))), 0);
        autoF5C164AA_u = UnitGroupCount(autoF5C164AA_g, c_unitCountAll);
        for (;; autoF5C164AA_u -= 1) {
            autoF5C164AA_var = UnitGroupUnitFromEnd(autoF5C164AA_g, autoF5C164AA_u);
            if (autoF5C164AA_var == null) { break; }
            UnitGroupAdd(gv_lancerStructureGroup, autoF5C164AA_var);
        }
        ObjectiveCreate(StringExternal("Param/Value/00769EC3"), StringExternal("Param/Value/98F32D70"), c_objectiveStateActive, false);
        gv_lancerOptional = ObjectiveLastCreated();
        ObjectiveShow(ObjectiveLastCreated(), PlayerGroupAll(), true);
        lib1926661B_gf_CreateObjectivePing(false, PointFromId(1234449871), StringExternal("Param/Value/F6669730"));
        gv_lancerAncillaryPing = PingLastCreated();
        TriggerStop(gt_MajorAttackGroupDead);
        TriggerEnable(TriggerGetCurrent(), false);
        lib1926661B_gf_FlashCheckpointReminder();
    }
    else {
        lib1926661B_gf_FlashCheckpointReminder();
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MajorAttackGroupDead_Init () {
    gt_MajorAttackGroupDead = TriggerCreate("gt_MajorAttackGroupDead_Func");
    TriggerAddEventUnitDied(gt_MajorAttackGroupDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AncillaryDenDead
//--------------------------------------------------------------------------------------------------
bool gt_AncillaryDenDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGroupCount(gv_lancerStructureGroup, c_unitCountAlive) < 3))) {
            return false;
        }

        if (!((gv_majorAttackGroupActive == 1))) {
            return false;
        }

        if (!((gv_lancerDenDestroyed == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_lancerDenDestroyed = 1;
    PingDestroy(gv_lancerAncillaryPing);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00048", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(1.0, c_timeGame);
    if ((PlayerGetPropertyInt(gv_pLAYER_01_USER, c_playerPropSuppliesUsed) <= 75) && (UnitIsAlive(gv_cARR) == true)) {
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
        lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00049", null, true, gv_cARR, false);
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveSetState(gv_lancerOptional, c_objectiveStateCompleted);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_TipAncillaryDenDead, true, false);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_AncillaryDenDead_Init () {
    gt_AncillaryDenDead = TriggerCreate("gt_AncillaryDenDead_Func");
    TriggerAddEventUnitDied(gt_AncillaryDenDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: LancerComplete
//--------------------------------------------------------------------------------------------------
bool gt_LancerComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto05A7B7DB_g;
    int auto05A7B7DB_u;
    unit auto05A7B7DB_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((gv_lancerStarts == 1))) {
            return false;
        }

        if (!((UnitGroupCount(gv_lancerMainBase, c_unitCountAlive) < 3))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    PingDestroy(gv_lancerObjectivePing);
    if ((gv__4thFogReached == false)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M04-Feat", gv_pLAYER_01_USER);
    }
    Wait(1.0, c_timeGame);
    gv_lancerWon = 1;
    ObjectiveSetState(gv_lancerObjective, c_objectiveStateCompleted);
    ObjectiveSetState(gv_lancerHeroesObjective, c_objectiveStateCompleted);
    auto05A7B7DB_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto05A7B7DB_u = UnitGroupCount(auto05A7B7DB_g, c_unitCountAll);
    for (;; auto05A7B7DB_u -= 1) {
        auto05A7B7DB_var = UnitGroupUnitFromEnd(auto05A7B7DB_g, auto05A7B7DB_u);
        if (auto05A7B7DB_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto05A7B7DB_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_colonelGraves, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4Graves9g", -1), StringExternal("Param/Value/71A70727"), StringExternal("Param/Value/271E1E38"), 0.5, c_transmissionDurationSub, true, c_maxPlayers, false);
    if ((UnitIsAlive(gv_cARR) == true)) {
        libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
        TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M4CARR8", -1), StringExternal("Param/Value/E44FAB01"), StringExternal("Param/Value/2F120FA9"), 0.75, c_transmissionDurationSub, true, c_maxPlayers, false);
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/33345747"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00052", "DefenseNet", true, null, true, c_transmissionDurationAdd, 0.0);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "EP01M04|Line00053", null, true, gv_colonelGraves, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    Wait(2.0, c_timeGame);
    TriggerExecute(gt_VictoryLancerCompleted, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_LancerComplete_Init () {
    gt_LancerComplete = TriggerCreate("gt_LancerComplete_Func");
    TriggerAddEventUnitDied(gt_LancerComplete, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Graves Kills
//--------------------------------------------------------------------------------------------------
bool gt_GravesKills_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGetType(libNtve_gf_KillingUnit()) == "WilliamGraves"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_statGravesKills += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_GravesKills_Init () {
    gt_GravesKills = TriggerCreate("gt_GravesKills_Func");
    TriggerAddEventUnitDied(gt_GravesKills, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Jerico Kills
//--------------------------------------------------------------------------------------------------
bool gt_JericoKills_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGetType(libNtve_gf_KillingUnit()) == "RileyJerico"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_statGravesKills += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_JericoKills_Init () {
    gt_JericoKills = TriggerCreate("gt_JericoKills_Func");
    TriggerAddEventUnitDied(gt_JericoKills, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: BadgerBomb Kills
//--------------------------------------------------------------------------------------------------
bool gt_BadgerBombKills_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((EventUnitDamageSourcePlayer() == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_statBadgerKills += 1;
    if ((gv_statBadgerKills >= 200)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M04-Normal", gv_pLAYER_01_USER);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_BadgerBombKills_Init () {
    gt_BadgerBombKills = TriggerCreate("gt_BadgerBombKills_Func");
    TriggerAddEventUnitDamaged(gt_BadgerBombKills, null, c_unitDamageTypeAny, c_unitDamageFatal, "Z1BadgerBombFlameDMG");
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR-17s Built
//--------------------------------------------------------------------------------------------------
bool gt_TR17sBuilt_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "TR17"))) {
            return false;
        }

        if (!((gv_lancerFog > 0))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_statTRsBuilt = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17sBuilt_Init () {
    gt_TR17sBuilt = TriggerCreate("gt_TR17sBuilt_Func");
    TriggerAddEventUnitRegion(gt_TR17sBuilt, null, RegionEntireMap(), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: TR-17 Kills
//--------------------------------------------------------------------------------------------------
bool gt_TR17Kills_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetOwner(libNtve_gf_KillingUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGetType(libNtve_gf_KillingUnit()) == "TR17"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_statTRKills += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TR17Kills_Init () {
    gt_TR17Kills = TriggerCreate("gt_TR17Kills_Func");
    TriggerAddEventUnitDied(gt_TR17Kills, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: CARRs Lost
//--------------------------------------------------------------------------------------------------
bool gt_CARRsLost_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "CARR"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_statCARRsDestroyed += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CARRsLost_Init () {
    gt_CARRsLost = TriggerCreate("gt_CARRsLost_Func");
    TriggerAddEventUnitDied(gt_CARRsLost, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Fog Units Lost
//--------------------------------------------------------------------------------------------------
bool gt_FogUnitsLost_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_flashFogThick > 0))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetHeight(EventUnit()) <= 4.5))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitFilterMatch(EventUnit(), gv_pLAYER_01_USER, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)))) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_statFogDeaths += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_FogUnitsLost_Init () {
    gt_FogUnitsLost = TriggerCreate("gt_FogUnitsLost_Func");
    TriggerAddEventUnitDied(gt_FogUnitsLost, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Scout Z1s Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatScoutZ1sDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((gv_z1SectionStarts == 1))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Z1"))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_introZ1) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_z1MustSurviveObjective, c_objectiveStateFailed);
    UnitPauseAll(true);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/8C889DDF"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(4.0, c_timeGame);
    GameOver(gv_pLAYER_01_USER, c_gameOverDefeat, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatScoutZ1sDead_Init () {
    gt_DefeatScoutZ1sDead = TriggerCreate("gt_DefeatScoutZ1sDead_Func");
    TriggerEnable(gt_DefeatScoutZ1sDead, false);
    TriggerAddEventUnitDied(gt_DefeatScoutZ1sDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Spy Section Crew Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatSpySectionCrewDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((gv_spySectionStarts == 1))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_spySectionUPL) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_objectiveOtherStuff, c_objectiveStateFailed);
    UnitPauseAll(true);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/6F6EDCC4"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(4.0, c_timeGame);
    GameOver(gv_pLAYER_01_USER, c_gameOverDefeat, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatSpySectionCrewDead_Init () {
    gt_DefeatSpySectionCrewDead = TriggerCreate("gt_DefeatSpySectionCrewDead_Func");
    TriggerAddEventUnitDied(gt_DefeatSpySectionCrewDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat TR-17 Crew Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatTR17CrewDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_tR17SectionActive == 1))) {
            return false;
        }

        if (!((libNtve_gf_UnitGroupIsDead(gv_TR17Group) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_tR17Objective, c_objectiveStateFailed);
    UnitPauseAll(true);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/37ACEFCE"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(4.0, c_timeGame);
    GameOver(gv_pLAYER_01_USER, c_gameOverDefeat, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatTR17CrewDead_Init () {
    gt_DefeatTR17CrewDead = TriggerCreate("gt_DefeatTR17CrewDead_Func");
    TriggerAddEventUnitDied(gt_DefeatTR17CrewDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Graves Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatGravesDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "WilliamGraves"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_lancerHeroesObjective, c_objectiveStateFailed);
    UnitPauseAll(true);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/ADF744D0"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(4.0, c_timeGame);
    GameOver(gv_pLAYER_01_USER, c_gameOverDefeat, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatGravesDead_Init () {
    gt_DefeatGravesDead = TriggerCreate("gt_DefeatGravesDead_Func");
    TriggerAddEventUnitDied(gt_DefeatGravesDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Jerico Dead
//--------------------------------------------------------------------------------------------------
bool gt_DefeatJericoDead_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "RileyJerico"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    ObjectiveSetState(gv_lancerHeroesObjective, c_objectiveStateFailed);
    UnitPauseAll(true);
    SoundPlayForPlayer(SoundLink("FogAlert", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/A92558AD"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(4.0, c_timeGame);
    GameOver(gv_pLAYER_01_USER, c_gameOverDefeat, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatJericoDead_Init () {
    gt_DefeatJericoDead = TriggerCreate("gt_DefeatJericoDead_Func");
    TriggerAddEventUnitDied(gt_DefeatJericoDead, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Lancer Completed
//--------------------------------------------------------------------------------------------------
bool gt_VictoryLancerCompleted_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    SoundPlayForPlayer(SoundLink("TPast04_VictoryMusic", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    TriggerExecute(gt_VictorySequence, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryLancerCompleted_Init () {
    gt_VictoryLancerCompleted = TriggerCreate("gt_VictoryLancerCompleted_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Sequence
//--------------------------------------------------------------------------------------------------
bool gt_VictorySequence_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_gameOver = true;
    Wait(2.0, c_timeReal);
    lib1926661B_gf_RunMissionVictorySequence(gt_Victory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictorySequence_Init () {
    gt_VictorySequence = TriggerCreate("gt_VictorySequence_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory
//--------------------------------------------------------------------------------------------------
bool gt_Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((gv_statFogDeaths == 0) && (PlayerDifficulty(gv_pLAYER_01_USER) == 3)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M04-Hard", gv_pLAYER_01_USER);
    }

    if ((gv_statTRsBuilt == false) && (PlayerDifficulty(gv_pLAYER_01_USER) == 3)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M04-Brutal", gv_pLAYER_01_USER);
    }

    if ((PlayerDifficulty(gv_pLAYER_01_USER) == 3) && (gv__4thFogReached == false)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M04-Feat", gv_pLAYER_01_USER);
    }
    lib1926661B_gf_AddVictoryPanelStatistic("UnitsKilledCount");
    lib1926661B_gf_AddVictoryPanelStatistic("UnitsLostCount");
    lib1926661B_gf_AddVictoryPanelStatistic("StructuresKilledCount");
    lib1926661B_gf_AddVictoryPanelCustomStatistic("CARR Units Lost", IntToString(gv_statCARRsDestroyed));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Units Killed by TR-17s", IntToString(gv_statTRKills));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Units Lost in the Fog", IntToString(gv_statFogDeaths));
    if ((gv_statTRsBuilt == true)) {
        lib1926661B_gf_AddVictoryPanelCustomStatistic("Additional TR-17s Built", "Yes");
    }
    else {
        lib1926661B_gf_AddVictoryPanelCustomStatistic("Additional TR-17s Built", "No");
    }
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Units Killed by Badger Bombs", IntToString(gv_statBadgerKills));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Lore Collected", (IntToString(gv_loreFound) + " / 5"));
    lib1926661B_gf_EndCampaignMission(gv_pLAYER_01_USER, c_gameOverVictory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Victory_Init () {
    gt_Victory = TriggerCreate("gt_Victory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat
//--------------------------------------------------------------------------------------------------
bool gt_Defeat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_EndCampaignMission(gv_pLAYER_01_USER, c_gameOverDefeat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Defeat_Init () {
    gt_Defeat = TriggerCreate("gt_Defeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Cheat
//--------------------------------------------------------------------------------------------------
bool gt_VictoryCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_VictoryCheat, false);
    TriggerEnable(gt_DefeatCheat, false);
    TriggerEnable(gt_Defeat, false);
    gv_gameOver = true;
    lib1926661B_gf_RunMissionVictorySequence(gt_Victory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryCheat_Init () {
    gt_VictoryCheat = TriggerCreate("gt_VictoryCheat_Func");
    TriggerAddEventPlayerLeft(gt_VictoryCheat, gv_pLAYER_01_USER, c_gameResultVictory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Cheat
//--------------------------------------------------------------------------------------------------
bool gt_DefeatCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_VictoryCheat, false);
    TriggerEnable(gt_DefeatCheat, false);
    TriggerEnable(gt_Victory, false);
    gv_gameOver = true;
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatCheat_Init () {
    gt_DefeatCheat = TriggerCreate("gt_DefeatCheat_Func");
    TriggerAddEventPlayerLeft(gt_DefeatCheat, gv_pLAYER_01_USER, c_gameResultDefeat);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Osprey1
//--------------------------------------------------------------------------------------------------
bool gt_IntroOsprey1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoBA2FCB1D_g;
    int autoBA2FCB1D_u;
    unit autoBA2FCB1D_var;

    // Actions
    if (!runActions) {
        return true;
    }

    gv_introCinematicOsprey2 = UnitFromId(313386755);
    UnitIssueOrder(UnitFromId(313386755), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1589759221)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(313386755), Order(AbilityCommand("OspreyLand", 0)), c_orderQueueAddToEnd);
    while (!((UnitGetPropertyFixed(gv_introCinematicOsprey2, c_unitPropHeight, c_unitPropCurrent) < 3.0))) {
        Wait(1.0, c_timeGame);
    }
    Wait(3.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload1", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(313386755)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload2", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(313386755)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload1", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(313386755)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload2", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(313386755)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    UnitIssueOrder(UnitFromId(313386755), Order(AbilityCommand("OspreyFly", 0)), c_orderQueueAddToEnd);
    autoBA2FCB1D_g = gv_introCinematicOspreyInfantryGroup;
    autoBA2FCB1D_u = UnitGroupCount(autoBA2FCB1D_g, c_unitCountAll);
    for (;; autoBA2FCB1D_u -= 1) {
        autoBA2FCB1D_var = UnitGroupUnitFromEnd(autoBA2FCB1D_g, autoBA2FCB1D_u);
        if (autoBA2FCB1D_var == null) { break; }
        UnitIssueOrder(autoBA2FCB1D_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(63))), c_orderQueueReplace);
    }
    Wait(3.0, c_timeReal);
    UnitIssueOrder(UnitFromId(313386755), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(64))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroOsprey1_Init () {
    gt_IntroOsprey1 = TriggerCreate("gt_IntroOsprey1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Osprey2
//--------------------------------------------------------------------------------------------------
bool gt_IntroOsprey2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_introCinematicOsprey1 = UnitFromId(31608357);
    UnitIssueOrder(UnitFromId(31608357), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(475398015)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(31608357), Order(AbilityCommand("OspreyLand", 0)), c_orderQueueAddToEnd);
    while (!((UnitGetPropertyFixed(gv_introCinematicOsprey1, c_unitPropHeight, c_unitPropCurrent) < 3.0))) {
        Wait(1.0, c_timeGame);
    }
    Wait(3.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload1", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(31608357)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload2", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(31608357)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload1", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(31608357)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4OspreyUnload2", -1), c_maxPlayers, PlayerGroupAll(), 50.0, 0.0);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_pLAYER_04_UPL_NEUTRAL, UnitGetPosition(UnitFromId(31608357)));
    UnitGroupAdd(gv_introCinematicOspreyInfantryGroup, UnitLastCreated());
    Wait(1.0, c_timeReal);
    UnitIssueOrder(UnitFromId(31608357), Order(AbilityCommand("OspreyFly", 0)), c_orderQueueAddToEnd);
    Wait(3.0, c_timeReal);
    UnitIssueOrder(UnitFromId(31608357), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(64))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroOsprey2_Init () {
    gt_IntroOsprey2 = TriggerCreate("gt_IntroOsprey2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro RaptorsRemove
//--------------------------------------------------------------------------------------------------
bool gt_OspreyRemove2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFE8BA068_g;
    int autoFE8BA068_u;
    unit autoFE8BA068_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoFE8BA068_g = gv_introCinematicRaptors1;
    autoFE8BA068_u = UnitGroupCount(autoFE8BA068_g, c_unitCountAll);
    for (;; autoFE8BA068_u -= 1) {
        autoFE8BA068_var = UnitGroupUnitFromEnd(autoFE8BA068_g, autoFE8BA068_u);
        if (autoFE8BA068_var == null) { break; }
        UnitRemove(autoFE8BA068_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_OspreyRemove2_Init () {
    gt_OspreyRemove2 = TriggerCreate("gt_OspreyRemove2_Func");
    TriggerAddEventUnitRegion(gt_OspreyRemove2, UnitRefFromUnit(UnitFromId(737437727)), RegionFromId(2), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro OspreyRemove
//--------------------------------------------------------------------------------------------------
bool gt_IntroOspreyRemove_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto29DA33CD_g;
    int auto29DA33CD_u;
    unit auto29DA33CD_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto29DA33CD_g = gv_IntroOsprey;
    auto29DA33CD_u = UnitGroupCount(auto29DA33CD_g, c_unitCountAll);
    for (;; auto29DA33CD_u -= 1) {
        auto29DA33CD_var = UnitGroupUnitFromEnd(auto29DA33CD_g, auto29DA33CD_u);
        if (auto29DA33CD_var == null) { break; }
        UnitRemove(auto29DA33CD_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroOspreyRemove_Init () {
    gt_IntroOspreyRemove = TriggerCreate("gt_IntroOspreyRemove_Func");
    TriggerAddEventUnitRegion(gt_IntroOspreyRemove, UnitRefFromUnit(UnitFromId(967944837)), RegionFromId(4), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro OspreyRemove 3
//--------------------------------------------------------------------------------------------------
bool gt_IntroOspreyRemove3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto50860FCF_g;
    int auto50860FCF_u;
    unit auto50860FCF_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto50860FCF_g = gv_IntroOsprey;
    auto50860FCF_u = UnitGroupCount(auto50860FCF_g, c_unitCountAll);
    for (;; auto50860FCF_u -= 1) {
        auto50860FCF_var = UnitGroupUnitFromEnd(auto50860FCF_g, auto50860FCF_u);
        if (auto50860FCF_var == null) { break; }
        UnitRemove(auto50860FCF_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroOspreyRemove3_Init () {
    gt_IntroOspreyRemove3 = TriggerCreate("gt_IntroOspreyRemove3_Func");
    TriggerAddEventUnitRegion(gt_IntroOspreyRemove3, UnitRefFromUnit(UnitFromId(967944837)), RegionFromId(64), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro CondorLand
//--------------------------------------------------------------------------------------------------
bool gt_IntroCondorLand_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto41E3529B_g;
    int auto41E3529B_u;
    unit auto41E3529B_var;
    unitgroup auto82F94DE9_g;
    int auto82F94DE9_u;
    unit auto82F94DE9_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "Condor"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), Order(AbilityCommand("CondorLandCinematic", 0)), c_orderQueueReplace);
    Wait(7.0, c_timeReal);
    libNtve_gf_UnitCreateFacingPoint(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(680687274), UnitGetPosition(UnitFromId(400356329)));
    SoundPlayForPlayer(SoundLink("M4CondorVehicleUnload", -1), c_maxPlayers, PlayerGroupAll(), 25.0, 0.0);
    UnitGroupAdd(gv_introCinematicGroupZ1, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRocket", 0, gv_pLAYER_01_USER, PointFromId(745881012), UnitGetPosition(UnitFromId(400356329)));
    UnitGroupAdd(gv_introInfantryC, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRocket", 0, gv_pLAYER_01_USER, PointFromId(745881012), UnitGetPosition(UnitFromId(400356329)));
    UnitGroupAdd(gv_introInfantryC, UnitLastCreated());
    libNtve_gf_UnitCreateFacingPoint(1, "InfantryRocket", 0, gv_pLAYER_01_USER, PointFromId(745881012), UnitGetPosition(UnitFromId(400356329)));
    UnitGroupAdd(gv_introInfantryC, UnitLastCreated());
    Wait(2.0, c_timeReal);
    libNtve_gf_UnitCreateFacingPoint(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(680687274), UnitGetPosition(UnitFromId(400356329)));
    SoundPlayForPlayer(SoundLink("M4CondorVehicleUnload", -1), c_maxPlayers, PlayerGroupAll(), 25.0, 0.0);
    UnitGroupAdd(gv_introCinematicGroupZ1, UnitLastCreated());
    auto41E3529B_g = gv_introInfantryC;
    auto41E3529B_u = UnitGroupCount(auto41E3529B_g, c_unitCountAll);
    for (;; auto41E3529B_u -= 1) {
        auto41E3529B_var = UnitGroupUnitFromEnd(auto41E3529B_g, auto41E3529B_u);
        if (auto41E3529B_var == null) { break; }
        UnitIssueOrder(auto41E3529B_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(65))), c_orderQueueReplace);
    }
    Wait(2.0, c_timeReal);
    libNtve_gf_UnitCreateFacingPoint(1, "Z1", 0, gv_pLAYER_01_USER, PointFromId(680687274), UnitGetPosition(UnitFromId(400356329)));
    SoundPlayForPlayer(SoundLink("M4CondorVehicleUnload", -1), c_maxPlayers, PlayerGroupAll(), 25.0, 0.0);
    UnitGroupAdd(gv_introCinematicGroupZ1, UnitLastCreated());
    Wait(2.0, c_timeReal);
    auto82F94DE9_g = gv_introCinematicGroupZ1;
    auto82F94DE9_u = UnitGroupCount(auto82F94DE9_g, c_unitCountAll);
    for (;; auto82F94DE9_u -= 1) {
        auto82F94DE9_var = UnitGroupUnitFromEnd(auto82F94DE9_g, auto82F94DE9_u);
        if (auto82F94DE9_var == null) { break; }
        UnitIssueOrder(auto82F94DE9_var, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1170764190)), c_orderQueueReplace);
    }
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "A6", 0, gv_pLAYER_01_USER, PointFromId(479294853));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(628408741)), c_orderQueueReplace);
    UnitGroupAdd(gv_introCinematicA6, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "A6", 0, gv_pLAYER_01_USER, PointFromId(479294853));
    UnitGroupAdd(gv_introCinematicA6, UnitLastCreated());
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(391603053)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCondorLand_Init () {
    gt_IntroCondorLand = TriggerCreate("gt_IntroCondorLand_Func");
    TriggerAddEventUnitRegion(gt_IntroCondorLand, null, RegionFromId(7), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro CondorTakeOff
//--------------------------------------------------------------------------------------------------
bool gt_IntroCondorTakeOff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_z1Complete == 0))) {
            return false;
        }

        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "A6"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    Wait(1.5, c_timeReal);
    UnitRemove(UnitGroupUnit(gv_introCinematicA6, 1));
    SoundPlayForPlayer(SoundLink("M4CondorVehicleLoad", -1), c_maxPlayers, PlayerGroupAll(), 25.0, 0.0);
    Wait(1.5, c_timeReal);
    UnitRemove(UnitGroupUnit(gv_introCinematicA6, 1));
    SoundPlayForPlayer(SoundLink("M4CondorVehicleLoad", -1), c_maxPlayers, PlayerGroupAll(), 25.0, 0.0);
    Wait(1.0, c_timeReal);
    UnitIssueOrder(gv_introCondor, Order(AbilityCommand("CondorFly", 0)), c_orderQueueReplace);
    Wait(3.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M4CondorTakeoff", -1), c_maxPlayers, PlayerGroupAll(), 35.0, 0.0);
    UnitIssueOrder(gv_introCondor, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(2113723653)), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCondorTakeOff_Init () {
    gt_IntroCondorTakeOff = TriggerCreate("gt_IntroCondorTakeOff_Func");
    TriggerAddEventUnitRegion(gt_IntroCondorTakeOff, null, RegionFromId(7), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro TR17 Face
//--------------------------------------------------------------------------------------------------
bool gt_IntroTR17Face_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(EventUnit(), Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
    libNtve_gf_MakeUnitFacePoint(UnitFromId(283562999), libNtve_gf_PointFacingAngle(PointFromId(437930961), 0.0), 2.0);
    Wait(2.0, c_timeReal);
    UnitIssueOrder(EventUnit(), Order(AbilityCommand("TR17Siege", 0)), c_orderQueueReplace);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroTR17Face_Init () {
    gt_IntroTR17Face = TriggerCreate("gt_IntroTR17Face_Func");
    TriggerAddEventUnitRegion(gt_IntroTR17Face, UnitRefFromUnit(UnitFromId(283562999)), RegionFromId(6), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Rocket Troopers Face
//--------------------------------------------------------------------------------------------------
bool gt_RocketTroopersFace_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetType(EventUnit()) == "InfantryRocket"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    Wait(3.0, c_timeGame);
    libNtve_gf_MakeUnitFacePoint(EventUnit(), libNtve_gf_PointFacingAngle(PointFromId(1910328253), 0.0), 2.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_RocketTroopersFace_Init () {
    gt_RocketTroopersFace = TriggerCreate("gt_RocketTroopersFace_Func");
    TriggerAddEventUnitRegion(gt_RocketTroopersFace, null, RegionFromId(65), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Q
//--------------------------------------------------------------------------------------------------
bool gt_IntroQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    TriggerExecute(gt_IntroSetup, true, true);
    TriggerExecute(gt_IntroCinematic, true, true);
    TriggerExecute(gt_IntroCinematicEnd, true, true);
    TriggerExecute(gt_IntroCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroQ_Init () {
    gt_IntroQ = TriggerCreate("gt_IntroQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Setup
//--------------------------------------------------------------------------------------------------
bool gt_IntroSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_pickedUnit;

    // Automatic Variable Declarations
    unitgroup auto624E6A71_g;
    int auto624E6A71_u;
    unit auto624E6A71_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    CinematicFade(false, 0.0, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, false);
    gv_inCinematic = true;
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    VisEnable(c_visTypeMask, false);
    VisEnable(c_visTypeFog, false);
    Wait(0.1, c_timeGame);
    UnitGroupAdd(gv_miningDrones, UnitFromId(1901161395));
    UnitGroupAdd(gv_miningDrones, UnitFromId(1930458215));
    UnitGroupAdd(gv_miningDrones, UnitFromId(549966236));
    UnitGroupAdd(gv_miningDrones, UnitFromId(102460424));
    UnitGroupAdd(gv_miningDrones, UnitFromId(1688270083));
    auto624E6A71_g = gv_miningDrones;
    auto624E6A71_u = UnitGroupCount(auto624E6A71_g, c_unitCountAll);
    for (;; auto624E6A71_u -= 1) {
        auto624E6A71_var = UnitGroupUnitFromEnd(auto624E6A71_g, auto624E6A71_u);
        if (auto624E6A71_var == null) { break; }
        libVCMI_gf_StartingWorkersAutoHarvest(RegionFromId(3), null);
    }
    UnitGroupAdd(gv_introInfantryA, UnitFromId(1579796411));
    UnitGroupAdd(gv_introInfantryA, UnitFromId(717769910));
    UnitGroupAdd(gv_introInfantryA, UnitFromId(461315946));
    UnitGroupAdd(gv_introInfantryB, UnitFromId(1990467098));
    UnitGroupAdd(gv_introInfantryB, UnitFromId(988585631));
    UnitGroupAdd(gv_introInfantryB, UnitFromId(1682760934));
    UnitGroupAdd(gv_introCinematicRaptors1, UnitFromId(737437727));
    UnitSetPropertyFixed(UnitFromId(1516637638), c_unitPropHeight, 5.0);
    UnitGroupAdd(gv_introCinematicRaptors1, UnitFromId(2018923159));
    UnitSetPropertyFixed(UnitFromId(2018923159), c_unitPropHeight, 5.0);
    UnitGroupAdd(gv_introCinematicRaptors1, UnitFromId(1516637638));
    UnitSetPropertyFixed(UnitFromId(737437727), c_unitPropHeight, 5.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroSetup_Init () {
    gt_IntroSetup = TriggerCreate("gt_IntroSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoE8C88F5F_g;
    int autoE8C88F5F_u;
    unit autoE8C88F5F_var;
    unitgroup auto79AF6065_g;
    int auto79AF6065_u;
    unit auto79AF6065_var;
    unitgroup auto353D617B_g;
    int auto353D617B_u;
    unit auto353D617B_var;
    unitgroup auto56846BB9_g;
    int auto56846BB9_u;
    unit auto56846BB9_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(908545394), 2.0, -1, 10.0, true);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/E97937C3"), StringExternal("Param/Value/7756C0F8"), 10.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    Wait(8.0, c_timeGame);
    UIHideTextCrawl(PlayerGroupAll());
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    autoE8C88F5F_g = UnitGroup(null, 13, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE8C88F5F_u = UnitGroupCount(autoE8C88F5F_g, c_unitCountAll);
    for (;; autoE8C88F5F_u -= 1) {
        autoE8C88F5F_var = UnitGroupUnitFromEnd(autoE8C88F5F_g, autoE8C88F5F_u);
        if (autoE8C88F5F_var == null) { break; }
        UnitSetOwner(autoE8C88F5F_var, gv_pLAYER_04_UPL_NEUTRAL, true);
    }
    auto79AF6065_g = gv_introInfantryA;
    auto79AF6065_u = UnitGroupCount(auto79AF6065_g, c_unitCountAll);
    for (;; auto79AF6065_u -= 1) {
        auto79AF6065_var = UnitGroupUnitFromEnd(auto79AF6065_g, auto79AF6065_u);
        if (auto79AF6065_var == null) { break; }
        UnitGroupIssueOrder(gv_introInfantryA, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(427489286)), c_orderQueueReplace);
        UnitGroupIssueOrder(gv_introInfantryB, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1454369732)), c_orderQueueReplace);
    }
    UnitGroupAdd(gv_IntroOsprey, UnitFromId(967944837));
    auto353D617B_g = gv_IntroOsprey;
    auto353D617B_u = UnitGroupCount(auto353D617B_g, c_unitCountAll);
    for (;; auto353D617B_u -= 1) {
        auto353D617B_var = UnitGroupUnitFromEnd(auto353D617B_g, auto353D617B_u);
        if (auto353D617B_var == null) { break; }
        UnitSetPropertyFixed(auto353D617B_var, c_unitPropHeight, 6.0);
        UnitGroupIssueOrder(gv_IntroOsprey, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(479294853)), c_orderQueueReplace);
        UnitGroupIssueOrder(gv_IntroOsprey, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(236283580)), c_orderQueueAddToEnd);
        UnitGroupAdd(gv_introCinematicGroup, auto353D617B_var);
    }
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "TPast04_MainMusic2", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1433819083), 40.0, -1, 10.0, true);
    Wait(8.0, c_timeReal);
    auto56846BB9_g = gv_introCinematicRaptors1;
    auto56846BB9_u = UnitGroupCount(auto56846BB9_g, c_unitCountAll);
    for (;; auto56846BB9_u -= 1) {
        auto56846BB9_var = UnitGroupUnitFromEnd(auto56846BB9_g, auto56846BB9_u);
        if (auto56846BB9_var == null) { break; }
        Wait(1.0, c_timeReal);
        UnitGroupIssueOrder(gv_introCinematicRaptors1, OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(478118972)), c_orderQueueReplace);
    }
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00001", null, true, gv_colonelGraves, false);
    UnitIssueOrder(UnitFromId(283562999), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(821213042)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(283562999), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1905179288)), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(283562999), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1974914725)), c_orderQueueAddToEnd);
    UnitIssueOrder(UnitFromId(283562999), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1606127605)), c_orderQueueAddToEnd);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00002", null, true, null, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1684847495), 4.0, -1, 10.0, true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00003", null, true, gv_colonelGraves, false);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1382357017), 0.0, -1, 10.0, true);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "Condor", 0, gv_pLAYER_01_USER, PointFromId(319993386));
    UnitSetState(UnitLastCreated(), c_unitStateTargetable, false);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1627245556)), c_orderQueueReplace);
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1910328253)), c_orderQueueAddToEnd);
    gv_introCondor = UnitLastCreated();
    UnitGroupAdd(gv_introCinematicGroup, UnitLastCreated());
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "RoutheTank", 0, gv_pLAYER_01_USER, PointFromId(319993386));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(745881012)), c_orderQueueReplace);
    UnitGroupAdd(gv_introCinematicGroup, UnitLastCreated());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(300355674), 40.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(gt_IntroOsprey1, true, false);
    TriggerExecute(gt_IntroOsprey2, true, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00004", null, true, gv_colonelGraves, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M4CARR1", -1), StringExternal("Param/Value/543C04C2"), StringExternal("Param/Value/D481E4FA"), 2.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00006", null, true, gv_colonelGraves, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(gv_cARR, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M4CARR2", -1), StringExternal("Param/Value/FBAE60D2"), StringExternal("Param/Value/156CACBB"), 2.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00008", null, true, gv_colonelGraves, false);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematic_Init () {
    gt_IntroCinematic = TriggerCreate("gt_IntroCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 1.0;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(gt_PreGameStartSetup, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    gv_inCinematic = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicEnd_Init () {
    gt_IntroCinematicEnd = TriggerCreate("gt_IntroCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_IntroCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup autoB7551BC7_g;
    int autoB7551BC7_u;
    unit autoB7551BC7_var;
    unitgroup auto81251B00_g;
    int auto81251B00_u;
    unit auto81251B00_var;
    unitgroup auto3A587E1A_g;
    int auto3A587E1A_u;
    unit auto3A587E1A_var;
    unitgroup auto8E364E6F_g;
    int auto8E364E6F_u;
    unit auto8E364E6F_var;
    unitgroup autoCAFCB0F0_g;
    int autoCAFCB0F0_u;
    unit autoCAFCB0F0_var;
    unitgroup auto8B1BD270_g;
    int auto8B1BD270_u;
    unit auto8B1BD270_var;
    unitgroup autoC20805A0_g;
    int autoC20805A0_u;
    unit autoC20805A0_var;
    unitgroup auto42653DBE_g;
    int auto42653DBE_u;
    unit auto42653DBE_var;
    unitgroup auto77227EEF_g;
    int auto77227EEF_u;
    unit auto77227EEF_var;
    unitgroup auto44A68CD3_g;
    int auto44A68CD3_u;
    unit auto44A68CD3_var;
    unitgroup auto210C0375_g;
    int auto210C0375_u;
    unit auto210C0375_var;
    unitgroup auto75A13326_g;
    int auto75A13326_u;
    unit auto75A13326_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoB7551BC7_g = gv_introCinematicGroup;
    autoB7551BC7_u = UnitGroupCount(autoB7551BC7_g, c_unitCountAll);
    for (;; autoB7551BC7_u -= 1) {
        autoB7551BC7_var = UnitGroupUnitFromEnd(autoB7551BC7_g, autoB7551BC7_u);
        if (autoB7551BC7_var == null) { break; }
        UnitRemove(autoB7551BC7_var);
    }
    auto81251B00_g = gv_introCinematicOspreyInfantryGroup;
    auto81251B00_u = UnitGroupCount(auto81251B00_g, c_unitCountAll);
    for (;; auto81251B00_u -= 1) {
        auto81251B00_var = UnitGroupUnitFromEnd(auto81251B00_g, auto81251B00_u);
        if (auto81251B00_var == null) { break; }
        UnitRemove(auto81251B00_var);
    }
    auto3A587E1A_g = gv_introCinematicGroupZ1;
    auto3A587E1A_u = UnitGroupCount(auto3A587E1A_g, c_unitCountAll);
    for (;; auto3A587E1A_u -= 1) {
        auto3A587E1A_var = UnitGroupUnitFromEnd(auto3A587E1A_g, auto3A587E1A_u);
        if (auto3A587E1A_var == null) { break; }
        UnitRemove(auto3A587E1A_var);
    }
    auto8E364E6F_g = gv_introInfantryC;
    auto8E364E6F_u = UnitGroupCount(auto8E364E6F_g, c_unitCountAll);
    for (;; auto8E364E6F_u -= 1) {
        auto8E364E6F_var = UnitGroupUnitFromEnd(auto8E364E6F_g, auto8E364E6F_u);
        if (auto8E364E6F_var == null) { break; }
        UnitRemove(auto8E364E6F_var);
    }
    autoCAFCB0F0_g = gv_introCinematicA6;
    autoCAFCB0F0_u = UnitGroupCount(autoCAFCB0F0_g, c_unitCountAll);
    for (;; autoCAFCB0F0_u -= 1) {
        autoCAFCB0F0_var = UnitGroupUnitFromEnd(autoCAFCB0F0_g, autoCAFCB0F0_u);
        if (autoCAFCB0F0_var == null) { break; }
        UnitRemove(autoCAFCB0F0_var);
    }
    auto8B1BD270_g = gv_introInfantryA;
    auto8B1BD270_u = UnitGroupCount(auto8B1BD270_g, c_unitCountAll);
    for (;; auto8B1BD270_u -= 1) {
        auto8B1BD270_var = UnitGroupUnitFromEnd(auto8B1BD270_g, auto8B1BD270_u);
        if (auto8B1BD270_var == null) { break; }
        UnitRemove(auto8B1BD270_var);
    }
    autoC20805A0_g = gv_introInfantryB;
    autoC20805A0_u = UnitGroupCount(autoC20805A0_g, c_unitCountAll);
    for (;; autoC20805A0_u -= 1) {
        autoC20805A0_var = UnitGroupUnitFromEnd(autoC20805A0_g, autoC20805A0_u);
        if (autoC20805A0_var == null) { break; }
        UnitRemove(autoC20805A0_var);
    }
    auto42653DBE_g = UnitGroup("Osprey", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto42653DBE_u = UnitGroupCount(auto42653DBE_g, c_unitCountAll);
    for (;; auto42653DBE_u -= 1) {
        auto42653DBE_var = UnitGroupUnitFromEnd(auto42653DBE_g, auto42653DBE_u);
        if (auto42653DBE_var == null) { break; }
        UnitRemove(auto42653DBE_var);
    }
    auto77227EEF_g = UnitGroup("OspreyLanded", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto77227EEF_u = UnitGroupCount(auto77227EEF_g, c_unitCountAll);
    for (;; auto77227EEF_u -= 1) {
        auto77227EEF_var = UnitGroupUnitFromEnd(auto77227EEF_g, auto77227EEF_u);
        if (auto77227EEF_var == null) { break; }
        UnitRemove(auto77227EEF_var);
    }
    auto44A68CD3_g = UnitGroup("RaptorJet", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto44A68CD3_u = UnitGroupCount(auto44A68CD3_g, c_unitCountAll);
    for (;; auto44A68CD3_u -= 1) {
        auto44A68CD3_var = UnitGroupUnitFromEnd(auto44A68CD3_g, auto44A68CD3_u);
        if (auto44A68CD3_var == null) { break; }
        UnitRemove(auto44A68CD3_var);
    }
    auto210C0375_g = UnitGroup("Condor", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto210C0375_u = UnitGroupCount(auto210C0375_g, c_unitCountAll);
    for (;; auto210C0375_u -= 1) {
        auto210C0375_var = UnitGroupUnitFromEnd(auto210C0375_g, auto210C0375_u);
        if (auto210C0375_var == null) { break; }
        UnitRemove(auto210C0375_var);
    }
    auto75A13326_g = UnitGroup("CondorLanded", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto75A13326_u = UnitGroupCount(auto75A13326_g, c_unitCountAll);
    for (;; auto75A13326_u -= 1) {
        auto75A13326_var = UnitGroupUnitFromEnd(auto75A13326_g, auto75A13326_u);
        if (auto75A13326_var == null) { break; }
        UnitRemove(auto75A13326_var);
    }
    UIHideTextCrawl(PlayerGroupAll());
    CameraSetBounds(PlayerGroupAll(), RegionFromId(1), true);
    RegionPlayableMapSet(RegionFromId(1));
    TriggerEnable(gt_RocketTroopersFace, false);
    TriggerEnable(gt_IntroTR17Face, false);
    TriggerEnable(gt_IntroCondorTakeOff, false);
    TriggerEnable(gt_IntroCondorLand, false);
    TriggerEnable(gt_IntroOspreyRemove3, false);
    TriggerEnable(gt_IntroOspreyRemove, false);
    TriggerEnable(gt_OspreyRemove2, false);
    TriggerEnable(gt_IntroOsprey1, false);
    TriggerEnable(gt_IntroOsprey2, false);
    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.5;
    }
    else {
        lv_fadeDuration = 1.0;
    }
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), lv_fadeDuration);
    libNtve_gf_GlobalCinematicSetting(false);
    gv_inCinematic = false;
    TriggerExecute(gt_StartGameQ, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCleanup_Init () {
    gt_IntroCleanup = TriggerCreate("gt_IntroCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Zerg Pop Up
//--------------------------------------------------------------------------------------------------
bool gt_ZergPopUp_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libLbty_gf_OrderWorkerstoGatherNearbyResources(RegionEntireMap(), gv_pLAYER_03_ROACHES_HOSTILE);
    UnitIssueOrder(UnitFromId(933289634), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(451523122)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(270257879), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(903738006)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1987367572), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1994493411)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1652463916), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1379367877)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1079271123), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1379367877)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(84816002), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1379367877)), c_orderQueueReplace);
    Wait(6.0, c_timeReal);
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranEnemy, libVCMI_ge_CampaginReticleSize_Small, StringExternal("Param/Value/C6E7ACDD"), UnitFromId(1940943526), "Ref_Center");
    gv_choiceReticle1 = libNtve_gf_ActorLastCreated();
    gv_choiceTextTag1 = TextTagLastCreated();
    UnitIssueOrder(UnitFromId(1561620677), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1294715841), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(352824832), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1550122724), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(950162922), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1904019351), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    Wait(3.0, c_timeReal);
    Wait(3.0, c_timeReal);
    UnitIssueOrder(UnitFromId(803015322), Order(AbilityCommand("BurrowHydraliskUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1769224682), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1130709349), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(457088424), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(898171809), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(327019349), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    UnitIssueOrder(UnitFromId(1496607018), Order(AbilityCommand("BurrowZerglingUp", 0)), c_orderQueueReplace);
    Wait(3.0, c_timeReal);
    libVCMI_gf_AttachReticleEffectAndTextTagOnUnit(libVCMI_ge_CampaginReticleType_TerranEnemy, libVCMI_ge_CampaginReticleSize_Small, StringExternal("Param/Value/26CD8003"), UnitFromId(1757504454), "Ref_Center");
    gv_choiceReticle2 = libNtve_gf_ActorLastCreated();
    gv_choiceTextTag2 = TextTagLastCreated();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ZergPopUp_Init () {
    gt_ZergPopUp = TriggerCreate("gt_ZergPopUp_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mutas or Ultras Q
//--------------------------------------------------------------------------------------------------
bool gt_MutasorUltrasQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueEnter();
    TriggerExecute(gt_MutasorUltrasSetup, true, true);
    TriggerExecute(gt_MutasorUltrasCinematic, true, true);
    TriggerExecute(gt_MutasorUltrasCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutasorUltrasQ_Init () {
    gt_MutasorUltrasQ = TriggerCreate("gt_MutasorUltrasQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mutas or Ultras Setup
//--------------------------------------------------------------------------------------------------
bool gt_MutasorUltrasSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_pickedUnit;

    // Automatic Variable Declarations
    unitgroup auto49C81C07_g;
    int auto49C81C07_u;
    unit auto49C81C07_var;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_inCinematic = true;
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.5);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    ObjectiveDestroyAll(PlayerGroupAll());
    auto49C81C07_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(14), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto49C81C07_u = UnitGroupCount(auto49C81C07_g, c_unitCountAll);
    for (;; auto49C81C07_u -= 1) {
        auto49C81C07_var = UnitGroupUnitFromEnd(auto49C81C07_g, auto49C81C07_u);
        if (auto49C81C07_var == null) { break; }
        UnitRemove(auto49C81C07_var);
    }
    GameSetToDLighting("AiurNight");
    GameTimeOfDaySet("00");
    VisEnable(c_visTypeMask, false);
    VisEnable(c_visTypeFog, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    Wait(0.1, c_timeGame);
    UnitClearSelection(1);
    UnitClearSelection(2);
    PlayerSetState(1, c_playerStateXPGain, false);
    PlayerSetState(2, c_playerStateXPGain, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutasorUltrasSetup_Init () {
    gt_MutasorUltrasSetup = TriggerCreate("gt_MutasorUltrasSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mutas or Ultras Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_MutasorUltrasCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    gv_z1Spy = UnitFromId(830359926);
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/D765877A"), StringExternal("Param/Value/3A4EE9BB"), 8.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    Wait(7.0, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1061713161), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1703237742), 25.0, -1, 10.0, true);
    TriggerExecute(gt_ZergPopUp, true, false);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/35F43E06"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00016", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00017", null, true, gv_colonelGraves, false);
    gv_cinematicCompleted = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutasorUltrasCinematic_Init () {
    gt_MutasorUltrasCinematic = TriggerCreate("gt_MutasorUltrasCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mutas or Ultras Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_MutasorUltrasCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 2.0;
    }
    else {
        lv_fadeDuration = 1.0;
    }
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1703237742), 0.0, -1, 10.0, true);
    gv_inCinematic = false;
    CameraLockInput(gv_pLAYER_01_USER, true);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), c_transitionDurationImmediate);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationImmediate);
    lib1926661B_gf_ShowHideUnitChoicePanel(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutasorUltrasCleanup_Init () {
    gt_MutasorUltrasCleanup = TriggerCreate("gt_MutasorUltrasCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mutas or Ultras Selection
//--------------------------------------------------------------------------------------------------
bool gt_ElevatorControlUsed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    string auto6E871EB5_val;

    // Conditions
    if (testConds) {
        if (!(((EventGenericName() == "MutaliskChosen") || (EventGenericName() == "UltraliskChosen")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    TriggerExecute(gt_MutasorUltrasChoiceEnd, true, true);
    auto6E871EB5_val = EventGenericName();
    if (auto6E871EB5_val == "UltraliskChosen") {
        libVCUI_gf_HideCampaignDirective();
        UnitRemove(UnitFromId(1940943526));
        TextTagDestroy(gv_choiceTextTag1);
        libNtve_gf_KillModel(gv_choiceReticle1);
        gv_mutasChosen = true;
        TriggerExecute(gt_DestroyPressureCooker, true, false);
    }
    else if (auto6E871EB5_val == "MutaliskChosen") {
        libVCUI_gf_HideCampaignDirective();
        UnitRemove(UnitFromId(1757504454));
        TextTagDestroy(gv_choiceTextTag2);
        libNtve_gf_KillModel(gv_choiceReticle2);
        gv_ultrasChosen = true;
        TriggerExecute(gt_DestroySpire, true, false);
    }
    else {
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ElevatorControlUsed_Init () {
    gt_ElevatorControlUsed = TriggerCreate("gt_ElevatorControlUsed_Func");
    TriggerAddEventGeneric(gt_ElevatorControlUsed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Mutas or Ultras Choice End
//--------------------------------------------------------------------------------------------------
bool gt_MutasorUltrasChoiceEnd_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    Wait(1.0, c_timeReal);
    CinematicFade(false, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    libNtve_gf_GlobalCinematicSetting(false);
    CameraLockInput(gv_pLAYER_01_USER, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_MutasorUltrasChoiceEnd_Init () {
    gt_MutasorUltrasChoiceEnd = TriggerCreate("gt_MutasorUltrasChoiceEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Counterattack Q
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackQ_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    TriggerExecute(gt_CounterattackSetup, true, true);
    TriggerExecute(gt_CounterAttackCinematic, true, true);
    TriggerExecute(gt_CounterAttackCinematicEnd, true, true);
    TriggerExecute(gt_CounterAttackCleanup, true, true);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackQ_Init () {
    gt_CounterattackQ = TriggerCreate("gt_CounterattackQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Counterattack Setup
//--------------------------------------------------------------------------------------------------
bool gt_CounterattackSetup_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_DefeatSpySectionCrewDead, false);
    gv_inCinematic = true;
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    libNtve_gf_ShowHideUnit(UnitFromId(729593720), true);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 1.0);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(765586673), 0.0, -1, 10.0, true);
    ObjectiveDestroyAll(PlayerGroupAll());
    GameSetToDLighting("AiurNight");
    GameTimeOfDaySet("01:00:00");
    VisEnable(c_visTypeMask, false);
    VisEnable(c_visTypeFog, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    Wait(0.1, c_timeGame);
    UnitClearSelection(1);
    UnitClearSelection(2);
    PlayerSetState(1, c_playerStateXPGain, false);
    PlayerSetState(2, c_playerStateXPGain, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterattackSetup_Init () {
    gt_CounterattackSetup = TriggerCreate("gt_CounterattackSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterAttackUnitGroupFills
//--------------------------------------------------------------------------------------------------
bool gt_CounterAttackUnitGroupFills_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoBCA6130E_n = 5;
    int autoBCA6130E_i;
    int autoE278AEE3_n;
    int autoE278AEE3_i;
    int auto4E7C9E8A_n;
    int auto4E7C9E8A_i;
    unitgroup auto9E09C778_g;
    int auto9E09C778_u;
    unit auto9E09C778_var;
    int autoE4F7CD91_n;
    int autoE4F7CD91_i;
    int autoF055CE60_n;
    int autoF055CE60_i;
    unitgroup autoBCF9903C_g;
    int autoBCF9903C_u;
    unit autoBCF9903C_var;
    int auto9B0F23B1_n;
    int auto9B0F23B1_i;
    unitgroup autoD8749A4B_g;
    int autoD8749A4B_u;
    unit autoD8749A4B_var;
    int auto0AB1402A_n;
    int auto0AB1402A_i;
    unitgroup autoBC0E731D_g;
    int autoBC0E731D_u;
    unit autoBC0E731D_var;
    const int auto5C4A6056_n = 5;
    int auto5C4A6056_i;
    unitgroup autoED69BD91_g;
    int autoED69BD91_u;
    unit autoED69BD91_var;
    int auto78D41526_n;
    int auto78D41526_i;
    unitgroup auto7EE975E6_g;
    int auto7EE975E6_u;
    unit auto7EE975E6_var;
    int auto0893275D_n;
    int auto0893275D_i;
    unitgroup auto9671703A_g;
    int auto9671703A_u;
    unit auto9671703A_var;
    int autoFBA8326F_n;
    int autoFBA8326F_i;
    unitgroup auto20001C0A_g;
    int auto20001C0A_u;
    unit auto20001C0A_var;
    int autoFEA424F4_n;
    int autoFEA424F4_i;
    unitgroup autoE7CD6903_g;
    int autoE7CD6903_u;
    unit autoE7CD6903_var;
    int autoFB88DFAC_n;
    int autoFB88DFAC_i;
    unitgroup autoD8964E33_g;
    int autoD8964E33_u;
    unit autoD8964E33_var;
    int autoA4331BFA_n;
    int autoA4331BFA_i;
    unitgroup auto8800076B_g;
    int auto8800076B_u;
    unit auto8800076B_var;
    int autoAA1114BB_n;
    int autoAA1114BB_i;
    unitgroup auto2B9254AC_g;
    int auto2B9254AC_u;
    unit auto2B9254AC_var;
    const int autoD9A58DE0_n = 8;
    int autoD9A58DE0_i;
    unitgroup auto74A3468F_g;
    int auto74A3468F_u;
    unit auto74A3468F_var;
    int autoD04BCAB5_n;
    int autoD04BCAB5_i;
    unitgroup auto3501419F_g;
    int auto3501419F_u;
    unit auto3501419F_var;
    int auto87D4A5C9_n;
    int auto87D4A5C9_i;
    unitgroup autoC0F39649_g;
    int autoC0F39649_u;
    unit autoC0F39649_var;
    int auto306B8EDA_n;
    int auto306B8EDA_i;
    unitgroup auto52C7D496_g;
    int auto52C7D496_u;
    unit auto52C7D496_var;
    const int autoE527C8B7_n = 5;
    int autoE527C8B7_i;
    unitgroup auto5CC2E239_g;
    int auto5CC2E239_u;
    unit auto5CC2E239_var;
    unitgroup autoD2E46F0E_g;
    int autoD2E46F0E_u;
    unit autoD2E46F0E_var;
    int auto5AF3B9AD_n;
    int auto5AF3B9AD_i;
    unitgroup autoC6765D97_g;
    int autoC6765D97_u;
    unit autoC6765D97_var;
    const int auto46714F7F_n = 11;
    int auto46714F7F_i;
    unitgroup autoCF1E5235_g;
    int autoCF1E5235_u;
    unit autoCF1E5235_var;
    int auto1169235A_n;
    int auto1169235A_i;
    unitgroup autoF0BECC48_g;
    int autoF0BECC48_u;
    unit autoF0BECC48_var;
    int autoEDA2C7C6_n;
    int autoEDA2C7C6_i;
    unitgroup auto80CF66E7_g;
    int auto80CF66E7_u;
    unit auto80CF66E7_var;
    int auto286FCFFC_n;
    int auto286FCFFC_i;
    unitgroup auto47C50386_g;
    int auto47C50386_u;
    unit auto47C50386_var;
    int auto1BACC1CE_n;
    int auto1BACC1CE_i;
    unitgroup autoF09DDFDC_g;
    int autoF09DDFDC_u;
    unit autoF09DDFDC_var;
    const int autoDCF82D21_n = 8;
    int autoDCF82D21_i;
    unitgroup auto888A1D62_g;
    int auto888A1D62_u;
    unit auto888A1D62_var;
    int auto6C6C5505_n;
    int auto6C6C5505_i;
    unitgroup autoDE34C066_g;
    int autoDE34C066_u;
    unit autoDE34C066_var;
    int auto373DA9AC_n;
    int auto373DA9AC_i;
    unitgroup auto1C7F7A63_g;
    int auto1C7F7A63_u;
    unit auto1C7F7A63_var;
    int auto68DB9CC1_n;
    int auto68DB9CC1_i;
    unitgroup autoFCCE3C34_g;
    int autoFCCE3C34_u;
    unit autoFCCE3C34_var;
    int auto02898D5B_n;
    int auto02898D5B_i;
    unitgroup autoB4EE133E_g;
    int autoB4EE133E_u;
    unit autoB4EE133E_var;
    int auto81E22699_n;
    int auto81E22699_i;
    unitgroup auto21D22BE7_g;
    int auto21D22BE7_u;
    unit auto21D22BE7_var;
    int autoA7076D03_n;
    int autoA7076D03_i;
    unitgroup autoE824D8C3_g;
    int autoE824D8C3_u;
    unit autoE824D8C3_var;
    int auto06622EE9_n;
    int auto06622EE9_i;
    unitgroup autoDF6EB0FE_g;
    int autoDF6EB0FE_u;
    unit autoDF6EB0FE_var;

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoBCA6130E_i = 1; autoBCA6130E_i <= autoBCA6130E_n; autoBCA6130E_i += 1) {
        Wait(10.0, c_timeReal);
        autoE278AEE3_n = lib1926661B_gf_DifficultyValueInteger(15, 30);
        for (autoE278AEE3_i = 1; autoE278AEE3_i <= autoE278AEE3_n; autoE278AEE3_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
        }
        auto4E7C9E8A_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
        for (auto4E7C9E8A_i = 1; auto4E7C9E8A_i <= auto4E7C9E8A_n; auto4E7C9E8A_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
        }
        auto9E09C778_g = gv_counterattackWave1;
        auto9E09C778_u = UnitGroupCount(auto9E09C778_g, c_unitCountAll);
        for (;; auto9E09C778_u -= 1) {
            auto9E09C778_var = UnitGroupUnitFromEnd(auto9E09C778_g, auto9E09C778_u);
            if (auto9E09C778_var == null) { break; }
            UnitIssueOrder(auto9E09C778_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
        }
        Wait(3.0, c_timeReal);
        autoE4F7CD91_n = lib1926661B_gf_DifficultyValueInteger(10, 25);
        for (autoE4F7CD91_i = 1; autoE4F7CD91_i <= autoE4F7CD91_n; autoE4F7CD91_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
        }
        autoF055CE60_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
        for (autoF055CE60_i = 1; autoF055CE60_i <= autoF055CE60_n; autoF055CE60_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
        }
        autoBCF9903C_g = gv_counterattackWave2;
        autoBCF9903C_u = UnitGroupCount(autoBCF9903C_g, c_unitCountAll);
        for (;; autoBCF9903C_u -= 1) {
            autoBCF9903C_var = UnitGroupUnitFromEnd(autoBCF9903C_g, autoBCF9903C_u);
            if (autoBCF9903C_var == null) { break; }
            UnitIssueOrder(autoBCF9903C_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
        }
        Wait(3.0, c_timeReal);
        auto9B0F23B1_n = lib1926661B_gf_DifficultyValueInteger(13, 32);
        for (auto9B0F23B1_i = 1; auto9B0F23B1_i <= auto9B0F23B1_n; auto9B0F23B1_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoD8749A4B_g = gv_counterattackWave2;
            autoD8749A4B_u = UnitGroupCount(autoD8749A4B_g, c_unitCountAll);
            for (;; autoD8749A4B_u -= 1) {
                autoD8749A4B_var = UnitGroupUnitFromEnd(autoD8749A4B_g, autoD8749A4B_u);
                if (autoD8749A4B_var == null) { break; }
                UnitIssueOrder(autoD8749A4B_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        auto0AB1402A_n = lib1926661B_gf_DifficultyValueInteger(13, 30);
        for (auto0AB1402A_i = 1; auto0AB1402A_i <= auto0AB1402A_n; auto0AB1402A_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            autoBC0E731D_g = gv_counterattackWave1;
            autoBC0E731D_u = UnitGroupCount(autoBC0E731D_g, c_unitCountAll);
            for (;; autoBC0E731D_u -= 1) {
                autoBC0E731D_var = UnitGroupUnitFromEnd(autoBC0E731D_g, autoBC0E731D_u);
                if (autoBC0E731D_var == null) { break; }
                UnitIssueOrder(autoBC0E731D_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        for (auto5C4A6056_i = 1; auto5C4A6056_i <= auto5C4A6056_n; auto5C4A6056_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            autoED69BD91_g = gv_counterattackWave1;
            autoED69BD91_u = UnitGroupCount(autoED69BD91_g, c_unitCountAll);
            for (;; autoED69BD91_u -= 1) {
                autoED69BD91_var = UnitGroupUnitFromEnd(autoED69BD91_g, autoED69BD91_u);
                if (autoED69BD91_var == null) { break; }
                UnitIssueOrder(autoED69BD91_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        auto78D41526_n = lib1926661B_gf_DifficultyValueInteger(15, 35);
        for (auto78D41526_i = 1; auto78D41526_i <= auto78D41526_n; auto78D41526_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto7EE975E6_g = gv_counterattackWave2;
            auto7EE975E6_u = UnitGroupCount(auto7EE975E6_g, c_unitCountAll);
            for (;; auto7EE975E6_u -= 1) {
                auto7EE975E6_var = UnitGroupUnitFromEnd(auto7EE975E6_g, auto7EE975E6_u);
                if (auto7EE975E6_var == null) { break; }
                UnitIssueOrder(auto7EE975E6_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto0893275D_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
        for (auto0893275D_i = 1; auto0893275D_i <= auto0893275D_n; auto0893275D_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto9671703A_g = gv_counterattackWave2;
            auto9671703A_u = UnitGroupCount(auto9671703A_g, c_unitCountAll);
            for (;; auto9671703A_u -= 1) {
                auto9671703A_var = UnitGroupUnitFromEnd(auto9671703A_g, auto9671703A_u);
                if (auto9671703A_var == null) { break; }
                UnitIssueOrder(auto9671703A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        autoFBA8326F_n = lib1926661B_gf_DifficultyValueInteger(15, 37);
        for (autoFBA8326F_i = 1; autoFBA8326F_i <= autoFBA8326F_n; autoFBA8326F_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave3, UnitLastCreated());
            auto20001C0A_g = gv_counterattackWave3;
            auto20001C0A_u = UnitGroupCount(auto20001C0A_g, c_unitCountAll);
            for (;; auto20001C0A_u -= 1) {
                auto20001C0A_var = UnitGroupUnitFromEnd(auto20001C0A_g, auto20001C0A_u);
                if (auto20001C0A_var == null) { break; }
                UnitIssueOrder(auto20001C0A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(47))), c_orderQueueAddToEnd);
                UnitIssueOrder(auto20001C0A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(45))), c_orderQueueAddToEnd);
                UnitIssueOrder(auto20001C0A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(7.0, c_timeReal);
        autoFEA424F4_n = lib1926661B_gf_DifficultyValueInteger(14, 30);
        for (autoFEA424F4_i = 1; autoFEA424F4_i <= autoFEA424F4_n; autoFEA424F4_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            autoE7CD6903_g = gv_counterattackWave1;
            autoE7CD6903_u = UnitGroupCount(autoE7CD6903_g, c_unitCountAll);
            for (;; autoE7CD6903_u -= 1) {
                autoE7CD6903_var = UnitGroupUnitFromEnd(autoE7CD6903_g, autoE7CD6903_u);
                if (autoE7CD6903_var == null) { break; }
                UnitIssueOrder(autoE7CD6903_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        autoFB88DFAC_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
        for (autoFB88DFAC_i = 1; autoFB88DFAC_i <= autoFB88DFAC_n; autoFB88DFAC_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            autoD8964E33_g = gv_counterattackWave1;
            autoD8964E33_u = UnitGroupCount(autoD8964E33_g, c_unitCountAll);
            for (;; autoD8964E33_u -= 1) {
                autoD8964E33_var = UnitGroupUnitFromEnd(autoD8964E33_g, autoD8964E33_u);
                if (autoD8964E33_var == null) { break; }
                UnitIssueOrder(autoD8964E33_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        autoA4331BFA_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
        for (autoA4331BFA_i = 1; autoA4331BFA_i <= autoA4331BFA_n; autoA4331BFA_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave3, UnitLastCreated());
            auto8800076B_g = gv_counterattackWave3;
            auto8800076B_u = UnitGroupCount(auto8800076B_g, c_unitCountAll);
            for (;; auto8800076B_u -= 1) {
                auto8800076B_var = UnitGroupUnitFromEnd(auto8800076B_g, auto8800076B_u);
                if (auto8800076B_var == null) { break; }
                UnitIssueOrder(auto8800076B_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(47))), c_orderQueueAddToEnd);
                UnitIssueOrder(auto8800076B_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(45))), c_orderQueueAddToEnd);
                UnitIssueOrder(auto8800076B_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        autoAA1114BB_n = lib1926661B_gf_DifficultyValueInteger(10, 25);
        for (autoAA1114BB_i = 1; autoAA1114BB_i <= autoAA1114BB_n; autoAA1114BB_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto2B9254AC_g = gv_counterattackWave2;
            auto2B9254AC_u = UnitGroupCount(auto2B9254AC_g, c_unitCountAll);
            for (;; auto2B9254AC_u -= 1) {
                auto2B9254AC_var = UnitGroupUnitFromEnd(auto2B9254AC_g, auto2B9254AC_u);
                if (auto2B9254AC_var == null) { break; }
                UnitIssueOrder(auto2B9254AC_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        for (autoD9A58DE0_i = 1; autoD9A58DE0_i <= autoD9A58DE0_n; autoD9A58DE0_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto74A3468F_g = gv_counterattackWave2;
            auto74A3468F_u = UnitGroupCount(auto74A3468F_g, c_unitCountAll);
            for (;; auto74A3468F_u -= 1) {
                auto74A3468F_var = UnitGroupUnitFromEnd(auto74A3468F_g, auto74A3468F_u);
                if (auto74A3468F_var == null) { break; }
                UnitIssueOrder(auto74A3468F_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        autoD04BCAB5_n = lib1926661B_gf_DifficultyValueInteger(14, 32);
        for (autoD04BCAB5_i = 1; autoD04BCAB5_i <= autoD04BCAB5_n; autoD04BCAB5_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto3501419F_g = gv_counterattackWave2;
            auto3501419F_u = UnitGroupCount(auto3501419F_g, c_unitCountAll);
            for (;; auto3501419F_u -= 1) {
                auto3501419F_var = UnitGroupUnitFromEnd(auto3501419F_g, auto3501419F_u);
                if (auto3501419F_var == null) { break; }
                UnitIssueOrder(auto3501419F_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto87D4A5C9_n = lib1926661B_gf_DifficultyValueInteger(14, 32);
        for (auto87D4A5C9_i = 1; auto87D4A5C9_i <= auto87D4A5C9_n; auto87D4A5C9_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoC0F39649_g = gv_counterattackWave2;
            autoC0F39649_u = UnitGroupCount(autoC0F39649_g, c_unitCountAll);
            for (;; autoC0F39649_u -= 1) {
                autoC0F39649_var = UnitGroupUnitFromEnd(autoC0F39649_g, autoC0F39649_u);
                if (autoC0F39649_var == null) { break; }
                UnitIssueOrder(autoC0F39649_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        auto306B8EDA_n = lib1926661B_gf_DifficultyValueInteger(14, 30);
        for (auto306B8EDA_i = 1; auto306B8EDA_i <= auto306B8EDA_n; auto306B8EDA_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave3, UnitLastCreated());
            auto52C7D496_g = gv_counterattackWave3;
            auto52C7D496_u = UnitGroupCount(auto52C7D496_g, c_unitCountAll);
            for (;; auto52C7D496_u -= 1) {
                auto52C7D496_var = UnitGroupUnitFromEnd(auto52C7D496_g, auto52C7D496_u);
                if (auto52C7D496_var == null) { break; }
                UnitIssueOrder(auto52C7D496_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(47))), c_orderQueueAddToEnd);
                UnitIssueOrder(auto52C7D496_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(45))), c_orderQueueAddToEnd);
                UnitIssueOrder(auto52C7D496_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        for (autoE527C8B7_i = 1; autoE527C8B7_i <= autoE527C8B7_n; autoE527C8B7_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            auto5CC2E239_g = gv_counterattackWave1;
            auto5CC2E239_u = UnitGroupCount(auto5CC2E239_g, c_unitCountAll);
            for (;; auto5CC2E239_u -= 1) {
                auto5CC2E239_var = UnitGroupUnitFromEnd(auto5CC2E239_g, auto5CC2E239_u);
                if (auto5CC2E239_var == null) { break; }
                UnitIssueOrder(auto5CC2E239_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
            autoD2E46F0E_g = gv_counterattackWave1;
            autoD2E46F0E_u = UnitGroupCount(autoD2E46F0E_g, c_unitCountAll);
            for (;; autoD2E46F0E_u -= 1) {
                autoD2E46F0E_var = UnitGroupUnitFromEnd(autoD2E46F0E_g, autoD2E46F0E_u);
                if (autoD2E46F0E_var == null) { break; }
                UnitIssueOrder(autoD2E46F0E_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(8.0, c_timeReal);
        auto5AF3B9AD_n = lib1926661B_gf_DifficultyValueInteger(15, 35);
        for (auto5AF3B9AD_i = 1; auto5AF3B9AD_i <= auto5AF3B9AD_n; auto5AF3B9AD_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoC6765D97_g = gv_counterattackWave2;
            autoC6765D97_u = UnitGroupCount(autoC6765D97_g, c_unitCountAll);
            for (;; autoC6765D97_u -= 1) {
                autoC6765D97_var = UnitGroupUnitFromEnd(autoC6765D97_g, autoC6765D97_u);
                if (autoC6765D97_var == null) { break; }
                UnitIssueOrder(autoC6765D97_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        for (auto46714F7F_i = 1; auto46714F7F_i <= auto46714F7F_n; auto46714F7F_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoCF1E5235_g = gv_counterattackWave2;
            autoCF1E5235_u = UnitGroupCount(autoCF1E5235_g, c_unitCountAll);
            for (;; autoCF1E5235_u -= 1) {
                autoCF1E5235_var = UnitGroupUnitFromEnd(autoCF1E5235_g, autoCF1E5235_u);
                if (autoCF1E5235_var == null) { break; }
                UnitIssueOrder(autoCF1E5235_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto1169235A_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
        for (auto1169235A_i = 1; auto1169235A_i <= auto1169235A_n; auto1169235A_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave3, UnitLastCreated());
            autoF0BECC48_g = gv_counterattackWave3;
            autoF0BECC48_u = UnitGroupCount(autoF0BECC48_g, c_unitCountAll);
            for (;; autoF0BECC48_u -= 1) {
                autoF0BECC48_var = UnitGroupUnitFromEnd(autoF0BECC48_g, autoF0BECC48_u);
                if (autoF0BECC48_var == null) { break; }
                UnitIssueOrder(autoF0BECC48_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(47))), c_orderQueueReplace);
                UnitIssueOrder(autoF0BECC48_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(45))), c_orderQueueAddToEnd);
                UnitIssueOrder(autoF0BECC48_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(11.0, c_timeReal);
        autoEDA2C7C6_n = lib1926661B_gf_DifficultyValueInteger(13, 30);
        for (autoEDA2C7C6_i = 1; autoEDA2C7C6_i <= autoEDA2C7C6_n; autoEDA2C7C6_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            auto80CF66E7_g = gv_counterattackWave1;
            auto80CF66E7_u = UnitGroupCount(auto80CF66E7_g, c_unitCountAll);
            for (;; auto80CF66E7_u -= 1) {
                auto80CF66E7_var = UnitGroupUnitFromEnd(auto80CF66E7_g, auto80CF66E7_u);
                if (auto80CF66E7_var == null) { break; }
                UnitIssueOrder(auto80CF66E7_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto286FCFFC_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
        for (auto286FCFFC_i = 1; auto286FCFFC_i <= auto286FCFFC_n; auto286FCFFC_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            auto47C50386_g = gv_counterattackWave1;
            auto47C50386_u = UnitGroupCount(auto47C50386_g, c_unitCountAll);
            for (;; auto47C50386_u -= 1) {
                auto47C50386_var = UnitGroupUnitFromEnd(auto47C50386_g, auto47C50386_u);
                if (auto47C50386_var == null) { break; }
                UnitIssueOrder(auto47C50386_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(8.0, c_timeReal);
        auto1BACC1CE_n = lib1926661B_gf_DifficultyValueInteger(10, 25);
        for (auto1BACC1CE_i = 1; auto1BACC1CE_i <= auto1BACC1CE_n; auto1BACC1CE_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoF09DDFDC_g = gv_counterattackWave2;
            autoF09DDFDC_u = UnitGroupCount(autoF09DDFDC_g, c_unitCountAll);
            for (;; autoF09DDFDC_u -= 1) {
                autoF09DDFDC_var = UnitGroupUnitFromEnd(autoF09DDFDC_g, autoF09DDFDC_u);
                if (autoF09DDFDC_var == null) { break; }
                UnitIssueOrder(autoF09DDFDC_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        for (autoDCF82D21_i = 1; autoDCF82D21_i <= autoDCF82D21_n; autoDCF82D21_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto888A1D62_g = gv_counterattackWave2;
            auto888A1D62_u = UnitGroupCount(auto888A1D62_g, c_unitCountAll);
            for (;; auto888A1D62_u -= 1) {
                auto888A1D62_var = UnitGroupUnitFromEnd(auto888A1D62_g, auto888A1D62_u);
                if (auto888A1D62_var == null) { break; }
                UnitIssueOrder(auto888A1D62_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto6C6C5505_n = lib1926661B_gf_DifficultyValueInteger(2, 5);
        for (auto6C6C5505_i = 1; auto6C6C5505_i <= auto6C6C5505_n; auto6C6C5505_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Roach", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            autoDE34C066_g = gv_counterattackWave1;
            autoDE34C066_u = UnitGroupCount(autoDE34C066_g, c_unitCountAll);
            for (;; autoDE34C066_u -= 1) {
                autoDE34C066_var = UnitGroupUnitFromEnd(autoDE34C066_g, autoDE34C066_u);
                if (autoDE34C066_var == null) { break; }
                UnitIssueOrder(autoDE34C066_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        gv_counterattackSectionActive = 1;
        Wait(11.0, c_timeReal);
        auto373DA9AC_n = lib1926661B_gf_DifficultyValueInteger(12, 35);
        for (auto373DA9AC_i = 1; auto373DA9AC_i <= auto373DA9AC_n; auto373DA9AC_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            auto1C7F7A63_g = gv_counterattackWave2;
            auto1C7F7A63_u = UnitGroupCount(auto1C7F7A63_g, c_unitCountAll);
            for (;; auto1C7F7A63_u -= 1) {
                auto1C7F7A63_var = UnitGroupUnitFromEnd(auto1C7F7A63_g, auto1C7F7A63_u);
                if (auto1C7F7A63_var == null) { break; }
                UnitIssueOrder(auto1C7F7A63_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto68DB9CC1_n = lib1926661B_gf_DifficultyValueInteger(5, 11);
        for (auto68DB9CC1_i = 1; auto68DB9CC1_i <= auto68DB9CC1_n; auto68DB9CC1_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoFCCE3C34_g = gv_counterattackWave2;
            autoFCCE3C34_u = UnitGroupCount(autoFCCE3C34_g, c_unitCountAll);
            for (;; autoFCCE3C34_u -= 1) {
                autoFCCE3C34_var = UnitGroupUnitFromEnd(autoFCCE3C34_g, autoFCCE3C34_u);
                if (autoFCCE3C34_var == null) { break; }
                UnitIssueOrder(autoFCCE3C34_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(12.0, c_timeReal);
        auto02898D5B_n = lib1926661B_gf_DifficultyValueInteger(15, 30);
        for (auto02898D5B_i = 1; auto02898D5B_i <= auto02898D5B_n; auto02898D5B_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            autoB4EE133E_g = gv_counterattackWave1;
            autoB4EE133E_u = UnitGroupCount(autoB4EE133E_g, c_unitCountAll);
            for (;; autoB4EE133E_u -= 1) {
                autoB4EE133E_var = UnitGroupUnitFromEnd(autoB4EE133E_g, autoB4EE133E_u);
                if (autoB4EE133E_var == null) { break; }
                UnitIssueOrder(autoB4EE133E_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto81E22699_n = lib1926661B_gf_DifficultyValueInteger(5, 10);
        for (auto81E22699_i = 1; auto81E22699_i <= auto81E22699_n; auto81E22699_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave1, UnitLastCreated());
            auto21D22BE7_g = gv_counterattackWave1;
            auto21D22BE7_u = UnitGroupCount(auto21D22BE7_g, c_unitCountAll);
            for (;; auto21D22BE7_u -= 1) {
                auto21D22BE7_var = UnitGroupUnitFromEnd(auto21D22BE7_g, auto21D22BE7_u);
                if (auto21D22BE7_var == null) { break; }
                UnitIssueOrder(auto21D22BE7_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        Wait(8.0, c_timeReal);
        autoA7076D03_n = lib1926661B_gf_DifficultyValueInteger(10, 25);
        for (autoA7076D03_i = 1; autoA7076D03_i <= autoA7076D03_n; autoA7076D03_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Zergling", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoE824D8C3_g = gv_counterattackWave2;
            autoE824D8C3_u = UnitGroupCount(autoE824D8C3_g, c_unitCountAll);
            for (;; autoE824D8C3_u -= 1) {
                autoE824D8C3_var = UnitGroupUnitFromEnd(autoE824D8C3_g, autoE824D8C3_u);
                if (autoE824D8C3_var == null) { break; }
                UnitIssueOrder(autoE824D8C3_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
        auto06622EE9_n = lib1926661B_gf_DifficultyValueInteger(4, 8);
        for (auto06622EE9_i = 1; auto06622EE9_i <= auto06622EE9_n; auto06622EE9_i += 1) {
            libNtve_gf_CreateUnitsWithDefaultFacing(1, "Hydralisk", 0, gv_pLAYER_03_ROACHES_HOSTILE, PointFromId(1525073823));
            UnitGroupAdd(gv_counterattackWave2, UnitLastCreated());
            autoDF6EB0FE_g = gv_counterattackWave2;
            autoDF6EB0FE_u = UnitGroupCount(autoDF6EB0FE_g, c_unitCountAll);
            for (;; autoDF6EB0FE_u -= 1) {
                autoDF6EB0FE_var = UnitGroupUnitFromEnd(autoDF6EB0FE_g, autoDF6EB0FE_u);
                if (autoDF6EB0FE_var == null) { break; }
                UnitIssueOrder(autoDF6EB0FE_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(72))), c_orderQueueAddToEnd);
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterAttackUnitGroupFills_Init () {
    gt_CounterAttackUnitGroupFills = TriggerCreate("gt_CounterAttackUnitGroupFills_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterAttackCinematic
//--------------------------------------------------------------------------------------------------
bool gt_CounterAttackCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_CounterAttackUnitGroupFills, false, false);
    TriggerSkippableBegin(PlayerGroupAll(), 0, null, true, false);
    gv_cinematicCompleted = false;
    UIShowTextCrawl(PlayerGroupAll(), StringExternal("Param/Value/24213B92"), StringExternal("Param/Value/C95B1B9A"), 8.0, SoundLink("TextCrawlType", -1), SoundLink("TextCrawlType", -1));
    Wait(7.0, c_timeReal);
    gv_z1Spy = UnitFromId(729593720);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(765586673), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    CameraSetBounds(PlayerGroupAll(), RegionEntireMap(), true);
    RegionPlayableMapSet(RegionEntireMap());
    Wait(3.0, c_timeReal);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, true);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionZ, 0.1, 0.005, 100.0, 35.0);
    SoundPlayForPlayer(SoundLink("SpyGraves82", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableInstanceCreate();
    DataTableInstanceSetSound(DataTableInstanceLastCreated(), "Earthquake", SoundLastPlayed());
    Wait(0.5, c_timeReal);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(635726750), 20.0, -1, 10.0, true);
    Wait(14.0, c_timeReal);
    lib1926661B_gf_SendTransmissionAdvancedLotC(StringExternal("Param/Value/9A692616"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00020", "Z1", true, gv_z1Spy, false, c_transmissionDurationAdd, 0.0);
    Wait(4.0, c_timeReal);
    CinematicFade(false, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    UnitPauseAll(true);
    lib1926661B_gf_SendTransmissionLotC(true, libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "EP01M04|Line00021", null, true, gv_cARR, false);
    gv_cinematicCompleted = true;
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterAttackCinematic_Init () {
    gt_CounterAttackCinematic = TriggerCreate("gt_CounterAttackCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Counter Attack Cinematic End
//--------------------------------------------------------------------------------------------------
bool gt_CounterAttackCinematicEnd_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_cinematicCompleted == true)) {
        lv_fadeDuration = 1.0;
    }
    else {
        lv_fadeDuration = 0.5;
    }
    CinematicFade(false, lv_fadeDuration, c_fadeStyleNormal, ColorWithAlpha(0.00, 0.00, 0.00, 0.00), 0.0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterAttackCinematicEnd_Init () {
    gt_CounterAttackCinematicEnd = TriggerCreate("gt_CounterAttackCinematicEnd_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: CounterAttackCleanup
//--------------------------------------------------------------------------------------------------
bool gt_CounterAttackCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPause(DataTableInstanceGetSound(DataTableInstanceLastCreated(), "Earthquake"), true);
    UIHideTextCrawl(PlayerGroupAll());
    CameraShakeStop(gv_pLAYER_01_USER);
    UnitPauseAll(false);
    gv_inCinematic = false;
    TriggerExecute(gt_CounterattackSectionStarts, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_CounterAttackCleanup_Init () {
    gt_CounterAttackCleanup = TriggerCreate("gt_CounterAttackCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Initialization_Init();
    gt_Init01Technology_Init();
    gt_Init02Players_Init();
    gt_Init03Units_Init();
    gt_Init04MusicSound_Init();
    gt_Init05Environment_Init();
    gt_Init06Difficulties_Init();
    gt_Init07Help_Init();
    gt_ExhumerBlows_Init();
    gt_ExhumerGoingtoBlow_Init();
    gt_MortarTrooper_Init();
    gt_CARRRebuilt_Init();
    gt_CARRDies_Init();
    gt_TipZ1UnitQ_Init();
    gt_TipZ1ShieldQ_Init();
    gt_TipZ1NitrogenQ_Init();
    gt_TipZ1BadgerQ_Init();
    gt_TipRoutheUnitQ_Init();
    gt_TipA6UnitQ_Init();
    gt_TipTR17UnitQ_Init();
    gt_TipTR17StarburstQ_Init();
    gt_TipGravesUnitQ_Init();
    gt_TipJericoUnitQ_Init();
    gt_TipFlashFog_Init();
    gt_TipAncillaryDenDead_Init();
    gt_InfoChip1_Init();
    gt_InfoChip2_Init();
    gt_InfoChip3_Init();
    gt_InfoChip4_Init();
    gt_InfoChip5_Init();
    gt_AIAttackWaveDarkSwarm_Init();
    gt_DefilerUsesAbility_Init();
    gt_DefilerEnergy_Init();
    gt_StartGameQ_Init();
    gt_DisableTacAI_Init();
    gt_PreGameStartSetup_Init();
    gt_HideBirds_Init();
    gt_PatrolsInTheClearUltra_Init();
    gt_PatrolsInTheClearMutas_Init();
    gt_LancerBaseRespawns_Init();
    gt_RegionSE_Init();
    gt_RegionCenter2_Init();
    gt_RegionCenter_Init();
    gt_RegionCenter3_Init();
    gt_MutaOverlordVulnerability_Init();
    gt_DropVulnerability_Init();
    gt_DropVulnerability2_Init();
    gt_FlashFogofWarInvulExisting_Init();
    gt_FlashFogofWarInvul_Init();
    gt_FlashFogofWarVul_Init();
    gt_MajorAttack_Init();
    gt_MajorAttackEarly_Init();
    gt_OverlordDropSpawn_Init();
    gt_OverlordDropSpawn2_Init();
    gt_OverlordDropAttack_Init();
    gt_OverlordDropAttack2_Init();
    gt_FlashFogPatrol5_Init();
    gt_FlashFogPatrol6_Init();
    gt_FlashFogPatrol7_Init();
    gt_FlashFogPatrol8_Init();
    gt_FlashFogPatrol9_Init();
    gt_FlashFogInitialAlert_Init();
    gt_FlashFogTimer_Init();
    gt_FlashFogEvent1_Init();
    gt_FlashFogTimer2_Init();
    gt_FlashFogEvent2_Init();
    gt_FlashFogTimer3_Init();
    gt_FlashFogEvent3_Init();
    gt_FlashFogTimer4_Init();
    gt_FlashFogEvent4_Init();
    gt_MutaAttack1_Init();
    gt_UltraAttack1_Init();
    gt_FlashFogTimer5_Init();
    gt_FlashFogEvent5_Init();
    gt_FlashFogTimer6_Init();
    gt_FlashFogEvent6_Init();
    gt_MutaAttack2_Init();
    gt_UltraAttack2_Init();
    gt_FlashFogTimer7_Init();
    gt_FlashFogEvent7_Init();
    gt_FlashFogofWarRecedes_Init();
    gt_Z1SectionGameplayStart_Init();
    gt_Z1TransmissionSunkenColonySpotted_Init();
    gt_Z1ZergUnburrow_Init();
    gt_Z1ZergUnburrow2_Init();
    gt_Z1ZergUnburrow3_Init();
    gt_Z1UltraliskUnburrow_Init();
    gt_Z1TransmissionSunkenColonySpotted2_Init();
    gt_Z1BadgerUsed_Init();
    gt_Z1SectionVictory_Init();
    gt_RoutheSetup_Init();
    gt_RoutheStarts_Init();
    gt_Z1Transmission2UltrasDead_Init();
    gt_RoutheUltraDeadCount_Init();
    gt_RoutheEnd_Init();
    gt_A6SectionSetup_Init();
    gt_A6SectionStarts_Init();
    gt_A6SectionEnd_Init();
    gt_TR17Setup_Init();
    gt_TR17UnitSetup_Init();
    gt_TR17Start_Init();
    gt_TR17RoachWaveTiming_Init();
    gt_TR17Reinforcements_Init();
    gt_TR17ReinforcementsRescued_Init();
    gt_TR17RoachWaves_Init();
    gt_TR17RoachWaves2_Init();
    gt_TR17RoachWaves3_Init();
    gt_TR17End_Init();
    gt_DestroyPressureCooker_Init();
    gt_DestroySpire_Init();
    gt_SpyReinforcements_Init();
    gt_SpyRoaches1_Init();
    gt_SpySectionEnds1_Init();
    gt_SpySectionEnds2_Init();
    gt_SpySectionEnds3_Init();
    gt_SpySectionWrapup_Init();
    gt_CounterattackUnitPrep_Init();
    gt_CounterattackSectionStarts_Init();
    gt_CounterattackWait_Init();
    gt_CounterattackArtillery_Init();
    gt_DayandNightCycle_Init();
    gt_CounterattackOver_Init();
    gt_LancerTutorial1Repair_Init();
    gt_LancerTutorial1RepairComplete1_Init();
    gt_LancerTutorial1RepairComplete1A_Init();
    gt_LancerTutorial1RepairComplete2_Init();
    gt_LancerTutorial1RepairComplete2A_Init();
    gt_LancerTutorial1RepairComplete3_Init();
    gt_LancerTutorial1RepairComplete3A_Init();
    gt_LancerTutorial2_Init();
    gt_LancerTutorial2Complete_Init();
    gt_LancerTutorialFinal_Init();
    gt_MutasAppear_Init();
    gt_UltrasAppear_Init();
    gt_GravesVanishes_Init();
    gt_MajorAttackGroupDead_Init();
    gt_AncillaryDenDead_Init();
    gt_LancerComplete_Init();
    gt_GravesKills_Init();
    gt_JericoKills_Init();
    gt_BadgerBombKills_Init();
    gt_TR17sBuilt_Init();
    gt_TR17Kills_Init();
    gt_CARRsLost_Init();
    gt_FogUnitsLost_Init();
    gt_DefeatScoutZ1sDead_Init();
    gt_DefeatSpySectionCrewDead_Init();
    gt_DefeatTR17CrewDead_Init();
    gt_DefeatGravesDead_Init();
    gt_DefeatJericoDead_Init();
    gt_VictoryLancerCompleted_Init();
    gt_VictorySequence_Init();
    gt_Victory_Init();
    gt_Defeat_Init();
    gt_VictoryCheat_Init();
    gt_DefeatCheat_Init();
    gt_IntroOsprey1_Init();
    gt_IntroOsprey2_Init();
    gt_OspreyRemove2_Init();
    gt_IntroOspreyRemove_Init();
    gt_IntroOspreyRemove3_Init();
    gt_IntroCondorLand_Init();
    gt_IntroCondorTakeOff_Init();
    gt_IntroTR17Face_Init();
    gt_RocketTroopersFace_Init();
    gt_IntroQ_Init();
    gt_IntroSetup_Init();
    gt_IntroCinematic_Init();
    gt_IntroCinematicEnd_Init();
    gt_IntroCleanup_Init();
    gt_ZergPopUp_Init();
    gt_MutasorUltrasQ_Init();
    gt_MutasorUltrasSetup_Init();
    gt_MutasorUltrasCinematic_Init();
    gt_MutasorUltrasCleanup_Init();
    gt_ElevatorControlUsed_Init();
    gt_MutasorUltrasChoiceEnd_Init();
    gt_CounterattackQ_Init();
    gt_CounterattackSetup_Init();
    gt_CounterAttackUnitGroupFills_Init();
    gt_CounterAttackCinematic_Init();
    gt_CounterAttackCinematicEnd_Init();
    gt_CounterAttackCleanup_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
