//==================================================================================================
// 
// Generated Map Script
// 
// Name:   Abandon Hope
// 
//==================================================================================================
include "TriggerLibs/NativeLib"
include "TriggerLibs/LibertyLib"
include "TriggerLibs/VoidCampaignLib"
include "TriggerLibs/VoidCampaignMissionLib"
include "LibAE8FC9D3"
include "Lib1926661B"

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
void InitLibs () {
    libNtve_InitLib();
    libLbty_InitLib();
    libVoiC_InitLib();
    libVCMI_InitLib();
    libAE8FC9D3_InitLib();
    lib1926661B_InitLib();
}

//--------------------------------------------------------------------------------------------------
// Constants
//--------------------------------------------------------------------------------------------------
const int gv_p00_NEUTRAL = 0;
const int gv_pLAYER_01_USER = 1;
const int gv_p02_HUMANSNEUTRAL = 2;
const int gv_p03_HUMANSENEMY = 3;
const int gv_p04_ZERGNEUTRAL = 4;
const int gv_p05_HUMANSNEUTRAL = 5;
const int gv_p06_ZERGNEUTRAL_NEUTRAL = 6;
const int gv_p09_ZERGNEUTRAL_NEUTRAL = 9;
const int gv_p15_HUMANS_HOSTILE = 15;

//--------------------------------------------------------------------------------------------------
// Global Variables
//--------------------------------------------------------------------------------------------------
bool gv_gameOver;
bool gv_inCinematic;
unitgroup gv_startingAreaCivilianGroup;
unitgroup gv_stage1PausedUnits;
int gv_stat_HumansHarvested;
int gv_stat_NoiseDestroyed;
int gv_stat_ResourceSpent;
int gv_stat_DefilersLost;
int gv_stat_LoreFound;
bool gv_transmissionDecom;
bool gv_startingAreaPlagueSetting;
bool gv_startingAreaActive;
int gv_startingAreaHarvestBiomassObjective;
revealer gv_startingAreaRevealer;
bool gv_startingAreaDoorOpen;
unitgroup gv_startingAreaLeftGarrison;
unitgroup gv_startingAreaCloseRightGarrison;
unitgroup gv_startingAreaMediumRightGarrison;
unitgroup gv_startingAreaFarRightGarrison;
unitgroup gv_startingAreaLeftCivilians;
unitgroup gv_startingAreaCloseRightCivilians;
unitgroup gv_startingAreaMediumRightCivilians;
unitgroup gv_startingAreaFarRightCivilians;
actor gv_startingAreaReticle2;
actor gv_startingAreaReticle;
int gv_startingAreaReticleTextTag;
int gv_startingAreaReticleTextTag2;
int gv_startingAreaCivilianPing1;
int gv_startingAreaCivilianPing2;
int gv_startingAreaCivilianPing3;
int gv_startingAreaCivilianPing4;
int gv_startingAreaCivilianPing5;
int gv_startingAreaObjectivePoint;
int gv_reachCityObjective;
int gv_colonyShipArea1TextTag1;
int gv_colonyShipArea1TextTag2;
int gv_colonyShipArea1TextTag3;
int gv_colonyShipArea1TextTag4;
int gv_colonyShipArea1TextTag5;
int gv_colonyShipArea1TextTag6;
int gv_colonyShipArea1TextTagAlarm;
actor gv_colonyShipArea1Reticle1;
actor gv_colonyShipArea1Reticle2;
actor gv_colonyShipArea1Reticle3;
actor gv_colonyShipArea1Reticle4;
actor gv_colonyShipArea1Reticle5;
actor gv_colonyShipArea1Reticle6;
actor gv_colonyShipArea1ReticleAlarm;
unitgroup gv_colonyShipReinforcements;
bool gv_colonyShipDoor2SlohrFinished;
bool gv_colonyShipDoorOpen1;
bool gv_colonyShipDoorOpen2;
bool gv_colonyShipArea1Active;
int gv_colonyShipDeaths;
int gv_colonyShipArea1TimerWindow;
timer gv_colonyShipArea1Timer;
int gv_colonyShipArea1Objective;
int gv_colonyShipArea2TextTag1;
int gv_colonyShipArea2TextTag2;
int gv_colonyShipArea2TextTag3;
int gv_colonyShipArea2TextTag4;
int gv_colonyShipArea2TextTagAlarm;
actor gv_colonyShipArea2Reticle1;
actor gv_colonyShipArea2Reticle2;
actor gv_colonyShipArea2Reticle3;
actor gv_colonyShipArea2Reticle4;
actor gv_colonyShipArea2ReticleAlarm;
bool gv_colonyShip2DoorOpen1;
bool gv_colonyShip2DoorOpen5;
unitgroup gv_colonyShipArea2CaptainGroup;
bool gv_colonyShipArea2Active;
int gv_colonyShipArea2TimerWindow;
timer gv_colonyShipArea2Timer;
int gv_colonyShipArea2Objective;
int gv_siegeAreaTextTag;
actor gv_siegeAreaReticle;
unitgroup gv_area1UnitGroup;
unitgroup gv_area2UnitGroup;
unitgroup gv_colonyShipGroup;
unitgroup gv_endingCinematicOverlordGroup;

void InitGlobals () {
    gv_startingAreaCivilianGroup = UnitGroupEmpty();
    gv_stage1PausedUnits = UnitGroupEmpty();
    gv_startingAreaHarvestBiomassObjective = c_invalidObjectiveId;
    gv_startingAreaLeftGarrison = UnitGroupEmpty();
    gv_startingAreaCloseRightGarrison = UnitGroupEmpty();
    gv_startingAreaMediumRightGarrison = UnitGroupEmpty();
    gv_startingAreaFarRightGarrison = UnitGroupEmpty();
    gv_startingAreaLeftCivilians = UnitGroupEmpty();
    gv_startingAreaCloseRightCivilians = UnitGroupEmpty();
    gv_startingAreaMediumRightCivilians = UnitGroupEmpty();
    gv_startingAreaFarRightCivilians = UnitGroupEmpty();
    gv_startingAreaReticleTextTag = c_textTagNone;
    gv_startingAreaReticleTextTag2 = c_textTagNone;
    gv_startingAreaCivilianPing1 = c_invalidPingId;
    gv_startingAreaCivilianPing2 = c_invalidPingId;
    gv_startingAreaCivilianPing3 = c_invalidPingId;
    gv_startingAreaCivilianPing4 = c_invalidPingId;
    gv_startingAreaCivilianPing5 = c_invalidPingId;
    gv_startingAreaObjectivePoint = c_invalidPingId;
    gv_reachCityObjective = c_invalidObjectiveId;
    gv_colonyShipArea1TextTag1 = c_textTagNone;
    gv_colonyShipArea1TextTag2 = c_textTagNone;
    gv_colonyShipArea1TextTag3 = c_textTagNone;
    gv_colonyShipArea1TextTag4 = c_textTagNone;
    gv_colonyShipArea1TextTag5 = c_textTagNone;
    gv_colonyShipArea1TextTag6 = c_textTagNone;
    gv_colonyShipArea1TextTagAlarm = c_textTagNone;
    gv_colonyShipReinforcements = UnitGroupEmpty();
    gv_colonyShipArea1TimerWindow = c_timerWindowNone;
    gv_colonyShipArea1Timer = TimerCreate();
    gv_colonyShipArea1Objective = c_invalidObjectiveId;
    gv_colonyShipArea2TextTag1 = c_textTagNone;
    gv_colonyShipArea2TextTag2 = c_textTagNone;
    gv_colonyShipArea2TextTag3 = c_textTagNone;
    gv_colonyShipArea2TextTag4 = c_textTagNone;
    gv_colonyShipArea2TextTagAlarm = c_textTagNone;
    gv_colonyShipArea2CaptainGroup = UnitGroupEmpty();
    gv_colonyShipArea2TimerWindow = c_timerWindowNone;
    gv_colonyShipArea2Timer = TimerCreate();
    gv_colonyShipArea2Objective = c_invalidObjectiveId;
    gv_siegeAreaTextTag = c_textTagNone;
    gv_area1UnitGroup = UnitGroupEmpty();
    gv_area2UnitGroup = UnitGroupEmpty();
    gv_colonyShipGroup = UnitGroupEmpty();
    gv_endingCinematicOverlordGroup = UnitGroupEmpty();
}

//--------------------------------------------------------------------------------------------------
// Global Function Declarations
//--------------------------------------------------------------------------------------------------
void gf_SendTransmissionFromUnit (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue);
void gf_SendTransmissionFromUnitCombat (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue);

//--------------------------------------------------------------------------------------------------
// Trigger Variables
//--------------------------------------------------------------------------------------------------
trigger gt_Initialization;
trigger gt_Init01PlayersUI;
trigger gt_Init02Technology;
trigger gt_Init04AbilitiesUnits;
trigger gt_Init05MusicEnvironment;
trigger gt_SetMortarColor;
trigger gt_InfoChip1;
trigger gt_InfoChip2;
trigger gt_InfoChip3;
trigger gt_InfoChip4;
trigger gt_TipHarvestBiomass;
trigger gt_TipSleepersHarvested;
trigger gt_TipNestAttacked;
trigger gt_Stat_HumansHarvested;
trigger gt_Stat_NoiseMakersDestroyed;
trigger gt_Stat_DefilersLost;
trigger gt_DefeatColonyShip1Escaped;
trigger gt_DefeatColonyShip2Escaped;
trigger gt_DefeatAllUnitsKilled;
trigger gt_DefeatAllUnitsKilledOnShips;
trigger gt_VictorySiegeCompleted;
trigger gt_VictorySequence;
trigger gt_Victory;
trigger gt_Defeat;
trigger gt_VictoryCheat;
trigger gt_DefeatCheat;
trigger gt_StartingAreaEastGateTripwire;
trigger gt_StartingAreaLeftTripwire;
trigger gt_StartingAreaCloseRightTripwire;
trigger gt_StartingAreaCloseMiddleRightTripwire;
trigger gt_StartingAreaCloseFarRightTripwire;
trigger gt_ColonyShip1AreaSlohrTripwire;
trigger gt_ColonyShip1AreaBehemothsTripwire;
trigger gt_ColonyShip1AreaCARRTripwire;
trigger gt_ColonyShip2AreaAnnouncementTripwire;
trigger gt_ColonyShip2AreaCaptainDeadTripwire;
trigger gt_ColonyShip2AreaSecurityArrivesTripwire;
trigger gt_ColonyShip2AreaIsThatAllYouGotTripwire;
trigger gt_ColonyShip2AreaScreamingSoldierTripwire;
trigger gt_SiegeAreaTripwire1;
trigger gt_SiegeAreaTripwire2;
trigger gt_SiegeAreaTripwire3;
trigger gt_SiegeAreaTripwire4;
trigger gt_SiegeAreaTripwire5;
trigger gt_StartingAreaGate1Death;
trigger gt_StartingAreaGateInvisible1Death;
trigger gt_StartingAreaGate2Death;
trigger gt_StartingAreaGateInvisible2Death;
trigger gt_StartingAreaCivilianStopandRun;
trigger gt_StartingAreaCivilianEscape1;
trigger gt_StartingAreaCivilianEscape1A;
trigger gt_StartingAreaCivilianEscape2;
trigger gt_StartingAreaCivilianEscape2A;
trigger gt_StartingAreaCivilianEscape3;
trigger gt_StartingAreaLeftCiviliansRun;
trigger gt_StartingAreaCloseRightCiviliansRun;
trigger gt_StartingAreaMediumRightCiviliansRun;
trigger gt_StartingAreaFarRightCiviliansRun;
trigger gt_StartingAreaCivilianDespawn;
trigger gt_StartingAreaKillReticle1Ping1;
trigger gt_StartingAreaKillReticle1Ping1AlternateCondition;
trigger gt_StartingAreaKillReticle2;
trigger gt_StartingAreaKillPing2;
trigger gt_StartingAreaKillPing3;
trigger gt_StartingAreaKillPing4;
trigger gt_StartingAreaKillPing5;
trigger gt_StartingAreaPlagueSetting;
trigger gt_StartingAreaBegins;
trigger gt_StartingAreaWarning;
trigger gt_StartingAreaCompletion;
trigger gt_ColonyShipArea1Door2Open;
trigger gt_ColonyShipArea1Door1Open;
trigger gt_ColonyShipDeathCount;
trigger gt_ColonyShipDeathCount2;
trigger gt_ColonyShipArea1Begins;
trigger gt_ColonyShipArea1Reinforcements;
trigger gt_ColonyShipArea1Reinforcements2;
trigger gt_ColonyShipArea1Alarm;
trigger gt_ColonyShipArea1AlarmDestroyed;
trigger gt_ColonyShipAreaLighting;
trigger gt_ColonyShipArea1Completion;
trigger gt_ColonyShipArea2DoorOpen1;
trigger gt_ColonyShipArea2DoorOpen5;
trigger gt_ColonyShipArea2DoorClose1;
trigger gt_ColonyShipArea2DoorClose5;
trigger gt_ColonyShipArea2DoorReinforcements1;
trigger gt_ColonyShipArea2DoorReinforcements2;
trigger gt_ColonyShipArea2DoorReinforcements3;
trigger gt_ColonyShipArea2DoorReinforcements4;
trigger gt_ColonyShipArea2ReinforcementDoorDies1;
trigger gt_ColonyShipArea2ReinforcementDoorDies2;
trigger gt_ColonyShipArea2ReinforcementDoorDies3;
trigger gt_ColonyShipArea2ReinforcementDoorDies4;
trigger gt_ColonyShipArea2Begins;
trigger gt_ColonyShipArea2Alarm;
trigger gt_ColonyShipArea2AlarmDestroyed;
trigger gt_ColonyShipArea2Completion;
trigger gt_SiegeAreaBegins;
trigger gt_SiegeAreaReticleDestroyed;
trigger gt_SiegeAreaComplete;
trigger gt_IntroCinematicSetup;
trigger gt_IntroCinematicCinematic;
trigger gt_IntroCinematicNukes;
trigger gt_IntroCinematicNukes2;
trigger gt_IntroCinematicCleanup;
trigger gt_ColonyShipCinematicSetup;
trigger gt_ColonyShipCinematicUnits;
trigger gt_ColonyShipCinematic;
trigger gt_ColonyShipCinematicCleanup;
trigger gt_VictoryQ;
trigger gt_EndingCinematicSetup;
trigger gt_EndingCinematicUnits;
trigger gt_EndingCinematic1;
trigger gt_EndingCinematic2;
trigger gt_EndingCinematic3;
trigger gt_EndingCinematic4;
trigger gt_EndingCinematic5;
trigger gt_EndingCinematicCleanup;

//--------------------------------------------------------------------------------------------------
// Global Functions
//--------------------------------------------------------------------------------------------------
void gf_SendTransmissionFromUnit (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitIsAlive(lp_unit) == true)) {
        libNtve_gf_AttachActorToUnit(lp_unit, "TalkIcon", "Ref_Origin");
        if ((gv_inCinematic == false)) {
            if ((lp_playCue == true)) {
                libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
            }

            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Speech);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 30.0, 0.0);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Game);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 0.0);
        }
        else {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        ActorScopeKill(libNtve_gf_ActorScopeLastCreated());
    }

}

void gf_SendTransmissionFromUnitCombat (unit lp_unit, soundlink lp_sound, text lp_text, bool lp_playCue) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitIsAlive(lp_unit) == true)) {
        libNtve_gf_AttachActorToUnit(lp_unit, "TalkIcon", "Ref_Origin");
        if ((gv_inCinematic == false)) {
            if ((lp_playCue == true)) {
                libLbty_gf_PlayTransmissionCueSound(PlayerGroupAll());
            }

            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Speech);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 30.0, 0.0);
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
            libVoiC_gf_SetAllSoundChannelVolumesCampaign(libVoiC_ge_VolumeChannelModeCampaign_Game);
            SoundChannelSetVolume(PlayerGroupAll(), c_soundCategoryMusic, 100.0, 0.0);
        }
        else {
            TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromUnit(lp_unit, true, false, "Talk"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", lp_sound, UnitGetName(lp_unit), lp_text, 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
        }
        ActorScopeKill(libNtve_gf_ActorScopeLastCreated());
    }

}

//--------------------------------------------------------------------------------------------------
// Trigger: Initialization
//--------------------------------------------------------------------------------------------------
bool gt_Initialization_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib1926661B_gf_ULoadCampaignData("UEDFL_EP01M09");
    TriggerExecute(gt_Init01PlayersUI, false, true);
    TriggerExecute(gt_Init02Technology, false, true);
    TriggerExecute(gt_Init04AbilitiesUnits, false, true);
    TriggerExecute(gt_Init05MusicEnvironment, false, true);
    TriggerExecute(gt_IntroCinematicSetup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Initialization_Init () {
    gt_Initialization = TriggerCreate("gt_Initialization_Func");
    TriggerAddEventMapInit(gt_Initialization);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 01 Players/UI
//--------------------------------------------------------------------------------------------------
bool gt_Init01PlayersUI_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p02_HUMANSNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p03_HUMANSENEMY, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p04_ZERGNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p05_HUMANSNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p06_ZERGNEUTRAL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p09_ZERGNEUTRAL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_pLAYER_01_USER, gv_p15_HUMANS_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_p02_HUMANSNEUTRAL, gv_p03_HUMANSENEMY, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libNtve_gf_SetAlliance(gv_p02_HUMANSNEUTRAL, gv_p04_ZERGNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p02_HUMANSNEUTRAL, gv_p05_HUMANSNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p02_HUMANSNEUTRAL, gv_p06_ZERGNEUTRAL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p02_HUMANSNEUTRAL, gv_p15_HUMANS_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_p03_HUMANSENEMY, gv_p04_ZERGNEUTRAL, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_p03_HUMANSENEMY, gv_p05_HUMANSNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p03_HUMANSENEMY, gv_p06_ZERGNEUTRAL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p03_HUMANSENEMY, gv_p15_HUMANS_HOSTILE, libNtve_ge_AllianceSetting_AllyWithSharedVision);
    libNtve_gf_SetAlliance(gv_p04_ZERGNEUTRAL, gv_p05_HUMANSNEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p04_ZERGNEUTRAL, gv_p06_ZERGNEUTRAL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p04_ZERGNEUTRAL, gv_p15_HUMANS_HOSTILE, libNtve_ge_AllianceSetting_Enemy);
    libNtve_gf_SetAlliance(gv_p05_HUMANSNEUTRAL, gv_p06_ZERGNEUTRAL_NEUTRAL, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p05_HUMANSNEUTRAL, gv_p15_HUMANS_HOSTILE, libNtve_ge_AllianceSetting_Neutral);
    libNtve_gf_SetAlliance(gv_p06_ZERGNEUTRAL_NEUTRAL, gv_p15_HUMANS_HOSTILE, libNtve_ge_AllianceSetting_Neutral);
    PlayerSetAlliance(gv_p02_HUMANSNEUTRAL, c_allianceIdPushable, gv_pLAYER_01_USER, false);
    PlayerSetAlliance(gv_p03_HUMANSENEMY, c_allianceIdPushable, gv_pLAYER_01_USER, false);
    PlayerSetAlliance(gv_p05_HUMANSNEUTRAL, c_allianceIdPushable, gv_pLAYER_01_USER, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTipAlertPanel, true);
    UISetResourceVisible(PlayerGroupAll(), c_resourceTypeTerrazine, true);
    UISetResourceVisible(PlayerGroupAll(), c_resourceTypeMinerals, false);
    UISetResourceVisible(PlayerGroupAll(), c_resourceTypeVespene, false);
    RegionPlayableMapSet(RegionFromId(1));
    CameraSetBounds(PlayerGroupActive(), RegionFromId(1), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init01PlayersUI_Init () {
    gt_Init01PlayersUI = TriggerCreate("gt_Init01PlayersUI_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 02 Technology
//--------------------------------------------------------------------------------------------------
bool gt_Init02Technology_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelShowTechTreeRace(PlayerGroupAll(), "Terr", false);
    TechTreeRestrictionsEnable(gv_pLAYER_01_USER, false);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "Burrow", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_p04_ZERGNEUTRAL, "Burrow", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_p06_ZERGNEUTRAL_NEUTRAL, "Burrow", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_p09_ZERGNEUTRAL_NEUTRAL, "Burrow", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "zerglingattackspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "overlordspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_p03_HUMANSENEMY, "overlordspeed", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "LotC_EP01M09_HumanResourceCosts", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "LotC_EP01M09_HumanResourceResearchCosts", 1);
    libNtve_gf_SetUpgradeLevelForPlayer(gv_pLAYER_01_USER, "hydraliskspeed", 1);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CreepColonyLotC", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Spire", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "QueenMP", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostMP", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "MutaliskBroodlord", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "MutaliskViper", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Queen", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "BanelingNest", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Extractor", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "ImpalerDen", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "CarrionNest", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfestationPit", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "LurkerDen", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "LurkerDenMP", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Queen", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "QueenClassic", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostMP", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Overseer", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "BroodLord", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "InfestedAbomination", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "NydusNetwork", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Mutalisk", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Ultralisk", false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("OverlordTransport", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("DefilerMPDarkSwarm", 0), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("SpawningPoolResearch", 1), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("LairResearch", 2), false);
    UnitAbilityEnable(UnitFromId(315702036), "DefilerMPConsume", true);
    UnitAbilityEnable(UnitFromId(315702036), "DefilerMPPlague", true);
    UnitAbilityEnable(UnitFromId(947676569), "DefilerMPConsume", true);
    UnitAbilityEnable(UnitFromId(947676569), "DefilerMPPlague", true);
    PlayerModifyPropertyFixed(gv_pLAYER_01_USER, c_playerPropMinerals, c_playerPropOperSetTo, 500.0);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("RoachWarrenResearch", 1), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("RoachWarrenResearch", 2), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("UltraliskCavernResearch", 2), false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("MorphZerglingToBaneling", 0), false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "QueenClassic", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Infestor", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostMP", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostBurrowedMP", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostBurrowed", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostSplitABurrowed", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostSplitBBurrowed", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Defiler", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHost", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostSplitARooted", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostSplitBRooted", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SwarmHostSplitA", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "RoachCorpser", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "MutaliskBroodlord", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "HotSRaptor", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "HotSSwarmling", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "HydraliskImpaler", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "HydraliskLurker", false);
    TechTreeAbilityAllow(gv_pLAYER_01_USER, AbilityCommand("TrainQueen", 2), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init02Technology_Init () {
    gt_Init02Technology = TriggerCreate("gt_Init02Technology_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 04 Abilities/Units
//--------------------------------------------------------------------------------------------------
bool gt_Init04AbilitiesUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoD5C38DC9_g;
    int autoD5C38DC9_u;
    unit autoD5C38DC9_var;
    unitgroup auto0DB5E175_g;
    int auto0DB5E175_u;
    unit auto0DB5E175_var;
    unitgroup auto76B12C07_g;
    int auto76B12C07_u;
    unit auto76B12C07_var;
    unitgroup auto6F04FD4F_g;
    int auto6F04FD4F_u;
    unit auto6F04FD4F_var;
    unitgroup auto4F93A40B_g;
    int auto4F93A40B_u;
    unit auto4F93A40B_var;
    unitgroup auto22EC859C_g;
    int auto22EC859C_u;
    unit auto22EC859C_var;
    unitgroup autoB1EF07F9_g;
    int autoB1EF07F9_u;
    unit autoB1EF07F9_var;
    unitgroup auto98527BFF_g;
    int auto98527BFF_u;
    unit auto98527BFF_var;
    unitgroup autoB31D8A41_g;
    int autoB31D8A41_u;
    unit autoB31D8A41_var;
    unitgroup auto14B1E85B_g;
    int auto14B1E85B_u;
    unit auto14B1E85B_var;
    unitgroup auto1CDEF43F_g;
    int auto1CDEF43F_u;
    unit auto1CDEF43F_var;
    unitgroup auto4BA81BC1_g;
    int auto4BA81BC1_u;
    unit auto4BA81BC1_var;
    unitgroup auto40B6209E_g;
    int auto40B6209E_u;
    unit auto40B6209E_var;
    unitgroup auto5736F2C5_g;
    int auto5736F2C5_u;
    unit auto5736F2C5_var;
    unitgroup auto705C5042_g;
    int auto705C5042_u;
    unit auto705C5042_var;
    unitgroup autoF22E130A_g;
    int autoF22E130A_u;
    unit autoF22E130A_var;
    unitgroup auto0A8F2F81_g;
    int auto0A8F2F81_u;
    unit auto0A8F2F81_var;
    unitgroup auto97542E5A_g;
    int auto97542E5A_u;
    unit auto97542E5A_var;
    unitgroup auto7BE96E51_g;
    int auto7BE96E51_u;
    unit auto7BE96E51_var;
    unitgroup auto76745785_g;
    int auto76745785_u;
    unit auto76745785_var;
    unitgroup auto4C6846D1_g;
    int auto4C6846D1_u;
    unit auto4C6846D1_var;
    unitgroup auto74779FD8_g;
    int auto74779FD8_u;
    unit auto74779FD8_var;
    unitgroup auto01B9D487_g;
    int auto01B9D487_u;
    unit auto01B9D487_var;
    unitgroup autoC5D098FC_g;
    int autoC5D098FC_u;
    unit autoC5D098FC_var;
    unitgroup autoAC738B42_g;
    int autoAC738B42_u;
    unit autoAC738B42_var;
    unitgroup auto20409D91_g;
    int auto20409D91_u;
    unit auto20409D91_var;
    unitgroup autoE3C70D06_g;
    int autoE3C70D06_u;
    unit autoE3C70D06_var;
    unitgroup auto7F8955F9_g;
    int auto7F8955F9_u;
    unit auto7F8955F9_var;

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetPropertyFixed(UnitFromId(1058659169), c_unitPropLifeMax, 500.0);
    UnitSetPropertyFixed(UnitFromId(1058659169), c_unitPropLife, 500.0);
    UnitSetState(UnitFromId(1058659169), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(1058659169), c_unitStateSelectable, false);
    UnitSetPropertyFixed(UnitFromId(2040148640), c_unitPropLifeMax, 500.0);
    UnitSetPropertyFixed(UnitFromId(2040148640), c_unitPropLife, 500.0);
    UnitSetState(UnitFromId(2040148640), c_unitStateHighlightable, false);
    UnitSetState(UnitFromId(2040148640), c_unitStateSelectable, false);
    UnitBehaviorAdd(UnitFromId(470), "SuppressCollision", UnitFromId(470), 1);
    autoD5C38DC9_g = UnitGroup("Beacon_Zerg", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoD5C38DC9_u = UnitGroupCount(autoD5C38DC9_g, c_unitCountAll);
    for (;; autoD5C38DC9_u -= 1) {
        autoD5C38DC9_var = UnitGroupUnitFromEnd(autoD5C38DC9_g, autoD5C38DC9_u);
        if (autoD5C38DC9_var == null) { break; }
        UnitSetState(autoD5C38DC9_var, c_unitStateSelectable, false);
        UnitSetState(autoD5C38DC9_var, c_unitStateHighlightable, false);
        UnitSetState(autoD5C38DC9_var, c_unitStateTargetable, false);
        libNtve_gf_MakeUnitInvulnerable(autoD5C38DC9_var, true);
        UnitSetState(autoD5C38DC9_var, c_unitStateTooltipable, false);
    }
    auto0DB5E175_g = UnitGroup("MoebiusLabDestructibleDoor", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0DB5E175_u = UnitGroupCount(auto0DB5E175_g, c_unitCountAll);
    for (;; auto0DB5E175_u -= 1) {
        auto0DB5E175_var = UnitGroupUnitFromEnd(auto0DB5E175_g, auto0DB5E175_u);
        if (auto0DB5E175_var == null) { break; }
        UnitSetState(auto0DB5E175_var, c_unitStateSelectable, false);
        UnitSetState(auto0DB5E175_var, c_unitStateTooltipable, false);
    }
    auto76B12C07_g = UnitGroup("SecretDocuments", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto76B12C07_u = UnitGroupCount(auto76B12C07_g, c_unitCountAll);
    for (;; auto76B12C07_u -= 1) {
        auto76B12C07_var = UnitGroupUnitFromEnd(auto76B12C07_g, auto76B12C07_u);
        if (auto76B12C07_var == null) { break; }
        UnitSetState(auto76B12C07_var, c_unitStateSelectable, false);
        UnitSetState(auto76B12C07_var, c_unitStateHighlightable, false);
        UnitSetState(auto76B12C07_var, c_unitStateTargetable, false);
        libNtve_gf_MakeUnitInvulnerable(auto76B12C07_var, true);
    }
    auto6F04FD4F_g = UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto6F04FD4F_u = UnitGroupCount(auto6F04FD4F_g, c_unitCountAll);
    for (;; auto6F04FD4F_u -= 1) {
        auto6F04FD4F_var = UnitGroupUnitFromEnd(auto6F04FD4F_g, auto6F04FD4F_u);
        if (auto6F04FD4F_var == null) { break; }
        UnitSetState(auto6F04FD4F_var, c_unitStateSelectable, false);
    }
    auto4F93A40B_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto4F93A40B_u = UnitGroupCount(auto4F93A40B_g, c_unitCountAll);
    for (;; auto4F93A40B_u -= 1) {
        auto4F93A40B_var = UnitGroupUnitFromEnd(auto4F93A40B_g, auto4F93A40B_u);
        if (auto4F93A40B_var == null) { break; }
        UnitSetState(auto4F93A40B_var, c_unitStateSelectable, false);
    }
    auto22EC859C_g = UnitGroup(null, gv_p05_HUMANSNEUTRAL, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto22EC859C_u = UnitGroupCount(auto22EC859C_g, c_unitCountAll);
    for (;; auto22EC859C_u -= 1) {
        auto22EC859C_var = UnitGroupUnitFromEnd(auto22EC859C_g, auto22EC859C_u);
        if (auto22EC859C_var == null) { break; }
        UnitSetState(auto22EC859C_var, c_unitStateSelectable, false);
    }
    autoB1EF07F9_g = UnitGroup(null, gv_p15_HUMANS_HOSTILE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoB1EF07F9_u = UnitGroupCount(autoB1EF07F9_g, c_unitCountAll);
    for (;; autoB1EF07F9_u -= 1) {
        autoB1EF07F9_var = UnitGroupUnitFromEnd(autoB1EF07F9_g, autoB1EF07F9_u);
        if (autoB1EF07F9_var == null) { break; }
        UnitSetState(autoB1EF07F9_var, c_unitStateSelectable, false);
    }
    auto98527BFF_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(6), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto98527BFF_u = UnitGroupCount(auto98527BFF_g, c_unitCountAll);
    for (;; auto98527BFF_u -= 1) {
        auto98527BFF_var = UnitGroupUnitFromEnd(auto98527BFF_g, auto98527BFF_u);
        if (auto98527BFF_var == null) { break; }
        UnitGroupAdd(gv_startingAreaCivilianGroup, auto98527BFF_var);
    }
    autoB31D8A41_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(6), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoB31D8A41_u = UnitGroupCount(autoB31D8A41_g, c_unitCountAll);
    for (;; autoB31D8A41_u -= 1) {
        autoB31D8A41_var = UnitGroupUnitFromEnd(autoB31D8A41_g, autoB31D8A41_u);
        if (autoB31D8A41_var == null) { break; }
        UnitGroupAdd(gv_startingAreaCivilianGroup, autoB31D8A41_var);
    }
    auto14B1E85B_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto14B1E85B_u = UnitGroupCount(auto14B1E85B_g, c_unitCountAll);
    for (;; auto14B1E85B_u -= 1) {
        auto14B1E85B_var = UnitGroupUnitFromEnd(auto14B1E85B_g, auto14B1E85B_u);
        if (auto14B1E85B_var == null) { break; }
        UnitSetTeamColorIndex(auto14B1E85B_var, PlayerGetColorIndex(RandomInt(1, 15), false));
        UnitSetState(auto14B1E85B_var, c_unitStateFidget, false);
        ActorSend(libNtve_gf_MainActorofUnit(auto14B1E85B_var), "AnimGroupApply Scared,B Scared,B {} Instant");
        UnitBehaviorAdd(auto14B1E85B_var, "HumanResource", auto14B1E85B_var, 1);
        UnitSetPropertyFixed(auto14B1E85B_var, c_unitPropBaseMovementSpeed, 0.4);
    }
    auto1CDEF43F_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto1CDEF43F_u = UnitGroupCount(auto1CDEF43F_g, c_unitCountAll);
    for (;; auto1CDEF43F_u -= 1) {
        auto1CDEF43F_var = UnitGroupUnitFromEnd(auto1CDEF43F_g, auto1CDEF43F_u);
        if (auto1CDEF43F_var == null) { break; }
        UnitSetTeamColorIndex(auto1CDEF43F_var, PlayerGetColorIndex(RandomInt(1, 15), true));
        UnitSetState(auto1CDEF43F_var, c_unitStateFidget, false);
        ActorSend(libNtve_gf_MainActorofUnit(auto1CDEF43F_var), "AnimGroupApply Scared,B Scared,B {} Instant");
        UnitBehaviorAdd(auto1CDEF43F_var, "HumanResource", auto1CDEF43F_var, 1);
        UnitSetPropertyFixed(auto1CDEF43F_var, c_unitPropBaseMovementSpeed, 0.4);
    }
    auto4BA81BC1_g = UnitGroup("TR17", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto4BA81BC1_u = UnitGroupCount(auto4BA81BC1_g, c_unitCountAll);
    for (;; auto4BA81BC1_u -= 1) {
        auto4BA81BC1_var = UnitGroupUnitFromEnd(auto4BA81BC1_g, auto4BA81BC1_u);
        if (auto4BA81BC1_var == null) { break; }
        UnitIssueOrder(auto4BA81BC1_var, Order(AbilityCommand("TR17Siege", 0)), c_orderQueueReplace);
    }
    auto40B6209E_g = UnitGroup("InfantryMortar", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto40B6209E_u = UnitGroupCount(auto40B6209E_g, c_unitCountAll);
    for (;; auto40B6209E_u -= 1) {
        auto40B6209E_var = UnitGroupUnitFromEnd(auto40B6209E_g, auto40B6209E_u);
        if (auto40B6209E_var == null) { break; }
        UnitIssueOrder(auto40B6209E_var, Order(AbilityCommand("InfantryMortarModeSiege", 0)), c_orderQueueReplace);
    }
    auto5736F2C5_g = UnitGroup("Overlord", c_playerAny, RegionFromId(2), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto5736F2C5_u = UnitGroupCount(auto5736F2C5_g, c_unitCountAll);
    for (;; auto5736F2C5_u -= 1) {
        auto5736F2C5_var = UnitGroupUnitFromEnd(auto5736F2C5_g, auto5736F2C5_u);
        if (auto5736F2C5_var == null) { break; }
        UnitBehaviorAdd(auto5736F2C5_var, "CritterWander", auto5736F2C5_var, 1);
    }
    UnitIssueOrder(UnitFromId(535052125), Order(AbilityCommand("APCOpenDoor", 0)), c_orderQueueReplace);
    UnitSetState(UnitFromId(1176249964), c_unitStateStunned, true);
    UnitSetState(UnitFromId(1176249964), c_unitStateFidget, false);
    UnitCargoCreate(UnitFromId(1312463800), "InfantryRifle", 1);
    auto705C5042_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(14), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto705C5042_u = UnitGroupCount(auto705C5042_g, c_unitCountAll);
    for (;; auto705C5042_u -= 1) {
        auto705C5042_var = UnitGroupUnitFromEnd(auto705C5042_g, auto705C5042_u);
        if (auto705C5042_var == null) { break; }
        UnitGroupAdd(gv_startingAreaLeftGarrison, auto705C5042_var);
    }
    autoF22E130A_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(21), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoF22E130A_u = UnitGroupCount(autoF22E130A_g, c_unitCountAll);
    for (;; autoF22E130A_u -= 1) {
        autoF22E130A_var = UnitGroupUnitFromEnd(autoF22E130A_g, autoF22E130A_u);
        if (autoF22E130A_var == null) { break; }
        UnitGroupAdd(gv_startingAreaCloseRightGarrison, autoF22E130A_var);
    }
    auto0A8F2F81_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(23), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto0A8F2F81_u = UnitGroupCount(auto0A8F2F81_g, c_unitCountAll);
    for (;; auto0A8F2F81_u -= 1) {
        auto0A8F2F81_var = UnitGroupUnitFromEnd(auto0A8F2F81_g, auto0A8F2F81_u);
        if (auto0A8F2F81_var == null) { break; }
        UnitGroupAdd(gv_startingAreaMediumRightGarrison, auto0A8F2F81_var);
    }
    auto97542E5A_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(25), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto97542E5A_u = UnitGroupCount(auto97542E5A_g, c_unitCountAll);
    for (;; auto97542E5A_u -= 1) {
        auto97542E5A_var = UnitGroupUnitFromEnd(auto97542E5A_g, auto97542E5A_u);
        if (auto97542E5A_var == null) { break; }
        UnitGroupAdd(gv_startingAreaFarRightGarrison, auto97542E5A_var);
    }
    auto7BE96E51_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7BE96E51_u = UnitGroupCount(auto7BE96E51_g, c_unitCountAll);
    for (;; auto7BE96E51_u -= 1) {
        auto7BE96E51_var = UnitGroupUnitFromEnd(auto7BE96E51_g, auto7BE96E51_u);
        if (auto7BE96E51_var == null) { break; }
        UnitGroupAdd(gv_startingAreaLeftCivilians, auto7BE96E51_var);
    }
    auto76745785_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto76745785_u = UnitGroupCount(auto76745785_g, c_unitCountAll);
    for (;; auto76745785_u -= 1) {
        auto76745785_var = UnitGroupUnitFromEnd(auto76745785_g, auto76745785_u);
        if (auto76745785_var == null) { break; }
        UnitGroupAdd(gv_startingAreaLeftCivilians, auto76745785_var);
    }
    auto4C6846D1_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(22), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto4C6846D1_u = UnitGroupCount(auto4C6846D1_g, c_unitCountAll);
    for (;; auto4C6846D1_u -= 1) {
        auto4C6846D1_var = UnitGroupUnitFromEnd(auto4C6846D1_g, auto4C6846D1_u);
        if (auto4C6846D1_var == null) { break; }
        UnitGroupAdd(gv_startingAreaCloseRightCivilians, auto4C6846D1_var);
    }
    auto74779FD8_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(22), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto74779FD8_u = UnitGroupCount(auto74779FD8_g, c_unitCountAll);
    for (;; auto74779FD8_u -= 1) {
        auto74779FD8_var = UnitGroupUnitFromEnd(auto74779FD8_g, auto74779FD8_u);
        if (auto74779FD8_var == null) { break; }
        UnitGroupAdd(gv_startingAreaCloseRightCivilians, auto74779FD8_var);
    }
    auto01B9D487_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(24), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto01B9D487_u = UnitGroupCount(auto01B9D487_g, c_unitCountAll);
    for (;; auto01B9D487_u -= 1) {
        auto01B9D487_var = UnitGroupUnitFromEnd(auto01B9D487_g, auto01B9D487_u);
        if (auto01B9D487_var == null) { break; }
        UnitGroupAdd(gv_startingAreaMediumRightCivilians, auto01B9D487_var);
    }
    autoC5D098FC_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(24), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoC5D098FC_u = UnitGroupCount(autoC5D098FC_g, c_unitCountAll);
    for (;; autoC5D098FC_u -= 1) {
        autoC5D098FC_var = UnitGroupUnitFromEnd(autoC5D098FC_g, autoC5D098FC_u);
        if (autoC5D098FC_var == null) { break; }
        UnitGroupAdd(gv_startingAreaMediumRightCivilians, autoC5D098FC_var);
    }
    autoAC738B42_g = UnitGroup("UPLCivilianMale", c_playerAny, RegionFromId(26), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoAC738B42_u = UnitGroupCount(autoAC738B42_g, c_unitCountAll);
    for (;; autoAC738B42_u -= 1) {
        autoAC738B42_var = UnitGroupUnitFromEnd(autoAC738B42_g, autoAC738B42_u);
        if (autoAC738B42_var == null) { break; }
        UnitGroupAdd(gv_startingAreaFarRightCivilians, autoAC738B42_var);
    }
    auto20409D91_g = UnitGroup("UPLCivilianFemale", c_playerAny, RegionFromId(26), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto20409D91_u = UnitGroupCount(auto20409D91_g, c_unitCountAll);
    for (;; auto20409D91_u -= 1) {
        auto20409D91_var = UnitGroupUnitFromEnd(auto20409D91_g, auto20409D91_u);
        if (auto20409D91_var == null) { break; }
        UnitGroupAdd(gv_startingAreaFarRightCivilians, auto20409D91_var);
    }
    autoE3C70D06_g = UnitGroup(null, 13, RegionFromId(70), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    autoE3C70D06_u = UnitGroupCount(autoE3C70D06_g, c_unitCountAll);
    for (;; autoE3C70D06_u -= 1) {
        autoE3C70D06_var = UnitGroupUnitFromEnd(autoE3C70D06_g, autoE3C70D06_u);
        if (autoE3C70D06_var == null) { break; }
        libNtve_gf_ShowHideUnit(autoE3C70D06_var, false);
    }
    auto7F8955F9_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(37), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto7F8955F9_u = UnitGroupCount(auto7F8955F9_g, c_unitCountAll);
    for (;; auto7F8955F9_u -= 1) {
        auto7F8955F9_var = UnitGroupUnitFromEnd(auto7F8955F9_g, auto7F8955F9_u);
        if (auto7F8955F9_var == null) { break; }
        UnitGroupAdd(gv_colonyShipArea2CaptainGroup, auto7F8955F9_var);
        UnitIssueOrder(auto7F8955F9_var, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(220383500), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1643841535), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init04AbilitiesUnits_Init () {
    gt_Init04AbilitiesUnits = TriggerCreate("gt_Init04AbilitiesUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Init 05 Music/Environment
//--------------------------------------------------------------------------------------------------
bool gt_Init05MusicEnvironment_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, false);
    GameSetLighting("SnowRefinery", 0.0);
    FogSetStartHeightOverTime(-8.0, 0.0);
    GameTimeOfDaySet("12:00:00");
    GameTimeOfDayPause(true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Init05MusicEnvironment_Init () {
    gt_Init05MusicEnvironment = TriggerCreate("gt_Init05MusicEnvironment_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: SetMortarColor
//--------------------------------------------------------------------------------------------------
bool gt_SetMortarColor_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto9BBA64B2_g;
    int auto9BBA64B2_u;
    unit auto9BBA64B2_var;
    unitgroup autoACDFE0CD_g;
    int autoACDFE0CD_u;
    unit autoACDFE0CD_var;
    unitgroup auto2109F818_g;
    int auto2109F818_u;
    unit auto2109F818_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto9BBA64B2_g = UnitGroup("InfantryMortar", gv_p02_HUMANSNEUTRAL, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9BBA64B2_u = UnitGroupCount(auto9BBA64B2_g, c_unitCountAll);
    for (;; auto9BBA64B2_u -= 1) {
        auto9BBA64B2_var = UnitGroupUnitFromEnd(auto9BBA64B2_g, auto9BBA64B2_u);
        if (auto9BBA64B2_var == null) { break; }
        UnitSetTeamColorIndex(auto9BBA64B2_var, 0);
    }
    autoACDFE0CD_g = UnitGroup("InfantryMortar", gv_p03_HUMANSENEMY, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoACDFE0CD_u = UnitGroupCount(autoACDFE0CD_g, c_unitCountAll);
    for (;; autoACDFE0CD_u -= 1) {
        autoACDFE0CD_var = UnitGroupUnitFromEnd(autoACDFE0CD_g, autoACDFE0CD_u);
        if (autoACDFE0CD_var == null) { break; }
        UnitSetTeamColorIndex(autoACDFE0CD_var, 0);
    }
    auto2109F818_g = UnitGroup("InfantryMortar", gv_p15_HUMANS_HOSTILE, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2109F818_u = UnitGroupCount(auto2109F818_g, c_unitCountAll);
    for (;; auto2109F818_u -= 1) {
        auto2109F818_var = UnitGroupUnitFromEnd(auto2109F818_g, auto2109F818_u);
        if (auto2109F818_var == null) { break; }
        UnitSetTeamColorIndex(auto2109F818_var, 0);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SetMortarColor_Init () {
    gt_SetMortarColor = TriggerCreate("gt_SetMortarColor_Func");
    TriggerAddEventTimePeriodic(gt_SetMortarColor, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InfoChip1
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_stat_LoreFound += 1;
    UnitKill(UnitFromId(1144171253));
    lib1926661B_gf_DisplayLoreWindow("M09-Slohr");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip1_Init () {
    gt_InfoChip1 = TriggerCreate("gt_InfoChip1_Func");
    TriggerAddEventUnitRegion(gt_InfoChip1, null, RegionFromId(73), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InfoChip2
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_stat_LoreFound += 1;
    UnitKill(UnitFromId(1050607964));
    lib1926661B_gf_DisplayLoreWindow("M09-TheBrood");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip2_Init () {
    gt_InfoChip2 = TriggerCreate("gt_InfoChip2_Func");
    TriggerAddEventUnitRegion(gt_InfoChip2, null, RegionFromId(74), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InfoChip3
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_stat_LoreFound += 1;
    UnitKill(UnitFromId(2082644616));
    lib1926661B_gf_DisplayLoreWindow("M09-Ships");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip3_Init () {
    gt_InfoChip3 = TriggerCreate("gt_InfoChip3_Func");
    TriggerAddEventUnitRegion(gt_InfoChip3, null, RegionFromId(75), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: InfoChip4
//--------------------------------------------------------------------------------------------------
bool gt_InfoChip4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_stat_LoreFound += 1;
    UnitKill(UnitFromId(389682502));
    lib1926661B_gf_DisplayLoreWindow("M09-Roaches");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_InfoChip4_Init () {
    gt_InfoChip4 = TriggerCreate("gt_InfoChip4_Func");
    TriggerAddEventUnitRegion(gt_InfoChip4, null, RegionFromId(76), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Harvest Biomass
//--------------------------------------------------------------------------------------------------
bool gt_TipHarvestBiomass_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/F72002BB"), libNtve_ge_TipType_MissionStrategy), StringExternal("Param/Value/D162AB5A"), StringExternal("Param/Value/16151CB9"), "Assets\\Textures\\biomassrecovery_coop.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipHarvestBiomass_Init () {
    gt_TipHarvestBiomass = TriggerCreate("gt_TipHarvestBiomass_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Sleepers Harvested
//--------------------------------------------------------------------------------------------------
bool gt_TipSleepersHarvested_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/9B513799"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/FB354E98"), StringExternal("Param/Value/542D3D1D"), "Assets\\Textures\\btn-upgrade-zerg-abathur-biomass.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipSleepersHarvested_Init () {
    gt_TipSleepersHarvested = TriggerCreate("gt_TipSleepersHarvested_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tip - Nest Attacked
//--------------------------------------------------------------------------------------------------
bool gt_TipNestAttacked_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/F3ECE0ED"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/D29433D0"), StringExternal("Param/Value/9E0CAFCC"), "Assets\\Textures\\btn-building-zerg-hatchery.dds");
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_TipNestAttacked_Init () {
    gt_TipNestAttacked = TriggerCreate("gt_TipNestAttacked_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat_HumansHarvested
//--------------------------------------------------------------------------------------------------
bool gt_Stat_HumansHarvested_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_HumansHarvested += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stat_HumansHarvested_Init () {
    gt_Stat_HumansHarvested = TriggerCreate("gt_Stat_HumansHarvested_Func");
    TriggerAddEventPlayerPropChange(gt_Stat_HumansHarvested, gv_pLAYER_01_USER, c_playerPropTerrazineCollected);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat_NoiseMakersDestroyed
//--------------------------------------------------------------------------------------------------
bool gt_Stat_NoiseMakersDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!(((EventUnit() == UnitFromId(1058659169)) || (EventUnit() == UnitFromId(2040148640))))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_NoiseDestroyed += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stat_NoiseMakersDestroyed_Init () {
    gt_Stat_NoiseMakersDestroyed = TriggerCreate("gt_Stat_NoiseMakersDestroyed_Func");
    TriggerAddEventUnitDied(gt_Stat_NoiseMakersDestroyed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Stat_Defilers Lost
//--------------------------------------------------------------------------------------------------
bool gt_Stat_DefilersLost_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!(((UnitGetType(EventUnit()) == "DefilerMP") || (UnitGetType(EventUnit()) == "DefilerMPBurrowed")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_stat_DefilersLost += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Stat_DefilersLost_Init () {
    gt_Stat_DefilersLost = TriggerCreate("gt_Stat_DefilersLost_Func");
    TriggerAddEventUnitDied(gt_Stat_DefilersLost, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Colony Ship 1 Escaped
//--------------------------------------------------------------------------------------------------
bool gt_DefeatColonyShip1Escaped_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    ObjectiveSetState(gv_colonyShipArea1Objective, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/826A1DFD"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatColonyShip1Escaped_Init () {
    gt_DefeatColonyShip1Escaped = TriggerCreate("gt_DefeatColonyShip1Escaped_Func");
    TriggerAddEventTimer(gt_DefeatColonyShip1Escaped, gv_colonyShipArea1Timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Colony Ship 2 Escaped
//--------------------------------------------------------------------------------------------------
bool gt_DefeatColonyShip2Escaped_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    ObjectiveSetState(gv_colonyShipArea2Objective, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/53CD2DBA"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatColonyShip2Escaped_Init () {
    gt_DefeatColonyShip2Escaped = TriggerCreate("gt_DefeatColonyShip2Escaped_Func");
    TriggerAddEventTimer(gt_DefeatColonyShip2Escaped, gv_colonyShipArea2Timer);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat All Units Killed
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAllUnitsKilled_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_inCinematic == false))) {
            return false;
        }

        if (!((UnitCount(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    ObjectiveSetState(gv_colonyShipArea1Objective, c_objectiveStateFailed);
    ObjectiveSetState(gv_colonyShipArea2Objective, c_objectiveStateFailed);
    ObjectiveSetState(gv_reachCityObjective, c_objectiveStateFailed);
    ObjectiveSetState(gv_startingAreaHarvestBiomassObjective, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/B5E9FECE"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAllUnitsKilled_Init () {
    gt_DefeatAllUnitsKilled = TriggerCreate("gt_DefeatAllUnitsKilled_Func");
    TriggerEnable(gt_DefeatAllUnitsKilled, false);
    TriggerAddEventUnitDied(gt_DefeatAllUnitsKilled, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat All Units Killed On Ships
//--------------------------------------------------------------------------------------------------
bool gt_DefeatAllUnitsKilledOnShips_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!(((gv_colonyShipArea1Active == true) || (gv_colonyShipArea2Active == true)))) {
            return false;
        }

        if (!((UnitCount(null, c_playerAny, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) <= 0))) {
            return false;
        }

        if (!((UnitCount(null, c_playerAny, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) <= 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_gameOver = true;
    TriggerQueuePause(true);
    TriggerQueueClear(c_triggerQueueRemove);
    ObjectiveSetState(gv_colonyShipArea1Objective, c_objectiveStateFailed);
    ObjectiveSetState(gv_colonyShipArea2Objective, c_objectiveStateFailed);
    ObjectiveSetState(gv_reachCityObjective, c_objectiveStateFailed);
    ObjectiveSetState(gv_startingAreaHarvestBiomassObjective, c_objectiveStateFailed);
    Wait(2.0, c_timeReal);
    libVCMI_gf_DisplayCampaignMessage(PlayerGroupAll(), libVCMI_ge_CampaignMessageType_MissionFailed, StringExternal("Param/Value/129A462C"), libVCMI_ge_CampaignMessageFormatNotFormat_FormatMessage);
    Wait(libVCMI_gv_campaignObjectiveDelay, c_timeReal);
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatAllUnitsKilledOnShips_Init () {
    gt_DefeatAllUnitsKilledOnShips = TriggerCreate("gt_DefeatAllUnitsKilledOnShips_Func");
    TriggerEnable(gt_DefeatAllUnitsKilledOnShips, false);
    TriggerAddEventUnitDied(gt_DefeatAllUnitsKilledOnShips, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Siege Completed
//--------------------------------------------------------------------------------------------------
bool gt_VictorySiegeCompleted_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_gameOver == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_EarnAudiologLore("M09-EMS");
    TriggerExecute(gt_VictorySequence, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictorySiegeCompleted_Init () {
    gt_VictorySiegeCompleted = TriggerCreate("gt_VictorySiegeCompleted_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Sequence
//--------------------------------------------------------------------------------------------------
bool gt_VictorySequence_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_gameOver = true;
    Wait(2.0, c_timeReal);
    lib1926661B_gf_RunMissionVictorySequence(gt_VictoryQ);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictorySequence_Init () {
    gt_VictorySequence = TriggerCreate("gt_VictorySequence_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory
//--------------------------------------------------------------------------------------------------
bool gt_Victory_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    if ((PlayerGetPropertyInt(gv_pLAYER_01_USER, c_playerPropTerrazineCollected) == 0)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M09-Feat", gv_pLAYER_01_USER);
    }
    lib1926661B_gf_AddVictoryPanelStatistic("UnitsProduced");
    lib1926661B_gf_AddVictoryPanelStatistic("UnitsKilledCount");
    lib1926661B_gf_AddVictoryPanelStatistic("UnitsLostCount");
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Humans Harvested", IntToString(gv_stat_HumansHarvested));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Noise Makers Destroyed", (IntToString(gv_stat_NoiseDestroyed) + "/2"));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Biomass Collected", IntToString(PlayerGetPropertyInt(gv_pLAYER_01_USER, c_playerPropTerrazineCollected)));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Defilers Lost", IntToString(gv_stat_DefilersLost));
    lib1926661B_gf_AddVictoryPanelCustomStatistic("Lore Collected", (IntToString(gv_stat_LoreFound) + " / 4"));
    lib1926661B_gf_EndCampaignMission(gv_pLAYER_01_USER, c_gameOverVictory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Victory_Init () {
    gt_Victory = TriggerCreate("gt_Victory_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat
//--------------------------------------------------------------------------------------------------
bool gt_Defeat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerIsEnabled(TriggerGetCurrent()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    lib1926661B_gf_EndCampaignMission(gv_pLAYER_01_USER, c_gameOverDefeat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_Defeat_Init () {
    gt_Defeat = TriggerCreate("gt_Defeat_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Cheat
//--------------------------------------------------------------------------------------------------
bool gt_VictoryCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_VictoryCheat, false);
    TriggerEnable(gt_DefeatCheat, false);
    TriggerEnable(gt_Defeat, false);
    gv_gameOver = true;
    lib1926661B_gf_RunMissionVictorySequence(gt_Victory);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryCheat_Init () {
    gt_VictoryCheat = TriggerCreate("gt_VictoryCheat_Func");
    TriggerAddEventPlayerLeft(gt_VictoryCheat, gv_pLAYER_01_USER, c_gameResultVictory);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Defeat Cheat
//--------------------------------------------------------------------------------------------------
bool gt_DefeatCheat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(gt_VictoryCheat, false);
    TriggerEnable(gt_DefeatCheat, false);
    TriggerEnable(gt_Victory, false);
    gv_gameOver = true;
    TriggerExecute(gt_Defeat, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_DefeatCheat_Init () {
    gt_DefeatCheat = TriggerCreate("gt_DefeatCheat_Func");
    TriggerAddEventPlayerLeft(gt_DefeatCheat, gv_pLAYER_01_USER, c_gameResultDefeat);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area East Gate Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaEastGateTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!(((UnitGetType(EventUnit()) == "HunterKiller") || (UnitGetType(EventUnit()) == "Hydralisk")))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((libNtve_gf_PlayerInCinematicMode(1) == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryMortarPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL1", -1), StringExternal("Param/Value/181FE2BF"), StringExternal("Param/Value/F95BF6D2"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaEastGateTripwire_Init () {
    gt_StartingAreaEastGateTripwire = TriggerCreate("gt_StartingAreaEastGateTripwire_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaEastGateTripwire, null, RegionFromId(7), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Left Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaLeftTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL2", -1), StringExternal("Param/Value/E29116A1"), StringExternal("Param/Value/DF11B7BF"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaLeftTripwire_Init () {
    gt_StartingAreaLeftTripwire = TriggerCreate("gt_StartingAreaLeftTripwire_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaLeftTripwire, null, RegionFromId(8), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Close Right Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCloseRightTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL3", -1), StringExternal("Param/Value/1C8FAE62"), StringExternal("Param/Value/4DC4A7C9"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCloseRightTripwire_Init () {
    gt_StartingAreaCloseRightTripwire = TriggerCreate("gt_StartingAreaCloseRightTripwire_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCloseRightTripwire, null, RegionFromId(9), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Close Middle Right Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCloseMiddleRightTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL4", -1), StringExternal("Param/Value/5550CDF4"), StringExternal("Param/Value/9D3A5C36"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCloseMiddleRightTripwire_Init () {
    gt_StartingAreaCloseMiddleRightTripwire = TriggerCreate("gt_StartingAreaCloseMiddleRightTripwire_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCloseMiddleRightTripwire, null, RegionFromId(10), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Close Far Right Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCloseFarRightTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRocketPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL5", -1), StringExternal("Param/Value/DB69D165"), StringExternal("Param/Value/80AFB7C8"), 0.7, c_transmissionDurationSub, true, c_maxPlayers, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryOfficerPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL6", -1), StringExternal("Param/Value/2C1254EF"), StringExternal("Param/Value/14B66F78"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCloseFarRightTripwire_Init () {
    gt_StartingAreaCloseFarRightTripwire = TriggerCreate("gt_StartingAreaCloseFarRightTripwire_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCloseFarRightTripwire, null, RegionFromId(11), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 1 Area Slohr Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip1AreaSlohrTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea1Active == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Medium, StringExternal("Param/Value/7FBBFB44"), PointFromId(707158148));
    gv_colonyShipArea1Reticle1 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTag1 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Medium, StringExternal("Param/Value/D86F60E4"), PointFromId(1815998093));
    gv_colonyShipArea1Reticle2 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTag2 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Medium, StringExternal("Param/Value/5CD665EB"), PointFromId(757792357));
    gv_colonyShipArea1Reticle3 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTag3 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Medium, StringExternal("Param/Value/44DB558A"), PointFromId(2116573734));
    gv_colonyShipArea1Reticle4 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTag4 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Medium, StringExternal("Param/Value/781A6867"), PointFromId(1803496672));
    gv_colonyShipArea1Reticle5 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTag5 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Medium, StringExternal("Param/Value/2BC1AEEF"), PointFromId(2006226496));
    gv_colonyShipArea1Reticle6 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTag6 = TextTagLastCreated();
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9Slohr8", -1), StringExternal("Param/Value/04545B1E"), StringExternal("Param/Value/AE7F2545"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9Slohr8A", -1), StringExternal("Param/Value/A480124B"), StringExternal("Param/Value/DFFD0D47"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    libNtve_gf_KillModel(gv_colonyShipArea1Reticle1);
    libNtve_gf_KillModel(gv_colonyShipArea1Reticle2);
    libNtve_gf_KillModel(gv_colonyShipArea1Reticle3);
    libNtve_gf_KillModel(gv_colonyShipArea1Reticle4);
    libNtve_gf_KillModel(gv_colonyShipArea1Reticle5);
    libNtve_gf_KillModel(gv_colonyShipArea1Reticle6);
    TextTagDestroy(gv_colonyShipArea1TextTag1);
    TextTagDestroy(gv_colonyShipArea1TextTag2);
    TextTagDestroy(gv_colonyShipArea1TextTag3);
    TextTagDestroy(gv_colonyShipArea1TextTag4);
    TextTagDestroy(gv_colonyShipArea1TextTag5);
    TextTagDestroy(gv_colonyShipArea1TextTag6);
    RegionPlayableMapSet(RegionFromId(29));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    gv_colonyShipDoor2SlohrFinished = true;
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip1AreaSlohrTripwire_Init () {
    gt_ColonyShip1AreaSlohrTripwire = TriggerCreate("gt_ColonyShip1AreaSlohrTripwire_Func");
    TriggerAddEventUnitRegion(gt_ColonyShip1AreaSlohrTripwire, null, RegionFromId(33), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 1 Area Behemoths Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip1AreaBehemothsTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(476)) == true))) {
            return false;
        }

        if (!((gv_colonyShipArea1Active == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_p03_HUMANSENEMY))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRocketPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9UPL7", -1), StringExternal("Param/Value/FB1F84B9"), StringExternal("Param/Value/E65B19B7"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip1AreaBehemothsTripwire_Init () {
    gt_ColonyShip1AreaBehemothsTripwire = TriggerCreate("gt_ColonyShip1AreaBehemothsTripwire_Func");
    TriggerAddEventUnitRegion(gt_ColonyShip1AreaBehemothsTripwire, null, RegionFromId(32), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 1 Area CARR Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip1AreaCARRTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea1Active == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("CARRPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9UPL8", -1), StringExternal("Param/Value/08B7E1BA"), StringExternal("Param/Value/9F1C9252"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    UnitIssueOrder(UnitFromId(716494920), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1154782971))), c_orderQueueReplace);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip1AreaCARRTripwire_Init () {
    gt_ColonyShip1AreaCARRTripwire = TriggerCreate("gt_ColonyShip1AreaCARRTripwire_Func");
    TriggerAddEventUnitRegion(gt_ColonyShip1AreaCARRTripwire, null, RegionFromId(31), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 2 Area Announcement Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip2AreaAnnouncementTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea1Active == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9ColonyShip2Announcement2", -1), StringExternal("Param/Value/410EDF3F"), StringExternal("Param/Value/B081B88E"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip2AreaAnnouncementTripwire_Init () {
    gt_ColonyShip2AreaAnnouncementTripwire = TriggerCreate("gt_ColonyShip2AreaAnnouncementTripwire_Func");
    TriggerAddEventUnitRegion(gt_ColonyShip2AreaAnnouncementTripwire, null, RegionFromId(35), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 2 Area Captain Dead Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip2AreaCaptainDeadTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDA1351B8_g;
    int autoDA1351B8_u;
    unit autoDA1351B8_var;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_colonyShipArea2CaptainGroup) == false))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRocketPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9UPL9", -1), StringExternal("Param/Value/DCA48234"), StringExternal("Param/Value/53DCE35B"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    autoDA1351B8_g = gv_colonyShipArea2CaptainGroup;
    autoDA1351B8_u = UnitGroupCount(autoDA1351B8_g, c_unitCountAll);
    for (;; autoDA1351B8_u -= 1) {
        autoDA1351B8_var = UnitGroupUnitFromEnd(autoDA1351B8_g, autoDA1351B8_u);
        if (autoDA1351B8_var == null) { break; }
        UnitIssueOrder(autoDA1351B8_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(36))), c_orderQueueReplace);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip2AreaCaptainDeadTripwire_Init () {
    gt_ColonyShip2AreaCaptainDeadTripwire = TriggerCreate("gt_ColonyShip2AreaCaptainDeadTripwire_Func");
    TriggerAddEventUnitDied(gt_ColonyShip2AreaCaptainDeadTripwire, UnitRefFromUnit(UnitFromId(542465300)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 2 Area Security Arrives Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip2AreaSecurityArrivesTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_p03_HUMANSENEMY))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL12", -1), StringExternal("Param/Value/009FBB03"), StringExternal("Param/Value/BB695CB5"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9UPL13", -1), StringExternal("Param/Value/AC0E5298"), StringExternal("Param/Value/B8F0B456"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip2AreaSecurityArrivesTripwire_Init () {
    gt_ColonyShip2AreaSecurityArrivesTripwire = TriggerCreate("gt_ColonyShip2AreaSecurityArrivesTripwire_Func");
    TriggerAddEventUnitRegion(gt_ColonyShip2AreaSecurityArrivesTripwire, null, RegionFromId(39), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 2 Area Is That All You Got Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip2AreaIsThatAllYouGotTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitInRegion(EventUnit(), RegionFromId(43)) == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL10", -1), StringExternal("Param/Value/4C9909EA"), StringExternal("Param/Value/EB8A609F"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip2AreaIsThatAllYouGotTripwire_Init () {
    gt_ColonyShip2AreaIsThatAllYouGotTripwire = TriggerCreate("gt_ColonyShip2AreaIsThatAllYouGotTripwire_Func");
    TriggerAddEventUnitDied(gt_ColonyShip2AreaIsThatAllYouGotTripwire, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship 2 Area Screaming Soldier Tripwire
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShip2AreaScreamingSoldierTripwire_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlayForPlayer(SoundLink("M9UPL11", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShip2AreaScreamingSoldierTripwire_Init () {
    gt_ColonyShip2AreaScreamingSoldierTripwire = TriggerCreate("gt_ColonyShip2AreaScreamingSoldierTripwire_Func");
    TriggerAddEventUnitDied(gt_ColonyShip2AreaScreamingSoldierTripwire, UnitRefFromUnit(UnitFromId(1788075720)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Tripwire 1
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaTripwire1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryMortarPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL17", -1), StringExternal("Param/Value/206E8F3C"), StringExternal("Param/Value/3886FD09"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaTripwire1_Init () {
    gt_SiegeAreaTripwire1 = TriggerCreate("gt_SiegeAreaTripwire1_Func");
    TriggerAddEventUnitRegion(gt_SiegeAreaTripwire1, null, RegionFromId(47), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Tripwire 2
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaTripwire2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Mutalisk"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRocketPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL18", -1), StringExternal("Param/Value/0CC3B4E0"), StringExternal("Param/Value/C845F8BC"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaTripwire2_Init () {
    gt_SiegeAreaTripwire2 = TriggerCreate("gt_SiegeAreaTripwire2_Func");
    TriggerAddEventUnitRegion(gt_SiegeAreaTripwire2, null, RegionFromId(48), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Tripwire 3
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaTripwire3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_transmissionDecom = true;
    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL19", -1), StringExternal("Param/Value/97291322"), StringExternal("Param/Value/AC0620E7"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaTripwire3_Init () {
    gt_SiegeAreaTripwire3 = TriggerCreate("gt_SiegeAreaTripwire3_Func");
    TriggerAddEventUnitRegion(gt_SiegeAreaTripwire3, null, RegionFromId(49), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Tripwire 4
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaTripwire4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRocketPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL20", -1), StringExternal("Param/Value/9D897620"), StringExternal("Param/Value/0194678C"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaTripwire4_Init () {
    gt_SiegeAreaTripwire4 = TriggerCreate("gt_SiegeAreaTripwire4_Func");
    TriggerAddEventUnitRegion(gt_SiegeAreaTripwire4, null, RegionFromId(50), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Tripwire 5
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaTripwire5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_transmissionDecom == false))) {
            return false;
        }

        if (!((UnitGetType(EventUnit()) == "Overlord"))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerQueueEnter();
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL21", -1), StringExternal("Param/Value/61EA47E4"), StringExternal("Param/Value/4F34B63C"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerQueueExit();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaTripwire5_Init () {
    gt_SiegeAreaTripwire5 = TriggerCreate("gt_SiegeAreaTripwire5_Func");
    TriggerAddEventUnitRegion(gt_SiegeAreaTripwire5, null, RegionFromId(51), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Gate 1 Death
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaGate1Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoBB6CABA5_n = 6;
    int autoBB6CABA5_i;

    // Conditions
    if (testConds) {
        if (!((UnitGetPropertyFixed(EventUnit(), c_unitPropLife, c_unitPropCurrent) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (autoBB6CABA5_i = 1; autoBB6CABA5_i <= autoBB6CABA5_n; autoBB6CABA5_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(19)));
    }
    SoundPlayForPlayer(SoundLink("M9GateDestruction", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    UnitRemove(UnitFromId(220383500));
    UnitRemove(UnitFromId(90));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaGate1Death_Init () {
    gt_StartingAreaGate1Death = TriggerCreate("gt_StartingAreaGate1Death_Func");
    TriggerAddEventUnitProperty(gt_StartingAreaGate1Death, UnitRefFromUnit(UnitFromId(90)), c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Gate Invisible 1 Death
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaGateInvisible1Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto25BF473B_n = 6;
    int auto25BF473B_i;

    // Conditions
    if (testConds) {
        if (!((UnitGetPropertyFixed(EventUnit(), c_unitPropLife, c_unitPropCurrent) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto25BF473B_i = 1; auto25BF473B_i <= auto25BF473B_n; auto25BF473B_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(19)));
    }
    SoundPlayForPlayer(SoundLink("M9GateDestruction", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitRemove(UnitFromId(90));
    UnitRemove(UnitFromId(220383500));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaGateInvisible1Death_Init () {
    gt_StartingAreaGateInvisible1Death = TriggerCreate("gt_StartingAreaGateInvisible1Death_Func");
    TriggerAddEventUnitProperty(gt_StartingAreaGateInvisible1Death, UnitRefFromUnit(UnitFromId(220383500)), c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Gate 2 Death
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaGate2Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto951D54FA_n = 6;
    int auto951D54FA_i;

    // Conditions
    if (testConds) {
        if (!((UnitGetPropertyFixed(EventUnit(), c_unitPropLife, c_unitPropCurrent) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto951D54FA_i = 1; auto951D54FA_i <= auto951D54FA_n; auto951D54FA_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(20)));
    }
    SoundPlayForPlayer(SoundLink("M9GateDestruction", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitRemove(UnitFromId(1643841535));
    UnitRemove(UnitFromId(19));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaGate2Death_Init () {
    gt_StartingAreaGate2Death = TriggerCreate("gt_StartingAreaGate2Death_Func");
    TriggerAddEventUnitProperty(gt_StartingAreaGate2Death, UnitRefFromUnit(UnitFromId(19)), c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Gate Invisible 2 Death
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaGateInvisible2Death_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto925711CA_n = 6;
    int auto925711CA_i;

    // Conditions
    if (testConds) {
        if (!((UnitGetPropertyFixed(EventUnit(), c_unitPropLife, c_unitPropCurrent) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto925711CA_i = 1; auto925711CA_i <= auto925711CA_n; auto925711CA_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(20)));
    }
    SoundPlayForPlayer(SoundLink("M9GateDestruction", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    UnitRemove(UnitFromId(19));
    UnitRemove(UnitFromId(1643841535));
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaGateInvisible2Death_Init () {
    gt_StartingAreaGateInvisible2Death = TriggerCreate("gt_StartingAreaGateInvisible2Death_Func");
    TriggerAddEventUnitProperty(gt_StartingAreaGateInvisible2Death, UnitRefFromUnit(UnitFromId(1643841535)), c_unitPropLife);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Stop and Run
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianStopandRun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFECF1F78_g;
    int autoFECF1F78_u;
    unit autoFECF1F78_var;

    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_p02_HUMANSNEUTRAL))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoFECF1F78_g = UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionFromId(18), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFECF1F78_u = UnitGroupCount(autoFECF1F78_g, c_unitCountAll);
    for (;; autoFECF1F78_u -= 1) {
        autoFECF1F78_var = UnitGroupUnitFromEnd(autoFECF1F78_g, autoFECF1F78_u);
        if (autoFECF1F78_var == null) { break; }
        Wait(RandomFixed(0.7, 2.0), c_timeGame);
        UnitIssueOrder(autoFECF1F78_var, Order(AbilityCommand("stop", 0)), c_orderQueueReplace);
        UnitIssueOrder(autoFECF1F78_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(17))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianStopandRun_Init () {
    gt_StartingAreaCivilianStopandRun = TriggerCreate("gt_StartingAreaCivilianStopandRun_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCivilianStopandRun, null, RegionFromId(16), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Escape 1
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianEscape1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto1FAA7256_n = 60;
    int auto1FAA7256_i;
    unitgroup autoBC99E984_g;
    int autoBC99E984_u;
    unit autoBC99E984_var;

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(90)) == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(220383500)) == true))) {
            return false;
        }

        if (!((gv_startingAreaDoorOpen == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_p02_HUMANSNEUTRAL))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_startingAreaDoorOpen = true;
    libNtve_gf_ShowHideUnit(UnitFromId(90), false);
    libNtve_gf_ShowHideUnit(UnitFromId(220383500), true);
    UnitSetHeight(UnitFromId(220383500), 2.0, 3.0);
    libNtve_gf_ShowHideUnit(UnitFromId(19), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1643841535), true);
    UnitSetHeight(UnitFromId(1643841535), 2.0, 3.0);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateOpen", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(90), 0.0, 100.0, 0.0);
    Wait(3.0, c_timeGame);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateSlam", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(90), 0.0, 100.0, 0.0);
    for (auto1FAA7256_i = 1; auto1FAA7256_i <= auto1FAA7256_n; auto1FAA7256_i += 1) {
        autoBC99E984_g = UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionFromId(18), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoBC99E984_u = UnitGroupCount(autoBC99E984_g, c_unitCountAll);
        for (;; autoBC99E984_u -= 1) {
            autoBC99E984_var = UnitGroupUnitFromEnd(autoBC99E984_g, autoBC99E984_u);
            if (autoBC99E984_var == null) { break; }
            UnitIssueOrder(autoBC99E984_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(17))), c_orderQueueReplace);
        }
        Wait(1.0, c_timeGame);
    }
    Wait(30.0, c_timeGame);
    TriggerExecute(gt_StartingAreaCivilianEscape1A, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianEscape1_Init () {
    gt_StartingAreaCivilianEscape1 = TriggerCreate("gt_StartingAreaCivilianEscape1_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCivilianEscape1, null, RegionFromId(16), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Escape 1A
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianEscape1A_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(90)) == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(220383500)) == true))) {
            return false;
        }

        if (!((gv_startingAreaDoorOpen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetHeight(UnitFromId(220383500), 0.0, 3.0);
    UnitSetHeight(UnitFromId(1643841535), 0.0, 3.0);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateOpen", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(90), 0.0, 100.0, 0.0);
    Wait(3.0, c_timeGame);
    libNtve_gf_ShowHideUnit(UnitFromId(90), true);
    libNtve_gf_ShowHideUnit(UnitFromId(220383500), false);
    libNtve_gf_ShowHideUnit(UnitFromId(19), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1643841535), false);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateSlam", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(19), 0.0, 100.0, 0.0);
    gv_startingAreaDoorOpen = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianEscape1A_Init () {
    gt_StartingAreaCivilianEscape1A = TriggerCreate("gt_StartingAreaCivilianEscape1A_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Escape 2
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianEscape2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int autoA1D4E266_n = 60;
    int autoA1D4E266_i;
    unitgroup auto3277679C_g;
    int auto3277679C_u;
    unit auto3277679C_var;

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(19)) == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1643841535)) == true))) {
            return false;
        }

        if (!((gv_startingAreaDoorOpen == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_p02_HUMANSNEUTRAL))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_startingAreaDoorOpen = true;
    libNtve_gf_ShowHideUnit(UnitFromId(19), false);
    libNtve_gf_ShowHideUnit(UnitFromId(1643841535), true);
    UnitSetHeight(UnitFromId(1643841535), 2.0, 3.0);
    libNtve_gf_ShowHideUnit(UnitFromId(90), false);
    libNtve_gf_ShowHideUnit(UnitFromId(220383500), true);
    UnitSetHeight(UnitFromId(220383500), 2.0, 3.0);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateOpen", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(90), 0.0, 100.0, 0.0);
    Wait(3.0, c_timeGame);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateSlam", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(90), 0.0, 100.0, 0.0);
    for (autoA1D4E266_i = 1; autoA1D4E266_i <= autoA1D4E266_n; autoA1D4E266_i += 1) {
        auto3277679C_g = UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionFromId(18), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto3277679C_u = UnitGroupCount(auto3277679C_g, c_unitCountAll);
        for (;; auto3277679C_u -= 1) {
            auto3277679C_var = UnitGroupUnitFromEnd(auto3277679C_g, auto3277679C_u);
            if (auto3277679C_var == null) { break; }
            UnitIssueOrder(auto3277679C_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(17))), c_orderQueueReplace);
        }
        Wait(1.0, c_timeGame);
    }
    Wait(30.0, c_timeGame);
    TriggerExecute(gt_StartingAreaCivilianEscape2A, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianEscape2_Init () {
    gt_StartingAreaCivilianEscape2 = TriggerCreate("gt_StartingAreaCivilianEscape2_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCivilianEscape2, null, RegionFromId(16), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Escape 2A
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianEscape2A_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(19)) == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1643841535)) == true))) {
            return false;
        }

        if (!((gv_startingAreaDoorOpen == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetHeight(UnitFromId(220383500), 0.0, 3.0);
    UnitSetHeight(UnitFromId(1643841535), 0.0, 3.0);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateOpen", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(90), 0.0, 100.0, 0.0);
    Wait(3.0, c_timeGame);
    libNtve_gf_ShowHideUnit(UnitFromId(19), true);
    libNtve_gf_ShowHideUnit(UnitFromId(1643841535), false);
    libNtve_gf_ShowHideUnit(UnitFromId(90), true);
    libNtve_gf_ShowHideUnit(UnitFromId(220383500), false);
    SoundPlayOnUnitForPlayer(SoundLink("M9GateSlam", -1), c_maxPlayers, PlayerGroupAll(), UnitFromId(19), 0.0, 100.0, 0.0);
    gv_startingAreaDoorOpen = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianEscape2A_Init () {
    gt_StartingAreaCivilianEscape2A = TriggerCreate("gt_StartingAreaCivilianEscape2A_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Escape 3
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianEscape3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDE601A0D_g;
    int autoDE601A0D_u;
    unit autoDE601A0D_var;

    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(90)) == false))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(19)) == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_p02_HUMANSNEUTRAL))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoDE601A0D_g = UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionFromId(18), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDE601A0D_u = UnitGroupCount(autoDE601A0D_g, c_unitCountAll);
    for (;; autoDE601A0D_u -= 1) {
        autoDE601A0D_var = UnitGroupUnitFromEnd(autoDE601A0D_g, autoDE601A0D_u);
        if (autoDE601A0D_var == null) { break; }
        UnitIssueOrder(autoDE601A0D_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionGetCenter(RegionFromId(17))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianEscape3_Init () {
    gt_StartingAreaCivilianEscape3 = TriggerCreate("gt_StartingAreaCivilianEscape3_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCivilianEscape3, null, RegionFromId(16), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Left Civilians Run
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaLeftCiviliansRun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto2D7DC760_g;
    int auto2D7DC760_u;
    unit auto2D7DC760_var;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_startingAreaLeftGarrison) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto2D7DC760_g = gv_startingAreaLeftCivilians;
    auto2D7DC760_u = UnitGroupCount(auto2D7DC760_g, c_unitCountAll);
    for (;; auto2D7DC760_u -= 1) {
        auto2D7DC760_var = UnitGroupUnitFromEnd(auto2D7DC760_g, auto2D7DC760_u);
        if (auto2D7DC760_var == null) { break; }
        UnitIssueOrder(auto2D7DC760_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(16))), c_orderQueueReplace);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaLeftCiviliansRun_Init () {
    gt_StartingAreaLeftCiviliansRun = TriggerCreate("gt_StartingAreaLeftCiviliansRun_Func");
    TriggerAddEventUnitDied(gt_StartingAreaLeftCiviliansRun, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Close Right Civilians Run
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCloseRightCiviliansRun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoAFA39B9B_g;
    int autoAFA39B9B_u;
    unit autoAFA39B9B_var;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_startingAreaCloseRightGarrison) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    autoAFA39B9B_g = gv_startingAreaCloseRightCivilians;
    autoAFA39B9B_u = UnitGroupCount(autoAFA39B9B_g, c_unitCountAll);
    for (;; autoAFA39B9B_u -= 1) {
        autoAFA39B9B_var = UnitGroupUnitFromEnd(autoAFA39B9B_g, autoAFA39B9B_u);
        if (autoAFA39B9B_var == null) { break; }
        UnitIssueOrder(autoAFA39B9B_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(16))), c_orderQueueReplace);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCloseRightCiviliansRun_Init () {
    gt_StartingAreaCloseRightCiviliansRun = TriggerCreate("gt_StartingAreaCloseRightCiviliansRun_Func");
    TriggerAddEventUnitDied(gt_StartingAreaCloseRightCiviliansRun, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Medium Right Civilians Run
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaMediumRightCiviliansRun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto0E6DCA40_g;
    int auto0E6DCA40_u;
    unit auto0E6DCA40_var;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_startingAreaMediumRightGarrison) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto0E6DCA40_g = gv_startingAreaMediumRightCivilians;
    auto0E6DCA40_u = UnitGroupCount(auto0E6DCA40_g, c_unitCountAll);
    for (;; auto0E6DCA40_u -= 1) {
        auto0E6DCA40_var = UnitGroupUnitFromEnd(auto0E6DCA40_g, auto0E6DCA40_u);
        if (auto0E6DCA40_var == null) { break; }
        UnitIssueOrder(auto0E6DCA40_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(16))), c_orderQueueReplace);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaMediumRightCiviliansRun_Init () {
    gt_StartingAreaMediumRightCiviliansRun = TriggerCreate("gt_StartingAreaMediumRightCiviliansRun_Func");
    TriggerAddEventUnitDied(gt_StartingAreaMediumRightCiviliansRun, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Far Right Civilians Run
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaFarRightCiviliansRun_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto798CA41F_g;
    int auto798CA41F_u;
    unit auto798CA41F_var;

    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitGroupIsDead(gv_startingAreaFarRightGarrison) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    auto798CA41F_g = gv_startingAreaFarRightCivilians;
    auto798CA41F_u = UnitGroupCount(auto798CA41F_g, c_unitCountAll);
    for (;; auto798CA41F_u -= 1) {
        auto798CA41F_var = UnitGroupUnitFromEnd(auto798CA41F_g, auto798CA41F_u);
        if (auto798CA41F_var == null) { break; }
        UnitIssueOrder(auto798CA41F_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(16))), c_orderQueueReplace);
    }
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaFarRightCiviliansRun_Init () {
    gt_StartingAreaFarRightCiviliansRun = TriggerCreate("gt_StartingAreaFarRightCiviliansRun_Func");
    TriggerAddEventUnitDied(gt_StartingAreaFarRightCiviliansRun, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Civilian Despawn
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCivilianDespawn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitGetOwner(EventUnit()) == gv_p02_HUMANSNEUTRAL))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitRemove(EventUnit());
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCivilianDespawn_Init () {
    gt_StartingAreaCivilianDespawn = TriggerCreate("gt_StartingAreaCivilianDespawn_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaCivilianDespawn, null, RegionFromId(17), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Reticle 1 & Ping 1
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillReticle1Ping1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_p02_HUMANSNEUTRAL, RegionFromId(6), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("DefilerLotCParalyzingCloud", 0), false);
    libNtve_gf_KillModel(gv_startingAreaReticle);
    TextTagDestroy(gv_startingAreaReticleTextTag);
    PingDestroy(gv_startingAreaCivilianPing1);
    VisRevealerDestroy(gv_startingAreaRevealer);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_StartingAreaKillReticle1Ping1AlternateCondition, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillReticle1Ping1_Init () {
    gt_StartingAreaKillReticle1Ping1 = TriggerCreate("gt_StartingAreaKillReticle1Ping1_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaKillReticle1Ping1, null, RegionFromId(6), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Reticle 1 & Ping 1 (Alternate Condition)
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillReticle1Ping1AlternateCondition_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGroupHasUnit(UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionFromId(6), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), EventUnit()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("DefilerLotCParalyzingCloud", 0), false);
    libNtve_gf_KillModel(gv_startingAreaReticle);
    TextTagDestroy(gv_startingAreaReticleTextTag);
    PingDestroy(gv_startingAreaCivilianPing1);
    VisRevealerDestroy(gv_startingAreaRevealer);
    TriggerEnable(TriggerGetCurrent(), false);
    TriggerEnable(gt_StartingAreaKillReticle1Ping1, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillReticle1Ping1AlternateCondition_Init () {
    gt_StartingAreaKillReticle1Ping1AlternateCondition = TriggerCreate("gt_StartingAreaKillReticle1Ping1AlternateCondition_Func");
    TriggerAddEventUnitBehaviorChange(gt_StartingAreaKillReticle1Ping1AlternateCondition, null, "DefilerLotCParalyzingCloud", c_unitBehaviorChangeActivate);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Reticle 2
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillReticle2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_startingAreaReticle2);
    TextTagDestroy(gv_startingAreaReticleTextTag2);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillReticle2_Init () {
    gt_StartingAreaKillReticle2 = TriggerCreate("gt_StartingAreaKillReticle2_Func");
    TriggerAddEventPlayerPropChange(gt_StartingAreaKillReticle2, 1, c_playerPropTerrazine);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Ping2
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillPing2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_p02_HUMANSNEUTRAL, RegionFromId(15), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_startingAreaCivilianPing2);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillPing2_Init () {
    gt_StartingAreaKillPing2 = TriggerCreate("gt_StartingAreaKillPing2_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaKillPing2, null, RegionFromId(15), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Ping3
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillPing3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_p02_HUMANSNEUTRAL, RegionFromId(22), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_startingAreaCivilianPing3);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillPing3_Init () {
    gt_StartingAreaKillPing3 = TriggerCreate("gt_StartingAreaKillPing3_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaKillPing3, null, RegionFromId(22), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Ping4
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillPing4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_p02_HUMANSNEUTRAL, RegionFromId(24), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_startingAreaCivilianPing4);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillPing4_Init () {
    gt_StartingAreaKillPing4 = TriggerCreate("gt_StartingAreaKillPing4_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaKillPing4, null, RegionFromId(24), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Kill Ping5
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaKillPing5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_p02_HUMANSNEUTRAL, RegionFromId(26), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PingDestroy(gv_startingAreaCivilianPing5);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaKillPing5_Init () {
    gt_StartingAreaKillPing5 = TriggerCreate("gt_StartingAreaKillPing5_Func");
    TriggerAddEventUnitRegion(gt_StartingAreaKillPing5, null, RegionFromId(26), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Plague Setting
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaPlagueSetting_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    gv_startingAreaPlagueSetting = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaPlagueSetting_Init () {
    gt_StartingAreaPlagueSetting = TriggerCreate("gt_StartingAreaPlagueSetting_Func");
    TriggerAddEventUnitAbility(gt_StartingAreaPlagueSetting, null, AbilityCommand("DefilerMPPlague", 0), c_unitAbilStageComplete, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Begins
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaBegins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(TriggerGetCurrent(), false);
    gv_startingAreaActive = true;
    RegionPlayableMapSet(RegionFromId(46));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M9StartingAreaMusic", c_soundtrackCueAny, c_soundtrackIndexAny, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(668668894), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    UISetButtonHighlighted(PlayerGroupAll(), AbilityCommand("DefilerLotCParalyzingCloud", 0), true);
    Wait(2.0, c_timeGame);
    MinimapPing(PlayerGroupAll(), RegionRandomPoint(RegionFromId(6)), 7.0, Color(100.00, 100.00, 0.00));
    VisRevealerCreate(gv_pLAYER_01_USER, RegionFromId(6));
    gv_startingAreaRevealer = VisRevealerLastCreated();
    lib1926661B_gf_CreateObjectivePing(false, RegionGetCenter(RegionFromId(6)), StringExternal("Param/Value/F115B946"));
    gv_startingAreaCivilianPing1 = PingLastCreated();
    lib1926661B_gf_CreateObjectivePing(false, libNtve_gf_PointFacingAngle(PointFromId(641558808), 270.0), StringExternal("Param/Value/8B1B5E31"));
    gv_startingAreaCivilianPing2 = PingLastCreated();
    lib1926661B_gf_CreateObjectivePing(false, libNtve_gf_PointFacingAngle(PointFromId(907940673), 270.0), StringExternal("Param/Value/603B77DC"));
    gv_startingAreaCivilianPing3 = PingLastCreated();
    lib1926661B_gf_CreateObjectivePing(false, libNtve_gf_PointFacingAngle(PointFromId(658362798), 270.0), StringExternal("Param/Value/76D7076D"));
    gv_startingAreaCivilianPing4 = PingLastCreated();
    lib1926661B_gf_CreateObjectivePing(false, libNtve_gf_PointFacingAngle(PointFromId(1305397642), 270.0), StringExternal("Param/Value/85456238"));
    gv_startingAreaCivilianPing5 = PingLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergBonusObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/2A40B7B3"), RegionGetCenter(RegionFromId(6)));
    gv_startingAreaReticle = libNtve_gf_ActorLastCreated();
    gv_startingAreaReticleTextTag = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergBonusObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/2EAD7E79"), UnitGetPosition(UnitFromId(120)));
    gv_startingAreaReticle2 = libNtve_gf_ActorLastCreated();
    gv_startingAreaReticleTextTag2 = TextTagLastCreated();
    TriggerExecute(gt_TipHarvestBiomass, true, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9Slohr4", -1), StringExternal("Param/Value/FF30A360"), StringExternal("Param/Value/1D688606"), 1.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveCreate(StringExternal("Param/Value/DD17192B"), StringExternal("Param/Value/7B2FBD8B"), c_objectiveStateActive, true);
    gv_startingAreaHarvestBiomassObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_startingAreaHarvestBiomassObjective, PlayerGroupAll(), true);
    TriggerEnable(gt_DefeatAllUnitsKilled, true);
    Wait(300.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    Wait(300.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    Wait(300.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    Wait(300.0, c_timeGame);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaBegins_Init () {
    gt_StartingAreaBegins = TriggerCreate("gt_StartingAreaBegins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Warning
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaWarning_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((PlayerGetPropertyInt(EventPlayer(), c_playerPropTerrazine) == 0))) {
            return false;
        }

        if (!((TechTreeUnitCount(gv_pLAYER_01_USER, "Drone", c_techCountQueuedOrBetter) == 1))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("Defiler_Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("DefilerMP_Ready", -1), StringExternal("Param/Value/34D352F2"), StringExternal("Param/Value/A08F7B20"), 3.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/61B842A1"));
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaWarning_Init () {
    gt_StartingAreaWarning = TriggerCreate("gt_StartingAreaWarning_Func");
    TriggerAddEventUnitDied(gt_StartingAreaWarning, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Starting Area Completion
//--------------------------------------------------------------------------------------------------
bool gt_StartingAreaCompletion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_startingAreaActive == true))) {
            return false;
        }

        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitCount(null, gv_p02_HUMANSNEUTRAL, RegionFromId(46), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_StartingAreaBegins);
    ObjectiveSetState(gv_startingAreaHarvestBiomassObjective, c_objectiveStateCompleted);
    Wait(3.0, c_timeGame);
    gv_startingAreaActive = false;
    TriggerEnable(gt_DefeatAllUnitsKilled, false);
    TriggerExecute(gt_ColonyShipCinematicSetup, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_StartingAreaCompletion_Init () {
    gt_StartingAreaCompletion = TriggerCreate("gt_StartingAreaCompletion_Func");
    TriggerAddEventTimePeriodic(gt_StartingAreaCompletion, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Door 2 Open
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Door2Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(477)) == true))) {
            return false;
        }

        if (!((gv_colonyShipDoorOpen2 == false))) {
            return false;
        }

        if (!((gv_colonyShipDoor2SlohrFinished == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShipDoorOpen2 = true;
    UnitIssueOrder(UnitFromId(477), Order(AbilityCommand("DestructibleGateDiagonalULBRLowered", 0)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Door2Open_Init () {
    gt_ColonyShipArea1Door2Open = TriggerCreate("gt_ColonyShipArea1Door2Open_Func");
    TriggerAddEventUnitRegion(gt_ColonyShipArea1Door2Open, null, RegionFromId(28), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Door 1 Open
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Door1Open_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(470)) == true))) {
            return false;
        }

        if (!((gv_colonyShipDoorOpen1 == false))) {
            return false;
        }

        if (!(((UnitGetType(EventUnit()) == "UPLCivilianFemale") || (UnitGetType(EventUnit()) == "UPLCivilianMale")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShipDoorOpen1 = true;
    UnitIssueOrder(UnitFromId(470), Order(AbilityCommand("DestructibleGateDiagonalULBRLowered", 0)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Door1Open_Init () {
    gt_ColonyShipArea1Door1Open = TriggerCreate("gt_ColonyShipArea1Door1Open_Func");
    TriggerAddEventUnitRegion(gt_ColonyShipArea1Door1Open, null, RegionFromId(27), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Death Count
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipDeathCount_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_PlayerInCinematicMode(gv_pLAYER_01_USER) == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_colonyShipArea1Active == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), EventUnit()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShipDeaths += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipDeathCount_Init () {
    gt_ColonyShipDeathCount = TriggerCreate("gt_ColonyShipDeathCount_Func");
    TriggerAddEventUnitDied(gt_ColonyShipDeathCount, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Death Count 2
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipDeathCount2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_PlayerInCinematicMode(gv_pLAYER_01_USER) == false))) {
            return false;
        }

        if (!((gv_gameOver == false))) {
            return false;
        }

        if (!((gv_colonyShipArea2Active == true))) {
            return false;
        }

        if (!((UnitGroupHasUnit(UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), EventUnit()) == true))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShipDeaths += 1;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipDeathCount2_Init () {
    gt_ColonyShipDeathCount2 = TriggerCreate("gt_ColonyShipDeathCount2_Func");
    TriggerAddEventUnitDied(gt_ColonyShipDeathCount2, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Begins
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Begins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto51DD7DE6_g;
    int auto51DD7DE6_u;
    unit auto51DD7DE6_var;
    unitgroup auto0FEB1ECB_g;
    int auto0FEB1ECB_u;
    unit auto0FEB1ECB_var;
    unitgroup auto293F02B0_g;
    int auto293F02B0_u;
    unit auto293F02B0_var;
    unitgroup auto31C0B7D5_g;
    int auto31C0B7D5_u;
    unit auto31C0B7D5_var;

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShipArea1Active = true;
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Mutalisk", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Overlord", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "QueenClassic", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Spire", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "GreaterSpire", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SporeCrawler", false);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Ultralisk", true);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/826AADE5"), UnitGetPosition(UnitFromId(2040148640)));
    gv_colonyShipArea1ReticleAlarm = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea1TextTagAlarm = TextTagLastCreated();
    PlayerModifyPropertyInt(gv_pLAYER_01_USER, c_playerPropSuppliesMade, c_playerPropOperSetTo, 200);
    UnitSetPropertyFixed(UnitFromId(1480678886), c_unitPropEnergyPercent, 100.0);
    UnitSetPropertyFixed(UnitFromId(861158485), c_unitPropEnergyPercent, 100.0);
    RegionPlayableMapSet(RegionFromId(44));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    auto51DD7DE6_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(79), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto51DD7DE6_u = UnitGroupCount(auto51DD7DE6_g, c_unitCountAll);
    for (;; auto51DD7DE6_u -= 1) {
        auto51DD7DE6_var = UnitGroupUnitFromEnd(auto51DD7DE6_g, auto51DD7DE6_u);
        if (auto51DD7DE6_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto51DD7DE6_var, libNtve_ge_UnitDamageTakenDealt_Damage_Deal, libNtve_ge_UnitDamageChangeOption_Minimal);
    }
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, false);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, false, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M9ShipMusic", c_soundtrackCueAny, c_soundtrackIndexAny, true);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryAmbience, "M9ColonyShipAmbience", c_soundtrackCueAny, c_soundtrackIndexAny, true);
    SoundPlayForPlayer(SoundLink("M9ColonyShipBreakin1", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(3.0, c_timeGame);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1301240372), 0.0, -1, 10.0, true);
    TriggerExecute(gt_ColonyShipArea1Alarm, true, false);
    TriggerEnable(gt_ColonyShipAreaLighting, true);
    libNtve_gf_GlobalCinematicSetting(false);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 2.0);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    auto0FEB1ECB_g = UnitGroup(null, gv_p02_HUMANSNEUTRAL, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0FEB1ECB_u = UnitGroupCount(auto0FEB1ECB_g, c_unitCountAll);
    for (;; auto0FEB1ECB_u -= 1) {
        auto0FEB1ECB_var = UnitGroupUnitFromEnd(auto0FEB1ECB_g, auto0FEB1ECB_u);
        if (auto0FEB1ECB_var == null) { break; }
        UnitIssueOrder(auto0FEB1ECB_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(30))), c_orderQueueReplace);
    }
    auto293F02B0_g = UnitGroup(null, gv_p06_ZERGNEUTRAL_NEUTRAL, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto293F02B0_u = UnitGroupCount(auto293F02B0_g, c_unitCountAll);
    for (;; auto293F02B0_u -= 1) {
        auto293F02B0_var = UnitGroupUnitFromEnd(auto293F02B0_g, auto293F02B0_u);
        if (auto293F02B0_var == null) { break; }
        UnitSetOwner(auto293F02B0_var, gv_pLAYER_01_USER, true);
        libNtve_gf_ChangeUnitDamage(auto293F02B0_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_No);
    }
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9ColonyShip1Announcement", -1), StringExternal("Param/Value/2C0B6676"), StringExternal("Param/Value/736E4A83"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveCreate(StringExternal("Param/Value/EEBBD2BA"), StringExternal("Param/Value/7BA10C66"), c_objectiveStateActive, true);
    gv_colonyShipArea1Objective = ObjectiveLastCreated();
    ObjectiveShow(gv_colonyShipArea1Objective, PlayerGroupAll(), true);
    TimerStart(gv_colonyShipArea1Timer, lib1926661B_gf_DifficultyValueInteger(680, 420), false, c_timeGame);
    gv_colonyShipArea1Timer = TimerLastStarted();
    lib1926661B_gf_CreateTimerWindowLotC(TimerLastStarted(), StringExternal("Param/Value/3F2C36F6"), true, false, 1);
    lib1926661B_gf_FlashCheckpointReminder();
    TriggerEnable(gt_DefeatAllUnitsKilledOnShips, true);
    Wait(8.0, c_timeGame);
    auto31C0B7D5_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto31C0B7D5_u = UnitGroupCount(auto31C0B7D5_g, c_unitCountAll);
    for (;; auto31C0B7D5_u -= 1) {
        auto31C0B7D5_var = UnitGroupUnitFromEnd(auto31C0B7D5_g, auto31C0B7D5_u);
        if (auto31C0B7D5_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(auto31C0B7D5_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Full);
    }
    Wait(36.0, c_timeGame);
    TriggerExecute(gt_ColonyShipArea1Reinforcements2, true, false);
    Wait(125.0, c_timeGame);
    TriggerExecute(gt_ColonyShipArea1Reinforcements, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Begins_Init () {
    gt_ColonyShipArea1Begins = TriggerCreate("gt_ColonyShipArea1Begins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Reinforcements
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Reinforcements_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDEFAFFA9_g;
    int autoDEFAFFA9_u;
    unit autoDEFAFFA9_var;

    // Actions
    if (!runActions) {
        return true;
    }

    autoDEFAFFA9_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(42), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDEFAFFA9_u = UnitGroupCount(autoDEFAFFA9_g, c_unitCountAll);
    for (;; autoDEFAFFA9_u -= 1) {
        autoDEFAFFA9_var = UnitGroupUnitFromEnd(autoDEFAFFA9_g, autoDEFAFFA9_u);
        if (autoDEFAFFA9_var == null) { break; }
        UnitGroupAdd(gv_colonyShipReinforcements, autoDEFAFFA9_var);
        UnitIssueOrder(autoDEFAFFA9_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1154782971))), c_orderQueueReplace);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Reinforcements_Init () {
    gt_ColonyShipArea1Reinforcements = TriggerCreate("gt_ColonyShipArea1Reinforcements_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Reinforcements 2
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Reinforcements2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto4152092B_g;
    int auto4152092B_u;
    unit auto4152092B_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((UnitIsAlive(UnitFromId(470)) == true)) {
        UnitIssueOrder(UnitFromId(470), Order(AbilityCommand("DestructibleGateDiagonalULBRLowered", 0)), c_orderQueueReplace);
        SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        Wait(5.0, c_timeGame);
    }
    else {
        auto4152092B_g = UnitGroup(null, gv_p03_HUMANSENEMY, RegionFromId(45), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        auto4152092B_u = UnitGroupCount(auto4152092B_g, c_unitCountAll);
        for (;; auto4152092B_u -= 1) {
            auto4152092B_var = UnitGroupUnitFromEnd(auto4152092B_g, auto4152092B_u);
            if (auto4152092B_var == null) { break; }
            UnitGroupAdd(gv_colonyShipReinforcements, auto4152092B_var);
            UnitIssueOrder(auto4152092B_var, OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1154782971))), c_orderQueueReplace);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Reinforcements2_Init () {
    gt_ColonyShipArea1Reinforcements2 = TriggerCreate("gt_ColonyShipArea1Reinforcements2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Alarm
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Alarm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto008CF577_n = 5;
    int auto008CF577_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto008CF577_i = 1; auto008CF577_i <= auto008CF577_n; auto008CF577_i += 1) {
        SoundPlayForPlayer(SoundLink("M9ColonyShipAlarm2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        DataTableSetSound(true, "shipalarm1", SoundLastPlayed());
        Wait(131.75, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Alarm_Init () {
    gt_ColonyShipArea1Alarm = TriggerCreate("gt_ColonyShipArea1Alarm_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Alarm Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1AlarmDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_ColonyShipArea1Alarm);
    TriggerEnable(gt_ColonyShipArea1Alarm, false);
    SoundStop(DataTableGetSound(true, "shipalarm1"), true);
    libNtve_gf_KillModel(gv_colonyShipArea1ReticleAlarm);
    TextTagDestroy(gv_colonyShipArea1TextTagAlarm);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1AlarmDestroyed_Init () {
    gt_ColonyShipArea1AlarmDestroyed = TriggerCreate("gt_ColonyShipArea1AlarmDestroyed_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea1AlarmDestroyed, UnitRefFromUnit(UnitFromId(2040148640)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area Lighting
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipAreaLighting_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameSetLighting("PrisonShipEmergency", 7.0);
    Wait(5.0, c_timeGame);
    GameSetLighting("TarsonisInterior", 5.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipAreaLighting_Init () {
    gt_ColonyShipAreaLighting = TriggerCreate("gt_ColonyShipAreaLighting_Func");
    TriggerEnable(gt_ColonyShipAreaLighting, false);
    TriggerAddEventTimePeriodic(gt_ColonyShipAreaLighting, 10.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 1 Completion
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea1Completion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitCount(null, gv_p03_HUMANSENEMY, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShipArea1Active = false;
    ObjectiveSetState(gv_colonyShipArea1Objective, c_objectiveStateCompleted);
    libNtve_gf_StopTimer(gv_colonyShipArea1Timer);
    lib1926661B_gf_ShowHideTimerWindowLotC(false, 1);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9Slohr9", -1), StringExternal("Param/Value/CDEF78CD"), StringExternal("Param/Value/03D1DBAC"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    ObjectiveDestroy(gv_colonyShipArea1Objective);
    SoundStop(DataTableGetSound(true, "shipalarm1"), true);
    TriggerStop(gt_ColonyShipArea1Alarm);
    TriggerEnable(gt_ColonyShipArea1Alarm, false);
    TriggerEnable(gt_DefeatAllUnitsKilledOnShips, false);
    TriggerExecute(gt_ColonyShipArea2Begins, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea1Completion_Init () {
    gt_ColonyShipArea1Completion = TriggerCreate("gt_ColonyShipArea1Completion_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea1Completion, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Open 1
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorOpen1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(529)) == true))) {
            return false;
        }

        if (!((gv_colonyShip2DoorOpen1 == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShip2DoorOpen1 = true;
    UnitIssueOrder(UnitFromId(529), Order(AbilityCommand("DestructibleGateStraightHorizontalLowered", 0)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorOpen1_Init () {
    gt_ColonyShipArea2DoorOpen1 = TriggerCreate("gt_ColonyShipArea2DoorOpen1_Func");
    TriggerAddEventUnitRegion(gt_ColonyShipArea2DoorOpen1, null, RegionFromId(34), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Open 5
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorOpen5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(527)) == true))) {
            return false;
        }

        if (!((gv_colonyShip2DoorOpen5 == false))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) != 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    gv_colonyShip2DoorOpen5 = true;
    UnitIssueOrder(UnitFromId(527), Order(AbilityCommand("DestructibleGateStraightHorizontalLowered", 0)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorOpen5_Init () {
    gt_ColonyShipArea2DoorOpen5 = TriggerCreate("gt_ColonyShipArea2DoorOpen5_Func");
    TriggerAddEventUnitRegion(gt_ColonyShipArea2DoorOpen5, null, RegionFromId(38), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Close 1
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorClose1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(529)) == true))) {
            return false;
        }

        if (!((gv_colonyShip2DoorOpen1 == true))) {
            return false;
        }

        if (!((UnitCount(null, c_playerAny, RegionFromId(34), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(529), Order(AbilityCommand("DestructibleGateStraightHorizontal", 0)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(3.0, c_timeGame);
    gv_colonyShip2DoorOpen1 = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorClose1_Init () {
    gt_ColonyShipArea2DoorClose1 = TriggerCreate("gt_ColonyShipArea2DoorClose1_Func");
    TriggerAddEventUnitRegion(gt_ColonyShipArea2DoorClose1, null, RegionFromId(34), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Close 5
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorClose5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitIsAlive(UnitFromId(527)) == true))) {
            return false;
        }

        if (!((gv_colonyShip2DoorOpen5 == true))) {
            return false;
        }

        if (!((UnitCount(null, c_playerAny, RegionFromId(38), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 2))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitIssueOrder(UnitFromId(527), Order(AbilityCommand("DestructibleGateStraightHorizontal", 0)), c_orderQueueReplace);
    SoundPlayForPlayer(SoundLink("M9ColonyShipDoors", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(3.0, c_timeGame);
    gv_colonyShip2DoorOpen5 = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorClose5_Init () {
    gt_ColonyShipArea2DoorClose5 = TriggerCreate("gt_ColonyShipArea2DoorClose5_Func");
    TriggerAddEventUnitRegion(gt_ColonyShipArea2DoorClose5, null, RegionFromId(38), false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Reinforcements 1
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorReinforcements1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea2Active == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1790220008)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", 0, gv_p03_HUMANSENEMY, PointFromId(1842088062));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 1), "InfantryRifle", 0, gv_p03_HUMANSENEMY, PointFromId(1842088062));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorReinforcements1_Init () {
    gt_ColonyShipArea2DoorReinforcements1 = TriggerCreate("gt_ColonyShipArea2DoorReinforcements1_Func");
    TriggerAddEventTimePeriodic(gt_ColonyShipArea2DoorReinforcements1, 32.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Reinforcements 2
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorReinforcements2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea2Active == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1989764475)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 1), "InfantryHeavy", 0, gv_p03_HUMANSENEMY, PointFromId(1685968869));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRocket", 0, gv_p03_HUMANSENEMY, PointFromId(1685968869));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorReinforcements2_Init () {
    gt_ColonyShipArea2DoorReinforcements2 = TriggerCreate("gt_ColonyShipArea2DoorReinforcements2_Func");
    TriggerAddEventTimePeriodic(gt_ColonyShipArea2DoorReinforcements2, 40.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Reinforcements 3
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorReinforcements3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea2Active == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(932958231)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 1), "InfantryHeavy", 0, gv_p03_HUMANSENEMY, PointFromId(500999382));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_p03_HUMANSENEMY, PointFromId(500999382));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryRifle", 0, gv_p03_HUMANSENEMY, PointFromId(500999382));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorReinforcements3_Init () {
    gt_ColonyShipArea2DoorReinforcements3 = TriggerCreate("gt_ColonyShipArea2DoorReinforcements3_Func");
    TriggerAddEventTimePeriodic(gt_ColonyShipArea2DoorReinforcements3, 49.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Door Reinforcements 4
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2DoorReinforcements4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((gv_colonyShipArea2Active == true))) {
            return false;
        }

        if (!((UnitIsAlive(UnitFromId(1460725881)) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryHeavy", 0, gv_p03_HUMANSENEMY, PointFromId(1124024707));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(lib1926661B_gf_DifficultyValueInteger(0, 1), "InfantryRifle", 0, gv_p03_HUMANSENEMY, PointFromId(1124024707));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    Wait(0.5, c_timeGame);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "InfantryFlamethrower", 0, gv_p03_HUMANSENEMY, PointFromId(1124024707));
    UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("attack", 0), UnitGetPosition(UnitFromId(1679576545))), c_orderQueueReplace);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2DoorReinforcements4_Init () {
    gt_ColonyShipArea2DoorReinforcements4 = TriggerCreate("gt_ColonyShipArea2DoorReinforcements4_Func");
    TriggerAddEventTimePeriodic(gt_ColonyShipArea2DoorReinforcements4, 33.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Reinforcement Door Dies 1
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2ReinforcementDoorDies1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_colonyShipArea2Reticle1);
    TextTagDestroy(gv_colonyShipArea2TextTag1);
    SoundPlayForPlayer(SoundLink("M9ReinforcementDoor1Dead", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2ReinforcementDoorDies1_Init () {
    gt_ColonyShipArea2ReinforcementDoorDies1 = TriggerCreate("gt_ColonyShipArea2ReinforcementDoorDies1_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea2ReinforcementDoorDies1, UnitRefFromUnit(UnitFromId(1790220008)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Reinforcement Door Dies 2
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2ReinforcementDoorDies2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_colonyShipArea2Reticle2);
    TextTagDestroy(gv_colonyShipArea2TextTag2);
    SoundPlayForPlayer(SoundLink("M9ReinforcementDoor2Dead", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2ReinforcementDoorDies2_Init () {
    gt_ColonyShipArea2ReinforcementDoorDies2 = TriggerCreate("gt_ColonyShipArea2ReinforcementDoorDies2_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea2ReinforcementDoorDies2, UnitRefFromUnit(UnitFromId(1989764475)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Reinforcement Door Dies 3
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2ReinforcementDoorDies3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_colonyShipArea2Reticle3);
    TextTagDestroy(gv_colonyShipArea2TextTag3);
    SoundPlayForPlayer(SoundLink("M9ReinforcementDoor1Dead", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2ReinforcementDoorDies3_Init () {
    gt_ColonyShipArea2ReinforcementDoorDies3 = TriggerCreate("gt_ColonyShipArea2ReinforcementDoorDies3_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea2ReinforcementDoorDies3, UnitRefFromUnit(UnitFromId(932958231)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Reinforcement Door Dies 4
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2ReinforcementDoorDies4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_colonyShipArea2Reticle4);
    TextTagDestroy(gv_colonyShipArea2TextTag4);
    SoundPlayForPlayer(SoundLink("M9ReinforcementDoor2Dead", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2ReinforcementDoorDies4_Init () {
    gt_ColonyShipArea2ReinforcementDoorDies4 = TriggerCreate("gt_ColonyShipArea2ReinforcementDoorDies4_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea2ReinforcementDoorDies4, UnitRefFromUnit(UnitFromId(1460725881)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Begins
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2Begins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto1969715A_g;
    int auto1969715A_u;
    unit auto1969715A_var;
    unitgroup auto1FD4C75A_g;
    int auto1FD4C75A_u;
    unit auto1FD4C75A_var;
    unitgroup autoD9358BF2_g;
    int autoD9358BF2_u;
    unit autoD9358BF2_var;
    unitgroup auto3519A158_g;
    int auto3519A158_u;
    unit auto3519A158_var;
    unitgroup autoE4202146_g;
    int autoE4202146_u;
    unit autoE4202146_var;
    unitgroup auto595A74EF_g;
    int auto595A74EF_u;
    unit auto595A74EF_var;
    unitgroup autoD895FCD0_g;
    int autoD895FCD0_u;
    unit autoD895FCD0_var;
    unitgroup autoBD507741_g;
    int autoBD507741_u;
    unit autoBD507741_var;
    unitgroup auto1544B792_g;
    int auto1544B792_u;
    unit auto1544B792_var;
    unitgroup auto7B0D3C36_g;
    int auto7B0D3C36_u;
    unit auto7B0D3C36_var;

    // Actions
    if (!runActions) {
        return true;
    }

    SoundSetReverbForPlayers(PlayerGroupAll(), "Auditorium", 0.0, false, false);
    auto1969715A_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1969715A_u = UnitGroupCount(auto1969715A_g, c_unitCountAll);
    for (;; auto1969715A_u -= 1) {
        auto1969715A_var = UnitGroupUnitFromEnd(auto1969715A_g, auto1969715A_u);
        if (auto1969715A_var == null) { break; }
        UnitSetPosition(auto1969715A_var, RegionRandomPoint(RegionFromId(41)), false);
        UnitSetOwner(auto1969715A_var, 14, true);
    }
    auto1FD4C75A_g = UnitGroup(null, c_playerAny, RegionFromId(29), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1FD4C75A_u = UnitGroupCount(auto1FD4C75A_g, c_unitCountAll);
    for (;; auto1FD4C75A_u -= 1) {
        auto1FD4C75A_var = UnitGroupUnitFromEnd(auto1FD4C75A_g, auto1FD4C75A_u);
        if (auto1FD4C75A_var == null) { break; }
        UnitRemove(auto1FD4C75A_var);
    }
    autoD9358BF2_g = UnitGroup("SpawningPool", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD9358BF2_u = UnitGroupCount(autoD9358BF2_g, c_unitCountAll);
    for (;; autoD9358BF2_u -= 1) {
        autoD9358BF2_var = UnitGroupUnitFromEnd(autoD9358BF2_g, autoD9358BF2_u);
        if (autoD9358BF2_var == null) { break; }
        UnitRemove(autoD9358BF2_var);
    }
    auto3519A158_g = UnitGroup("HydraliskDen", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3519A158_u = UnitGroupCount(auto3519A158_g, c_unitCountAll);
    for (;; auto3519A158_u -= 1) {
        auto3519A158_var = UnitGroupUnitFromEnd(auto3519A158_g, auto3519A158_u);
        if (auto3519A158_var == null) { break; }
        UnitRemove(auto3519A158_var);
    }
    autoE4202146_g = UnitGroup("EvolutionChamber", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE4202146_u = UnitGroupCount(autoE4202146_g, c_unitCountAll);
    for (;; autoE4202146_u -= 1) {
        autoE4202146_var = UnitGroupUnitFromEnd(autoE4202146_g, autoE4202146_u);
        if (autoE4202146_var == null) { break; }
        UnitRemove(autoE4202146_var);
    }
    auto595A74EF_g = UnitGroup("Lair", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto595A74EF_u = UnitGroupCount(auto595A74EF_g, c_unitCountAll);
    for (;; auto595A74EF_u -= 1) {
        auto595A74EF_var = UnitGroupUnitFromEnd(auto595A74EF_g, auto595A74EF_u);
        if (auto595A74EF_var == null) { break; }
        UnitRemove(auto595A74EF_var);
    }
    autoD895FCD0_g = UnitGroup("Hive", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD895FCD0_u = UnitGroupCount(autoD895FCD0_g, c_unitCountAll);
    for (;; autoD895FCD0_u -= 1) {
        autoD895FCD0_var = UnitGroupUnitFromEnd(autoD895FCD0_g, autoD895FCD0_u);
        if (autoD895FCD0_var == null) { break; }
        UnitRemove(autoD895FCD0_var);
    }
    autoBD507741_g = UnitGroup("RoachWarren", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBD507741_u = UnitGroupCount(autoBD507741_g, c_unitCountAll);
    for (;; autoBD507741_u -= 1) {
        autoBD507741_var = UnitGroupUnitFromEnd(autoBD507741_g, autoBD507741_u);
        if (autoBD507741_var == null) { break; }
        UnitRemove(autoBD507741_var);
    }
    auto1544B792_g = UnitGroup("UltraliskCavern", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1544B792_u = UnitGroupCount(auto1544B792_g, c_unitCountAll);
    for (;; auto1544B792_u -= 1) {
        auto1544B792_var = UnitGroupUnitFromEnd(auto1544B792_g, auto1544B792_u);
        if (auto1544B792_var == null) { break; }
        UnitRemove(auto1544B792_var);
    }
    PlayerModifyPropertyInt(1, c_playerPropTerrazine, c_playerPropOperAdd, 200);
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/DBDCE8A6"), UnitGetPosition(UnitFromId(1058659169)));
    gv_colonyShipArea2ReticleAlarm = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea2TextTagAlarm = TextTagLastCreated();
    RegionPlayableMapSet(RegionFromId(40));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    SoundPlayForPlayer(SoundLink("M9ColonyShipBreakin2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(3.0, c_timeGame);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1187289063), 0.0, -1, 10.0, true);
    TriggerExecute(gt_ColonyShipArea2Alarm, true, false);
    auto7B0D3C36_g = UnitGroup(null, gv_p06_ZERGNEUTRAL_NEUTRAL, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7B0D3C36_u = UnitGroupCount(auto7B0D3C36_g, c_unitCountAll);
    for (;; auto7B0D3C36_u -= 1) {
        auto7B0D3C36_var = UnitGroupUnitFromEnd(auto7B0D3C36_g, auto7B0D3C36_u);
        if (auto7B0D3C36_var == null) { break; }
        UnitSetOwner(auto7B0D3C36_var, gv_pLAYER_01_USER, true);
    }
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerEnable(gt_DefeatAllUnitsKilledOnShips, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterRight), "", "Talk", SoundLink("M9ColonyShip2Announcement1", -1), StringExternal("Param/Value/0438E9E0"), StringExternal("Param/Value/5A86AA54"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    ObjectiveCreate(StringExternal("Param/Value/432B0EFF"), StringExternal("Param/Value/C284BAA4"), c_objectiveStateActive, true);
    gv_colonyShipArea2Objective = ObjectiveLastCreated();
    ObjectiveShow(gv_colonyShipArea2Objective, PlayerGroupAll(), true);
    TriggerExecute(gt_TipSleepersHarvested, true, false);
    TriggerExecute(gt_TipNestAttacked, true, false);
    TimerStart(gv_colonyShipArea2Timer, lib1926661B_gf_DifficultyValueInteger(1220, 920), false, c_timeGame);
    gv_colonyShipArea2Timer = TimerLastStarted();
    lib1926661B_gf_CreateTimerWindowLotC(TimerLastStarted(), StringExternal("Param/Value/D5B22229"), true, false, 1);
    gv_colonyShipArea2Active = true;
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/1344EB63"), UnitGetPosition(UnitFromId(1790220008)));
    gv_colonyShipArea2Reticle1 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea2TextTag1 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/246852FD"), UnitGetPosition(UnitFromId(1989764475)));
    gv_colonyShipArea2Reticle2 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea2TextTag2 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/37600A9D"), UnitGetPosition(UnitFromId(932958231)));
    gv_colonyShipArea2Reticle3 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea2TextTag3 = TextTagLastCreated();
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/793BF04A"), UnitGetPosition(UnitFromId(1460725881)));
    gv_colonyShipArea2Reticle4 = libNtve_gf_ActorLastCreated();
    gv_colonyShipArea2TextTag4 = TextTagLastCreated();
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2Begins_Init () {
    gt_ColonyShipArea2Begins = TriggerCreate("gt_ColonyShipArea2Begins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Alarm
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2Alarm_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto611EAABB_n = 10;
    int auto611EAABB_i;

    // Actions
    if (!runActions) {
        return true;
    }

    for (auto611EAABB_i = 1; auto611EAABB_i <= auto611EAABB_n; auto611EAABB_i += 1) {
        SoundPlayForPlayer(SoundLink("M9ColonyShipAlarm2", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        DataTableSetSound(true, "shipalarm2", SoundLastPlayed());
        Wait(131.75, c_timeReal);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2Alarm_Init () {
    gt_ColonyShipArea2Alarm = TriggerCreate("gt_ColonyShipArea2Alarm_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Alarm Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2AlarmDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerStop(gt_ColonyShipArea2Alarm);
    TriggerEnable(gt_ColonyShipArea2Alarm, false);
    SoundStop(DataTableGetSound(true, "shipalarm2"), true);
    libNtve_gf_KillModel(gv_colonyShipArea2ReticleAlarm);
    TextTagDestroy(gv_colonyShipArea2TextTagAlarm);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2AlarmDestroyed_Init () {
    gt_ColonyShipArea2AlarmDestroyed = TriggerCreate("gt_ColonyShipArea2AlarmDestroyed_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea2AlarmDestroyed, UnitRefFromUnit(UnitFromId(1058659169)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Area 2 Completion
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipArea2Completion_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto3D9E07AA_g;
    int auto3D9E07AA_u;
    unit auto3D9E07AA_var;
    unitgroup auto66C95F3D_g;
    int auto66C95F3D_u;
    unit auto66C95F3D_var;
    unitgroup auto39B09B80_g;
    int auto39B09B80_u;
    unit auto39B09B80_var;
    unitgroup autoF4E2A2E1_g;
    int autoF4E2A2E1_u;
    unit autoF4E2A2E1_var;
    unitgroup auto66595C87_g;
    int auto66595C87_u;
    unit auto66595C87_var;
    unitgroup auto5DBCBE91_g;
    int auto5DBCBE91_u;
    unit auto5DBCBE91_var;
    unitgroup autoE6735520_g;
    int autoE6735520_u;
    unit autoE6735520_var;
    unitgroup autoD3658271_g;
    int autoD3658271_u;
    unit autoD3658271_var;
    unitgroup auto7C5A7083_g;
    int auto7C5A7083_u;
    unit auto7C5A7083_var;
    unitgroup auto6DF6B704_g;
    int auto6DF6B704_u;
    unit auto6DF6B704_var;
    unitgroup auto003CFF83_g;
    int auto003CFF83_u;
    unit auto003CFF83_var;

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitCount(null, gv_p03_HUMANSENEMY, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((gv_colonyShipDeaths < 1)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M09-Normal", 1);
    }

    gv_colonyShipArea2Active = false;
    ObjectiveSetState(gv_colonyShipArea2Objective, c_objectiveStateCompleted);
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/F7237534"));
    libNtve_gf_StopTimer(gv_colonyShipArea2Timer);
    lib1926661B_gf_ShowHideTimerWindowLotC(false, 1);
    Wait(2.0, c_timeGame);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    auto3D9E07AA_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3D9E07AA_u = UnitGroupCount(auto3D9E07AA_g, c_unitCountAll);
    for (;; auto3D9E07AA_u -= 1) {
        auto3D9E07AA_var = UnitGroupUnitFromEnd(auto3D9E07AA_g, auto3D9E07AA_u);
        if (auto3D9E07AA_var == null) { break; }
        UnitSetPosition(auto3D9E07AA_var, RegionRandomPoint(RegionFromId(41)), false);
        UnitSetOwner(auto3D9E07AA_var, 14, true);
    }
    auto66C95F3D_g = UnitGroup(null, c_playerAny, RegionFromId(40), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto66C95F3D_u = UnitGroupCount(auto66C95F3D_g, c_unitCountAll);
    for (;; auto66C95F3D_u -= 1) {
        auto66C95F3D_var = UnitGroupUnitFromEnd(auto66C95F3D_g, auto66C95F3D_u);
        if (auto66C95F3D_var == null) { break; }
        UnitRemove(auto66C95F3D_var);
    }
    SoundStop(DataTableGetSound(true, "shipalarm1"), true);
    SoundStop(DataTableGetSound(true, "shipalarm2"), true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryAmbience, true, true);
    auto39B09B80_g = UnitGroup("Hatchery", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto39B09B80_u = UnitGroupCount(auto39B09B80_g, c_unitCountAll);
    for (;; auto39B09B80_u -= 1) {
        auto39B09B80_var = UnitGroupUnitFromEnd(auto39B09B80_g, auto39B09B80_u);
        if (auto39B09B80_var == null) { break; }
        UnitRemove(auto39B09B80_var);
    }
    autoF4E2A2E1_g = UnitGroup("Lair", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoF4E2A2E1_u = UnitGroupCount(autoF4E2A2E1_g, c_unitCountAll);
    for (;; autoF4E2A2E1_u -= 1) {
        autoF4E2A2E1_var = UnitGroupUnitFromEnd(autoF4E2A2E1_g, autoF4E2A2E1_u);
        if (autoF4E2A2E1_var == null) { break; }
        UnitRemove(autoF4E2A2E1_var);
    }
    auto66595C87_g = UnitGroup("Hive", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto66595C87_u = UnitGroupCount(auto66595C87_g, c_unitCountAll);
    for (;; auto66595C87_u -= 1) {
        auto66595C87_var = UnitGroupUnitFromEnd(auto66595C87_g, auto66595C87_u);
        if (auto66595C87_var == null) { break; }
        UnitRemove(auto66595C87_var);
    }
    auto5DBCBE91_g = UnitGroup("HydraliskDen", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5DBCBE91_u = UnitGroupCount(auto5DBCBE91_g, c_unitCountAll);
    for (;; auto5DBCBE91_u -= 1) {
        auto5DBCBE91_var = UnitGroupUnitFromEnd(auto5DBCBE91_g, auto5DBCBE91_u);
        if (auto5DBCBE91_var == null) { break; }
        UnitRemove(auto5DBCBE91_var);
    }
    autoE6735520_g = UnitGroup("SpawningPool", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoE6735520_u = UnitGroupCount(autoE6735520_g, c_unitCountAll);
    for (;; autoE6735520_u -= 1) {
        autoE6735520_var = UnitGroupUnitFromEnd(autoE6735520_g, autoE6735520_u);
        if (autoE6735520_var == null) { break; }
        UnitRemove(autoE6735520_var);
    }
    autoD3658271_g = UnitGroup("SpineCrawler", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD3658271_u = UnitGroupCount(autoD3658271_g, c_unitCountAll);
    for (;; autoD3658271_u -= 1) {
        autoD3658271_var = UnitGroupUnitFromEnd(autoD3658271_g, autoD3658271_u);
        if (autoD3658271_var == null) { break; }
        UnitRemove(autoD3658271_var);
    }
    auto7C5A7083_g = UnitGroup("SporeCrawler", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto7C5A7083_u = UnitGroupCount(auto7C5A7083_g, c_unitCountAll);
    for (;; auto7C5A7083_u -= 1) {
        auto7C5A7083_var = UnitGroupUnitFromEnd(auto7C5A7083_g, auto7C5A7083_u);
        if (auto7C5A7083_var == null) { break; }
        UnitRemove(auto7C5A7083_var);
    }
    auto6DF6B704_g = UnitGroup("RoachWarren", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6DF6B704_u = UnitGroupCount(auto6DF6B704_g, c_unitCountAll);
    for (;; auto6DF6B704_u -= 1) {
        auto6DF6B704_var = UnitGroupUnitFromEnd(auto6DF6B704_g, auto6DF6B704_u);
        if (auto6DF6B704_var == null) { break; }
        UnitRemove(auto6DF6B704_var);
    }
    auto003CFF83_g = UnitGroup(null, 14, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto003CFF83_u = UnitGroupCount(auto003CFF83_g, c_unitCountAll);
    for (;; auto003CFF83_u -= 1) {
        auto003CFF83_var = UnitGroupUnitFromEnd(auto003CFF83_g, auto003CFF83_u);
        if (auto003CFF83_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto003CFF83_var, true);
        UnitSetOwner(auto003CFF83_var, gv_pLAYER_01_USER, true);
    }
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Mutalisk", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Ultralisk", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Overlord", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "Spire", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "GreaterSpire", true);
    TechTreeUnitAllow(gv_pLAYER_01_USER, "SporeCrawler", true);
    TriggerEnable(gt_ColonyShipAreaLighting, false);
    GameSetLighting("SnowRefinery", 0.0);
    TriggerStop(gt_ColonyShipAreaLighting);
    TriggerStop(gt_ColonyShipArea2Alarm);
    TriggerEnable(gt_ColonyShipArea2Alarm, false);
    TriggerEnable(gt_ColonyShipAreaLighting, false);
    TriggerEnable(gt_DefeatAllUnitsKilledOnShips, false);
    TriggerExecute(gt_SiegeAreaBegins, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipArea2Completion_Init () {
    gt_ColonyShipArea2Completion = TriggerCreate("gt_ColonyShipArea2Completion_Func");
    TriggerAddEventUnitDied(gt_ColonyShipArea2Completion, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Begins
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaBegins_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7126EC70_g;
    int auto7126EC70_u;
    unit auto7126EC70_var;
    unitgroup autoB1BA08A2_g;
    int autoB1BA08A2_u;
    unit autoB1BA08A2_var;

    // Actions
    if (!runActions) {
        return true;
    }

    CreepModify(UnitGetPosition(UnitFromId(64109231)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(1836413014)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(1142546735)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(102454708)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(1796104150)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(685380917)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(204853879)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(1194294537)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(2059749897)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(771767343)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(910452814)), 11.0, true, false);
    CreepModify(UnitGetPosition(UnitFromId(120)), 11.0, true, false);
    auto7126EC70_g = gv_stage1PausedUnits;
    auto7126EC70_u = UnitGroupCount(auto7126EC70_g, c_unitCountAll);
    for (;; auto7126EC70_u -= 1) {
        auto7126EC70_var = UnitGroupUnitFromEnd(auto7126EC70_g, auto7126EC70_u);
        if (auto7126EC70_var == null) { break; }
        libNtve_gf_PauseUnit(auto7126EC70_var, false);
        libNtve_gf_ShowHideUnit(auto7126EC70_var, true);
    }
    libNtve_gf_ShowHideUnit(UnitFromId(554012155), true);
    PlayerModifyPropertyInt(1, c_playerPropTerrazine, c_playerPropOperAdd, 200);
    RegionPlayableMapSet(RegionFromId(1));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, false, false);
    SoundtrackPlay(PlayerGroupAll(), c_soundtrackCategoryMusic, "M9SiegeAreaMusic", c_soundtrackCueAny, c_soundtrackIndexAny, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(668668894), 0.0, -1, 10.0, true);
    ObjectiveDestroy(gv_colonyShipArea2Objective);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    autoB1BA08A2_g = UnitGroup("MoebiusLabDestructibleDoor", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB1BA08A2_u = UnitGroupCount(autoB1BA08A2_g, c_unitCountAll);
    for (;; autoB1BA08A2_u -= 1) {
        autoB1BA08A2_var = UnitGroupUnitFromEnd(autoB1BA08A2_g, autoB1BA08A2_u);
        if (autoB1BA08A2_var == null) { break; }
        libNtve_gf_ChangeUnitDamage(autoB1BA08A2_var, libNtve_ge_UnitDamageTakenDealt_Damage_Take, libNtve_ge_UnitDamageChangeOption_Mega2);
    }
    ObjectiveCreate(StringExternal("Param/Value/C5BE0751"), StringExternal("Param/Value/A079419B"), c_objectiveStateActive, true);
    gv_reachCityObjective = ObjectiveLastCreated();
    ObjectiveShow(gv_reachCityObjective, PlayerGroupAll(), true);
    lib1926661B_gf_CreateObjectivePing(true, PointFromId(2120979150), StringExternal("Param/Value/23AB5CFC"));
    lib1926661B_gf_CreateReticleEffectAndTextTagAtPoint(lib1926661B_ge_CampaginReticleType_ZergMainObjective, lib1926661B_ge_CampaginReticleSize_Large, StringExternal("Param/Value/54100C41"), libNtve_gf_PointFacingAngle(PointFromId(2120979150), 270.0));
    gv_siegeAreaReticle = libNtve_gf_ActorLastCreated();
    gv_siegeAreaTextTag = TextTagLastCreated();
    TriggerEnable(gt_DefeatAllUnitsKilled, true);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9Slohr10", -1), StringExternal("Param/Value/D27F259A"), StringExternal("Param/Value/6E606297"), 0.5, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    Wait(2.0, c_timeGame);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL14", -1), StringExternal("Param/Value/A8E67928"), StringExternal("Param/Value/79FCA5ED"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL15", -1), StringExternal("Param/Value/FDFE8C64"), StringExternal("Param/Value/FF73B74D"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9UPL16", -1), StringExternal("Param/Value/F2C53B0A"), StringExternal("Param/Value/1D144E75"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    lib1926661B_gf_FlashCheckpointReminder();
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaBegins_Init () {
    gt_SiegeAreaBegins = TriggerCreate("gt_SiegeAreaBegins_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Reticle Destroyed
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaReticleDestroyed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((UnitCount(null, gv_p03_HUMANSENEMY, RegionFromId(52), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_KillModel(gv_siegeAreaReticle);
    TextTagDestroy(gv_siegeAreaTextTag);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaReticleDestroyed_Init () {
    gt_SiegeAreaReticleDestroyed = TriggerCreate("gt_SiegeAreaReticleDestroyed_Func");
    TriggerAddEventUnitDied(gt_SiegeAreaReticleDestroyed, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Siege Area Complete
//--------------------------------------------------------------------------------------------------
bool gt_SiegeAreaComplete_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }

        if (!((UnitGetOwner(EventUnit()) == gv_pLAYER_01_USER))) {
            return false;
        }

        if (!((UnitCount(null, gv_p03_HUMANSENEMY, RegionFromId(52), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0) < 1))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((GameGetMissionTime() <= 2100.0) && (lib1926661B_gf_DifficultyValueBoolean(false, true) == true)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M09-Brutal", 1);
    }

    if ((gv_startingAreaPlagueSetting == false) && (lib1926661B_gf_DifficultyValueBoolean(false, true) == true)) {
        libAE8FC9D3_gf_AwardAchievement("EP01M09-Hard", 1);
    }

    UnitKill(UnitFromId(554012155));
    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    ObjectiveSetState(gv_reachCityObjective, c_objectiveStateCompleted);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Speech, PlayerGroupAll(), 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_CenterLeft), "", "Talk", SoundLink("M9Slohr11", -1), StringExternal("Param/Value/49773C4D"), StringExternal("Param/Value/0E56BC1D"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    libNtve_gf_SetAllSoundChannelVolumes(libNtve_ge_VolumeChannelMode_Game, PlayerGroupAll(), 0.0);
    TriggerExecute(gt_VictorySiegeCompleted, true, false);
    TriggerEnable(TriggerGetCurrent(), false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_SiegeAreaComplete_Init () {
    gt_SiegeAreaComplete = TriggerCreate("gt_SiegeAreaComplete_Func");
    TriggerAddEventUnitRegion(gt_SiegeAreaComplete, null, RegionFromId(77), true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Setup
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_pickedUnit;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_inCinematic = true;
    CinematicFade(false, 0.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, c_transitionDurationDefault);
    VisEnable(c_visTypeMask, false);
    VisEnable(c_visTypeFog, false);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    CreepModify(UnitGetPosition(UnitFromId(64109231)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(1836413014)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(1142546735)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(102454708)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(1796104150)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(685380917)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(204853879)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(1194294537)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(2059749897)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(771767343)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(910452814)), 22.0, false, false);
    CreepModify(UnitGetPosition(UnitFromId(120)), 11.0, true, false);
    Wait(0.1, c_timeGame);
    UnitClearSelection(1);
    UnitClearSelection(2);
    PlayerSetState(1, c_playerStateXPGain, false);
    PlayerSetState(2, c_playerStateXPGain, false);
    TriggerExecute(gt_IntroCinematicCinematic, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicSetup_Init () {
    gt_IntroCinematicSetup = TriggerCreate("gt_IntroCinematicSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto71F452DE_g;
    int auto71F452DE_u;
    unit auto71F452DE_var;
    unitgroup auto9BE2AB53_g;
    int auto9BE2AB53_u;
    unit auto9BE2AB53_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_IntroCinematicCleanup, false, false);
    auto71F452DE_g = UnitGroup(null, c_playerAny, RegionFromId(71), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto71F452DE_u = UnitGroupCount(auto71F452DE_g, c_unitCountAll);
    for (;; auto71F452DE_u -= 1) {
        auto71F452DE_var = UnitGroupUnitFromEnd(auto71F452DE_g, auto71F452DE_u);
        if (auto71F452DE_var == null) { break; }
        UnitGroupAdd(gv_area1UnitGroup, auto71F452DE_var);
    }
    auto9BE2AB53_g = UnitGroup(null, c_playerAny, RegionFromId(72), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9BE2AB53_u = UnitGroupCount(auto9BE2AB53_g, c_unitCountAll);
    for (;; auto9BE2AB53_u -= 1) {
        auto9BE2AB53_var = UnitGroupUnitFromEnd(auto9BE2AB53_g, auto9BE2AB53_u);
        if (auto9BE2AB53_var == null) { break; }
        UnitGroupAdd(gv_area2UnitGroup, auto9BE2AB53_var);
    }
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1200334210), 0.0, -1, 10.0, true);
    Wait(2.0, c_timeReal);
    CinematicFade(true, 6.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundPlayForPlayer(SoundLink("M9IntroCinematicMusic", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "IntroMusic", SoundLastPlayed());
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr2", -1), StringExternal("Param/Value/F097758D"), StringExternal("Param/Value/5D31A797"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    TriggerExecute(gt_IntroCinematicNukes, true, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr2a", -1), StringExternal("Param/Value/9A61918A"), StringExternal("Param/Value/4B2FD691"), 1.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    CinematicFade(false, 1.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("Defiler_Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("DefilerMP_Ready", -1), StringExternal("Param/Value/5D2CC8F2"), StringExternal("Param/Value/F41E28CD"), 1.5, c_transmissionDurationAdd, true, c_maxPlayers, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr3", -1), StringExternal("Param/Value/5B48758B"), StringExternal("Param/Value/193C2237"), 1.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr3A", -1), StringExternal("Param/Value/759CFDCB"), StringExternal("Param/Value/E17255F6"), 1.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    TriggerExecute(gt_IntroCinematicCleanup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicCinematic_Init () {
    gt_IntroCinematicCinematic = TriggerCreate("gt_IntroCinematicCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Nukes
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicNukes_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoD09522BE_g;
    int autoD09522BE_u;
    unit autoD09522BE_var;
    unitgroup autoB74BF74D_g;
    int autoB74BF74D_u;
    unit autoB74BF74D_var;
    unitgroup auto5BF605B3_g;
    int auto5BF605B3_u;
    unit auto5BF605B3_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_IntroCinematicCleanup, false, false);
    UnitCreateEffectPoint(UnitFromId(315702036), "OdinNukeDetonate", PointFromId(107195242));
    Wait(1.5, c_timeReal);
    autoD09522BE_g = UnitGroup(null, c_playerAny, RegionFromId(4), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoD09522BE_u = UnitGroupCount(autoD09522BE_g, c_unitCountAll);
    for (;; autoD09522BE_u -= 1) {
        autoD09522BE_var = UnitGroupUnitFromEnd(autoD09522BE_g, autoD09522BE_u);
        if (autoD09522BE_var == null) { break; }
        UnitKill(autoD09522BE_var);
    }
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.15, 0.05, 100.0, 15.0);
    UnitCreateEffectPoint(UnitFromId(315702036), "OdinNukeDetonate", PointFromId(1562714267));
    Wait(1.5, c_timeReal);
    libNtve_gf_CreateActorAtPoint("HeroNukeExplodeModel", PointFromId(1562714267));
    autoB74BF74D_g = UnitGroup(null, c_playerAny, RegionFromId(5), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB74BF74D_u = UnitGroupCount(autoB74BF74D_g, c_unitCountAll);
    for (;; autoB74BF74D_u -= 1) {
        autoB74BF74D_var = UnitGroupUnitFromEnd(autoB74BF74D_g, autoB74BF74D_u);
        if (autoB74BF74D_var == null) { break; }
        UnitKill(autoB74BF74D_var);
    }
    UnitCreateEffectPoint(UnitFromId(315702036), "OdinNukeDetonate", PointFromId(375006267));
    Wait(1.5, c_timeReal);
    auto5BF605B3_g = UnitGroup(null, c_playerAny, RegionFromId(2), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5BF605B3_u = UnitGroupCount(auto5BF605B3_g, c_unitCountAll);
    for (;; auto5BF605B3_u -= 1) {
        auto5BF605B3_var = UnitGroupUnitFromEnd(auto5BF605B3_g, auto5BF605B3_u);
        if (auto5BF605B3_var == null) { break; }
        UnitKill(auto5BF605B3_var);
    }
    Wait(1.0, c_timeReal);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(100.00, 100.00, 100.00), 0.0, true);
    TriggerExecute(gt_IntroCinematicNukes2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicNukes_Init () {
    gt_IntroCinematicNukes = TriggerCreate("gt_IntroCinematicNukes_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Nukes 2
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicNukes2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto7AE57E93_g;
    int auto7AE57E93_u;
    unit auto7AE57E93_var;
    unitgroup auto00A01817_g;
    int auto00A01817_u;
    unit auto00A01817_var;
    unitgroup auto2C7146C0_g;
    int auto2C7146C0_u;
    unit auto2C7146C0_var;
    unitgroup auto5C0B1BF7_g;
    int auto5C0B1BF7_u;
    unit auto5C0B1BF7_var;
    unitgroup auto91E72505_g;
    int auto91E72505_u;
    unit auto91E72505_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_IntroCinematicCleanup, false, false);
    auto7AE57E93_g = gv_area1UnitGroup;
    auto7AE57E93_u = UnitGroupCount(auto7AE57E93_g, c_unitCountAll);
    for (;; auto7AE57E93_u -= 1) {
        auto7AE57E93_var = UnitGroupUnitFromEnd(auto7AE57E93_g, auto7AE57E93_u);
        if (auto7AE57E93_var == null) { break; }
        UnitRemove(auto7AE57E93_var);
    }
    CameraShakeStop(gv_pLAYER_01_USER);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(898506864), 0.0, -1, 10.0, true);
    auto00A01817_g = UnitGroup(null, c_playerAny, RegionFromId(13), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto00A01817_u = UnitGroupCount(auto00A01817_g, c_unitCountAll);
    for (;; auto00A01817_u -= 1) {
        auto00A01817_var = UnitGroupUnitFromEnd(auto00A01817_g, auto00A01817_u);
        if (auto00A01817_var == null) { break; }
        UnitBehaviorAdd(auto00A01817_var, "CritterWander", auto00A01817_var, 1);
    }
    CinematicFade(true, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    UnitCreateEffectPoint(UnitFromId(315702036), "OdinNukeDetonate", PointFromId(1171368306));
    Wait(1.5, c_timeReal);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.15, 0.05, 100.0, 15.0);
    auto2C7146C0_g = UnitGroup(null, c_playerAny, RegionFromId(13), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto2C7146C0_u = UnitGroupCount(auto2C7146C0_g, c_unitCountAll);
    for (;; auto2C7146C0_u -= 1) {
        auto2C7146C0_var = UnitGroupUnitFromEnd(auto2C7146C0_g, auto2C7146C0_u);
        if (auto2C7146C0_var == null) { break; }
        UnitKill(auto2C7146C0_var);
    }
    UnitCreateEffectPoint(UnitFromId(315702036), "OdinNukeDetonate", PointFromId(531208984));
    auto5C0B1BF7_g = UnitGroup(null, c_playerAny, RegionFromId(5), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto5C0B1BF7_u = UnitGroupCount(auto5C0B1BF7_g, c_unitCountAll);
    for (;; auto5C0B1BF7_u -= 1) {
        auto5C0B1BF7_var = UnitGroupUnitFromEnd(auto5C0B1BF7_g, auto5C0B1BF7_u);
        if (auto5C0B1BF7_var == null) { break; }
        UnitKill(auto5C0B1BF7_var);
    }
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(100.00, 100.00, 100.00), 0.0, true);
    auto91E72505_g = gv_area2UnitGroup;
    auto91E72505_u = UnitGroupCount(auto91E72505_g, c_unitCountAll);
    for (;; auto91E72505_u -= 1) {
        auto91E72505_var = UnitGroupUnitFromEnd(auto91E72505_g, auto91E72505_u);
        if (auto91E72505_var == null) { break; }
        UnitRemove(auto91E72505_var);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicNukes2_Init () {
    gt_IntroCinematicNukes2 = TriggerCreate("gt_IntroCinematicNukes2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Intro Cinematic - Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_IntroCinematicCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerSetState(1, c_playerStateXPGain, true);
    PlayerSetState(2, c_playerStateXPGain, true);
    CinematicFade(false, 1.5, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraShakeStop(gv_pLAYER_01_USER);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.5);
    libNtve_gf_GlobalCinematicSetting(false);
    SoundStop(DataTableGetSound(true, "IntroMusic"), true);
    gv_inCinematic = false;
    TriggerExecute(gt_StartingAreaBegins, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_IntroCinematicCleanup_Init () {
    gt_IntroCinematicCleanup = TriggerCreate("gt_IntroCinematicCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Cinematic Setup
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipCinematicSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_pickedUnit;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    SoundtrackPause(PlayerGroupAll(), c_soundtrackCategoryMusic, true, true);
    gv_inCinematic = true;
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 2.0);
    Wait(2.0, c_timeReal);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    VisEnable(c_visTypeMask, false);
    VisEnable(c_visTypeFog, false);
    Wait(0.1, c_timeGame);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitClearSelection(gv_p02_HUMANSNEUTRAL);
    PlayerSetState(1, c_playerStateXPGain, false);
    PlayerSetState(2, c_playerStateXPGain, false);
    TriggerExecute(gt_ColonyShipCinematicUnits, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipCinematicSetup_Init () {
    gt_ColonyShipCinematicSetup = TriggerCreate("gt_ColonyShipCinematicSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Cinematic Units
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipCinematicUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto4FF844F4_g;
    int auto4FF844F4_u;
    unit auto4FF844F4_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(UnitFromId(2137339148), true);
    UnitSetPropertyFixed(UnitFromId(2137339148), c_unitPropHeight, 18.0);
    UnitSetPropertyFixed(UnitFromId(2137339148), c_unitPropBaseMovementSpeed, 0.5);
    UnitGroupAdd(gv_colonyShipGroup, UnitFromId(2137339148));
    auto4FF844F4_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto4FF844F4_u = UnitGroupCount(auto4FF844F4_g, c_unitCountAll);
    for (;; auto4FF844F4_u -= 1) {
        auto4FF844F4_var = UnitGroupUnitFromEnd(auto4FF844F4_g, auto4FF844F4_u);
        if (auto4FF844F4_var == null) { break; }
        UnitBehaviorAdd(auto4FF844F4_var, "CritterWander", auto4FF844F4_var, 1);
    }
    TriggerExecute(gt_ColonyShipCinematic, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipCinematicUnits_Init () {
    gt_ColonyShipCinematicUnits = TriggerCreate("gt_ColonyShipCinematicUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Cinematic
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipCinematic_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_ColonyShipCinematicCleanup, false, false);
    UnitIssueOrder(UnitFromId(2137339148), OrderTargetingPoint(AbilityCommand("move", 0), PointFromId(1310094921)), c_orderQueueReplace);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(1521868138), 0.0, -1, 10.0, true);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_colonyShipGroup, true, false);
    Wait(2.5, c_timeReal);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    SoundPlayForPlayer(SoundLink("M9IntroCinematicMusic", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "IntroMusic", SoundLastPlayed());
    Wait(1.5, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("Defiler_Portrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("DefilerMP_Ready", -1), StringExternal("Param/Value/34686ECE"), StringExternal("Param/Value/31F4223A"), 1.5, c_transmissionDurationAdd, true, c_maxPlayers, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr5", -1), StringExternal("Param/Value/C7330438"), StringExternal("Param/Value/BC66DD37"), 0.0, c_transmissionDurationAdd, true, c_maxPlayers, false);
    Wait(1.0, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr6", -1), StringExternal("Param/Value/B96116F0"), StringExternal("Param/Value/B29CFEC7"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("LotC_CerebratePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9Slohr7", -1), StringExternal("Param/Value/6A95762D"), StringExternal("Param/Value/A50F02C1"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    TriggerExecute(gt_ColonyShipCinematicCleanup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipCinematic_Init () {
    gt_ColonyShipCinematic = TriggerCreate("gt_ColonyShipCinematic_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Colony Ship Cinematic Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_ColonyShipCinematicCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    unitgroup auto1948935C_g;
    int auto1948935C_u;
    unit auto1948935C_var;
    unitgroup autoA1F773F7_g;
    int autoA1F773F7_u;
    unit autoA1F773F7_var;
    unitgroup auto0BD36F56_g;
    int auto0BD36F56_u;
    unit auto0BD36F56_var;
    unitgroup auto76093EB9_g;
    int auto76093EB9_u;
    unit auto76093EB9_var;
    unitgroup auto660BA47B_g;
    int auto660BA47B_u;
    unit auto660BA47B_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((TriggerGetExecCount(TriggerGetCurrent()) == 0))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerSetState(1, c_playerStateXPGain, true);
    PlayerSetState(2, c_playerStateXPGain, true);
    CameraFollowUnitGroup(gv_pLAYER_01_USER, gv_colonyShipGroup, false, false);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    auto1948935C_g = UnitGroup(null, c_playerAny, RegionFromId(80), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto1948935C_u = UnitGroupCount(auto1948935C_g, c_unitCountAll);
    for (;; auto1948935C_u -= 1) {
        auto1948935C_var = UnitGroupUnitFromEnd(auto1948935C_g, auto1948935C_u);
        if (auto1948935C_var == null) { break; }
        UnitGroupAdd(gv_stage1PausedUnits, auto1948935C_var);
        libNtve_gf_PauseUnit(auto1948935C_var, true);
        libNtve_gf_ShowHideUnit(auto1948935C_var, false);
    }
    autoA1F773F7_g = UnitGroup(null, gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterStructure) | (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoA1F773F7_u = UnitGroupCount(autoA1F773F7_g, c_unitCountAll);
    for (;; autoA1F773F7_u -= 1) {
        autoA1F773F7_var = UnitGroupUnitFromEnd(autoA1F773F7_g, autoA1F773F7_u);
        if (autoA1F773F7_var == null) { break; }
        UnitBehaviorRemove(autoA1F773F7_var, "CritterWander", 1);
        UnitSetOwner(autoA1F773F7_var, 14, true);
    }
    auto0BD36F56_g = UnitGroup("Hatchery", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto0BD36F56_u = UnitGroupCount(auto0BD36F56_g, c_unitCountAll);
    for (;; auto0BD36F56_u -= 1) {
        auto0BD36F56_var = UnitGroupUnitFromEnd(auto0BD36F56_g, auto0BD36F56_u);
        if (auto0BD36F56_var == null) { break; }
        UnitRemove(auto0BD36F56_var);
    }
    auto76093EB9_g = UnitGroup("Lair", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto76093EB9_u = UnitGroupCount(auto76093EB9_g, c_unitCountAll);
    for (;; auto76093EB9_u -= 1) {
        auto76093EB9_var = UnitGroupUnitFromEnd(auto76093EB9_g, auto76093EB9_u);
        if (auto76093EB9_var == null) { break; }
        UnitRemove(auto76093EB9_var);
    }
    auto660BA47B_g = UnitGroup("Hive", gv_pLAYER_01_USER, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto660BA47B_u = UnitGroupCount(auto660BA47B_g, c_unitCountAll);
    for (;; auto660BA47B_u -= 1) {
        auto660BA47B_var = UnitGroupUnitFromEnd(auto660BA47B_g, auto660BA47B_u);
        if (auto660BA47B_var == null) { break; }
        UnitRemove(auto660BA47B_var);
    }
    SoundStop(DataTableGetSound(true, "IntroMusic"), true);
    UnitRemove(UnitFromId(2137339148));
    gv_inCinematic = false;
    TriggerExecute(gt_ColonyShipArea1Begins, true, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_ColonyShipCinematicCleanup_Init () {
    gt_ColonyShipCinematicCleanup = TriggerCreate("gt_ColonyShipCinematicCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Victory Q
//--------------------------------------------------------------------------------------------------
bool gt_VictoryQ_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_pickedUnit;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerExecute(gt_EndingCinematicSetup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_VictoryQ_Init () {
    gt_VictoryQ = TriggerCreate("gt_VictoryQ_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic Setup
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematicSetup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unit lv_pickedUnit;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    gv_inCinematic = true;
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    UISetMode(PlayerGroupAll(), c_uiModeFullscreen, 2.0);
    Wait(2.0, c_timeReal);
    libNtve_gf_CinematicMode(true, PlayerGroupAll(), 0.0);
    libNtve_gf_GlobalCinematicSetting(true);
    VisEnable(c_visTypeMask, false);
    VisEnable(c_visTypeFog, false);
    Wait(0.1, c_timeGame);
    UnitClearSelection(gv_pLAYER_01_USER);
    UnitClearSelection(gv_p02_HUMANSNEUTRAL);
    PlayerSetState(1, c_playerStateXPGain, false);
    PlayerSetState(2, c_playerStateXPGain, false);
    TriggerExecute(gt_EndingCinematicUnits, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematicSetup_Init () {
    gt_EndingCinematicSetup = TriggerCreate("gt_EndingCinematicSetup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic Units
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematicUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto80875B14_g;
    int auto80875B14_u;
    unit auto80875B14_var;
    unitgroup auto50F50729_g;
    int auto50F50729_u;
    unit auto50F50729_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto80875B14_g = UnitGroup(null, c_playerAny, RegionFromId(1), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto80875B14_u = UnitGroupCount(auto80875B14_g, c_unitCountAll);
    for (;; auto80875B14_u -= 1) {
        auto80875B14_var = UnitGroupUnitFromEnd(auto80875B14_g, auto80875B14_u);
        if (auto80875B14_var == null) { break; }
        UnitRemove(auto80875B14_var);
    }
    auto50F50729_g = UnitGroup(null, 12, RegionFromId(53), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto50F50729_u = UnitGroupCount(auto50F50729_g, c_unitCountAll);
    for (;; auto50F50729_u -= 1) {
        auto50F50729_var = UnitGroupUnitFromEnd(auto50F50729_g, auto50F50729_u);
        if (auto50F50729_var == null) { break; }
        UnitSetOwner(auto50F50729_var, gv_pLAYER_01_USER, false);
        libNtve_gf_MakeUnitFacePoint(auto50F50729_var, libNtve_gf_PointFacingAngle(PointFromId(682871481), 270.0), 0.0);
        UnitSetState(auto50F50729_var, c_unitStateFidget, false);
        UnitSetPropertyFixed(auto50F50729_var, c_unitPropLifePercent, 35.0);
    }
    TriggerExecute(gt_EndingCinematic1, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematicUnits_Init () {
    gt_EndingCinematicUnits = TriggerCreate("gt_EndingCinematicUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic 1
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematic1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    const int auto7F95A925_n = 6;
    int auto7F95A925_i;
    unitgroup auto578A02D5_g;
    int auto578A02D5_u;
    unit auto578A02D5_var;
    unitgroup autoBD175DFC_g;
    int autoBD175DFC_u;
    unit autoBD175DFC_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_EndingCinematicCleanup, false, false);
    SoundPlayForPlayer(SoundLink("M9EndingCinematicAmbience", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    DataTableSetSound(true, "endingambience", SoundLastPlayed());
    Wait(3.0, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryMortarPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL23", -1), StringExternal("Param/Value/8958B9A2"), StringExternal("Param/Value/0856CC30"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    Wait(1.0, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomRight), "", "Talk", SoundLink("M9UPL24", -1), StringExternal("Param/Value/0FE412B2"), StringExternal("Param/Value/7D765889"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    RegionPlayableMapSet(RegionFromId(57));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(572584338), 0.0, -1, 10.0, true);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(670127791), 35.0, -1, 10.0, true);
    SoundPlayForPlayer(SoundLink("M9EndingCinematicMusic", -1), c_maxPlayers, PlayerGroupAll(), 130.0, 0.0);
    DataTableSetSound(true, "endingmusic", SoundLastPlayed());
    CinematicFade(true, 4.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.2, 0.05, 100.0, 1.0);
    SoundPlayForPlayer(SoundLink("M9GatePounding1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL25", -1), StringExternal("Param/Value/074200B5"), StringExternal("Param/Value/AEB59891"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.2, 0.05, 100.0, 1.0);
    SoundPlayForPlayer(SoundLink("M9GatePounding1", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(2.5, c_timeReal);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.2, 0.05, 100.0, 1.0);
    SoundPlayForPlayer(SoundLink("M9GatePounding2", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    Wait(3.0, c_timeReal);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.2, 0.05, 100.0, 2.5);
    SoundPlayForPlayer(SoundLink("M9GateDestruction", -1), c_maxPlayers, PlayerGroupAll(), 200.0, 0.0);
    for (auto7F95A925_i = 1; auto7F95A925_i <= auto7F95A925_n; auto7F95A925_i += 1) {
        libNtve_gf_CreateActorAtPoint("DefaultExplosionTerranLarge", RegionRandomPoint(RegionFromId(54)));
    }
    UnitRemove(UnitFromId(804526727));
    auto578A02D5_g = UnitGroup(null, 13, RegionFromId(55), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto578A02D5_u = UnitGroupCount(auto578A02D5_g, c_unitCountAll);
    for (;; auto578A02D5_u -= 1) {
        auto578A02D5_var = UnitGroupUnitFromEnd(auto578A02D5_g, auto578A02D5_u);
        if (auto578A02D5_var == null) { break; }
        UnitSetOwner(auto578A02D5_var, gv_p03_HUMANSENEMY, false);
        UnitIssueOrder(auto578A02D5_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(53))), c_orderQueueReplace);
        UnitIssueOrder(auto578A02D5_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(53))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto578A02D5_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(53))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto578A02D5_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(53))), c_orderQueueAddToEnd);
    }
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL26", -1), StringExternal("Param/Value/04374D7C"), StringExternal("Param/Value/7C46D334"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    Wait(6.0, c_timeReal);
    autoBD175DFC_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(56), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBD175DFC_u = UnitGroupCount(autoBD175DFC_g, c_unitCountAll);
    for (;; autoBD175DFC_u -= 1) {
        autoBD175DFC_var = UnitGroupUnitFromEnd(autoBD175DFC_g, autoBD175DFC_u);
        if (autoBD175DFC_var == null) { break; }
        UnitIssueOrder(autoBD175DFC_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(55))), c_orderQueueReplace);
        UnitIssueOrder(autoBD175DFC_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(55))), c_orderQueueAddToEnd);
    }
    Wait(11.0, c_timeReal);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(gt_EndingCinematic2, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematic1_Init () {
    gt_EndingCinematic1 = TriggerCreate("gt_EndingCinematic1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic 2
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematic2_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoBD7BEBC8_g;
    int autoBD7BEBC8_u;
    unit autoBD7BEBC8_var;
    unitgroup auto81B6D2E6_g;
    int auto81B6D2E6_u;
    unit auto81B6D2E6_var;
    unitgroup auto3E53BE62_g;
    int auto3E53BE62_u;
    unit auto3E53BE62_var;
    unitgroup auto9FB5F4A9_g;
    int auto9FB5F4A9_u;
    unit auto9FB5F4A9_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_EndingCinematicCleanup, false, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(155371053), 0.0, -1, 10.0, true);
    autoBD7BEBC8_g = UnitGroup(null, 12, RegionFromId(58), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBD7BEBC8_u = UnitGroupCount(autoBD7BEBC8_g, c_unitCountAll);
    for (;; autoBD7BEBC8_u -= 1) {
        autoBD7BEBC8_var = UnitGroupUnitFromEnd(autoBD7BEBC8_g, autoBD7BEBC8_u);
        if (autoBD7BEBC8_var == null) { break; }
        UnitSetOwner(autoBD7BEBC8_var, gv_pLAYER_01_USER, false);
        libNtve_gf_MakeUnitFacePoint(autoBD7BEBC8_var, libNtve_gf_PointFacingAngle(PointFromId(984087562), 270.0), 0.0);
        UnitSetState(autoBD7BEBC8_var, c_unitStateFidget, false);
        UnitIssueOrder(autoBD7BEBC8_var, Order(AbilityCommand("move", 2)), c_orderQueueReplace);
    }
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    auto81B6D2E6_g = UnitGroup(null, 13, RegionFromId(59), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto81B6D2E6_u = UnitGroupCount(auto81B6D2E6_g, c_unitCountAll);
    for (;; auto81B6D2E6_u -= 1) {
        auto81B6D2E6_var = UnitGroupUnitFromEnd(auto81B6D2E6_g, auto81B6D2E6_u);
        if (auto81B6D2E6_var == null) { break; }
        UnitSetOwner(auto81B6D2E6_var, gv_p03_HUMANSENEMY, false);
        UnitIssueOrder(auto81B6D2E6_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(62))), c_orderQueueReplace);
    }
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL27", -1), StringExternal("Param/Value/37D301AE"), StringExternal("Param/Value/4FEE74E3"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    Wait(1.0, c_timeReal);
    auto3E53BE62_g = UnitGroup(null, 13, RegionFromId(60), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto3E53BE62_u = UnitGroupCount(auto3E53BE62_g, c_unitCountAll);
    for (;; auto3E53BE62_u -= 1) {
        auto3E53BE62_var = UnitGroupUnitFromEnd(auto3E53BE62_g, auto3E53BE62_u);
        if (auto3E53BE62_var == null) { break; }
        UnitSetOwner(auto3E53BE62_var, gv_p03_HUMANSENEMY, false);
        UnitIssueOrder(auto3E53BE62_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(62))), c_orderQueueReplace);
        UnitIssueOrder(auto3E53BE62_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(61))), c_orderQueueAddToEnd);
    }
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryMortarPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomRight), "", "Talk", SoundLink("M9UPL28", -1), StringExternal("Param/Value/76697780"), StringExternal("Param/Value/E1BF0F05"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    Wait(4.5, c_timeReal);
    auto9FB5F4A9_g = UnitGroup(null, gv_pLAYER_01_USER, RegionFromId(62), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9FB5F4A9_u = UnitGroupCount(auto9FB5F4A9_g, c_unitCountAll);
    for (;; auto9FB5F4A9_u -= 1) {
        auto9FB5F4A9_var = UnitGroupUnitFromEnd(auto9FB5F4A9_g, auto9FB5F4A9_u);
        if (auto9FB5F4A9_var == null) { break; }
        UnitIssueOrder(auto9FB5F4A9_var, OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(61))), c_orderQueueReplace);
    }
    Wait(3.0, c_timeReal);
    CinematicFade(false, 3.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    TriggerExecute(gt_EndingCinematic3, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematic2_Init () {
    gt_EndingCinematic2 = TriggerCreate("gt_EndingCinematic2_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic 3
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematic3_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoDAB04B04_g;
    int autoDAB04B04_u;
    unit autoDAB04B04_var;
    const int auto93F61A4F_n = 200;
    int auto93F61A4F_i;
    unitgroup auto5D528D26_g;
    int auto5D528D26_u;
    unit auto5D528D26_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_EndingCinematicCleanup, false, false);
    RegionPlayableMapSet(RegionFromId(66));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(933155304), 0.0, -1, 10.0, true);
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    autoDAB04B04_g = UnitGroup(null, 12, RegionFromId(65), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoDAB04B04_u = UnitGroupCount(autoDAB04B04_g, c_unitCountAll);
    for (;; autoDAB04B04_u -= 1) {
        autoDAB04B04_var = UnitGroupUnitFromEnd(autoDAB04B04_g, autoDAB04B04_u);
        if (autoDAB04B04_var == null) { break; }
        UnitSetOwner(autoDAB04B04_var, gv_pLAYER_01_USER, false);
    }
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL32", -1), StringExternal("Param/Value/2A4D2F5B"), StringExternal("Param/Value/05F30F67"), 0.0, c_transmissionDurationSub, false, c_maxPlayers, false);
    for (auto93F61A4F_i = 1; auto93F61A4F_i <= auto93F61A4F_n; auto93F61A4F_i += 1) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "Overlord", c_unitCreateIgnorePlacement, gv_p03_HUMANSENEMY, RegionRandomPoint(RegionFromId(63)));
        UnitSetPropertyFixed(UnitLastCreated(), c_unitPropHeight, RandomInt(4, 14));
        UnitGroupAdd(gv_endingCinematicOverlordGroup, UnitLastCreated());
        UnitSetTeamColorIndex(UnitLastCreated(), 12);
        UnitIssueOrder(UnitLastCreated(), OrderTargetingPoint(AbilityCommand("move", 0), RegionRandomPoint(RegionFromId(64))), c_orderQueueReplace);
        Wait(0.05, c_timeReal);
    }
    Wait(6.0, c_timeReal);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    auto5D528D26_g = gv_endingCinematicOverlordGroup;
    auto5D528D26_u = UnitGroupCount(auto5D528D26_g, c_unitCountAll);
    for (;; auto5D528D26_u -= 1) {
        auto5D528D26_var = UnitGroupUnitFromEnd(auto5D528D26_g, auto5D528D26_u);
        if (auto5D528D26_var == null) { break; }
        UnitRemove(auto5D528D26_var);
    }
    TriggerExecute(gt_EndingCinematic4, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematic3_Init () {
    gt_EndingCinematic3 = TriggerCreate("gt_EndingCinematic3_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic 4
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematic4_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoFE3EFA48_g;
    int autoFE3EFA48_u;
    unit autoFE3EFA48_var;
    unitgroup auto37BD2DC7_g;
    int auto37BD2DC7_u;
    unit auto37BD2DC7_var;
    unitgroup auto76285377_g;
    int auto76285377_u;
    unit auto76285377_var;
    unitgroup auto9C7B01D0_g;
    int auto9C7B01D0_u;
    unit auto9C7B01D0_var;
    unitgroup auto6CC46046_g;
    int auto6CC46046_u;
    unit auto6CC46046_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_EndingCinematicCleanup, false, false);
    RegionPlayableMapSet(RegionFromId(57));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(439145417), 0.0, -1, 10.0, true);
    autoFE3EFA48_g = UnitGroup(null, 12, RegionFromId(68), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoFE3EFA48_u = UnitGroupCount(autoFE3EFA48_g, c_unitCountAll);
    for (;; autoFE3EFA48_u -= 1) {
        autoFE3EFA48_var = UnitGroupUnitFromEnd(autoFE3EFA48_g, autoFE3EFA48_u);
        if (autoFE3EFA48_var == null) { break; }
        UnitSetOwner(autoFE3EFA48_var, gv_pLAYER_01_USER, false);
        UnitSetState(autoFE3EFA48_var, c_unitStateFidget, false);
        libNtve_gf_MakeUnitFacePoint(autoFE3EFA48_var, libNtve_gf_PointFacingAngle(PointFromId(1525355420), 270.0), 0.0);
        UnitSetPropertyFixed(autoFE3EFA48_var, c_unitPropLifePercent, 35.0);
    }
    auto37BD2DC7_g = UnitGroup("DefenseWallNW", 12, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto37BD2DC7_u = UnitGroupCount(auto37BD2DC7_g, c_unitCountAll);
    for (;; auto37BD2DC7_u -= 1) {
        auto37BD2DC7_var = UnitGroupUnitFromEnd(auto37BD2DC7_g, auto37BD2DC7_u);
        if (auto37BD2DC7_var == null) { break; }
        UnitSetOwner(auto37BD2DC7_var, gv_pLAYER_01_USER, false);
    }
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    auto76285377_g = UnitGroup(null, 13, RegionFromId(67), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto76285377_u = UnitGroupCount(auto76285377_g, c_unitCountAll);
    for (;; auto76285377_u -= 1) {
        auto76285377_var = UnitGroupUnitFromEnd(auto76285377_g, auto76285377_u);
        if (auto76285377_var == null) { break; }
        UnitSetOwner(auto76285377_var, gv_p03_HUMANSENEMY, false);
        UnitIssueOrder(auto76285377_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(68))), c_orderQueueReplace);
        UnitIssueOrder(auto76285377_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(68))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto76285377_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(68))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto76285377_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(68))), c_orderQueueAddToEnd);
    }
    Wait(4.0, c_timeReal);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryHeavyPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL29", -1), StringExternal("Param/Value/203B414E"), StringExternal("Param/Value/3F8CA3C9"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    auto9C7B01D0_g = UnitGroup("MiningDrone", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto9C7B01D0_u = UnitGroupCount(auto9C7B01D0_g, c_unitCountAll);
    for (;; auto9C7B01D0_u -= 1) {
        auto9C7B01D0_var = UnitGroupUnitFromEnd(auto9C7B01D0_g, auto9C7B01D0_u);
        if (auto9C7B01D0_var == null) { break; }
        UnitIssueOrder(auto9C7B01D0_var, Order(AbilityCommand("MiningDroneSwitchMode", 0)), c_orderQueueReplace);
    }
    SoundPlayForPlayer(SoundLink("M9ReinforcementDoor1Dead", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    SoundPlayForPlayer(SoundLink("M9ReinforcementDoor2Dead", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    auto6CC46046_g = UnitGroup("DefenseWallNW", c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto6CC46046_u = UnitGroupCount(auto6CC46046_g, c_unitCountAll);
    for (;; auto6CC46046_u -= 1) {
        auto6CC46046_var = UnitGroupUnitFromEnd(auto6CC46046_g, auto6CC46046_u);
        if (auto6CC46046_var == null) { break; }
        UnitKill(auto6CC46046_var);
    }
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomRight), "", "Talk", SoundLink("M9UPL31", -1), StringExternal("Param/Value/CAA559D8"), StringExternal("Param/Value/DA646A4A"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(819950640), 17.0, -1, 10.0, true);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryMortarPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL30", -1), StringExternal("Param/Value/1B96127D"), StringExternal("Param/Value/99B95AE5"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    Wait(3.0, c_timeReal);
    UnitSetPropertyFixed(UnitFromId(1750421352), c_unitPropLife, 50.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematic4_Init () {
    gt_EndingCinematic4 = TriggerCreate("gt_EndingCinematic4_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic 5
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematic5_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup autoB273D96C_g;
    int autoB273D96C_u;
    unit autoB273D96C_var;
    unitgroup autoBD8023BA_g;
    int autoBD8023BA_u;
    unit autoBD8023BA_var;
    unitgroup auto462BCEF1_g;
    int auto462BCEF1_u;
    unit auto462BCEF1_var;
    unitgroup auto5C07BF7A_g;
    int auto5C07BF7A_u;
    unit auto5C07BF7A_var;

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerSkippableBegin(PlayerGroupAll(), 0, gt_EndingCinematicCleanup, false, false);
    CameraShakeStart(gv_pLAYER_01_USER, c_cameraPositionTarget, c_cameraDirectionXYZ, 0.2, 0.05, 100.0, 8.0);
    CinematicFade(false, 5.0, c_fadeStyleNormal, Color(100.00, 100.00, 100.00), 0.0, true);
    RegionPlayableMapSet(RegionFromId(69));
    CameraSetBounds(PlayerGroupAll(), RegionPlayableMap(), true);
    UISetMiniMapBounds(PlayerGroupAll(), RegionPlayableMap());
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(194092084), 0.0, -1, 10.0, true);
    autoB273D96C_g = UnitGroup(null, 12, RegionFromId(69), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoB273D96C_u = UnitGroupCount(autoB273D96C_g, c_unitCountAll);
    for (;; autoB273D96C_u -= 1) {
        autoB273D96C_var = UnitGroupUnitFromEnd(autoB273D96C_g, autoB273D96C_u);
        if (autoB273D96C_var == null) { break; }
        UnitSetOwner(autoB273D96C_var, gv_pLAYER_01_USER, false);
    }
    autoBD8023BA_g = UnitGroup(null, gv_p03_HUMANSENEMY, null, UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    autoBD8023BA_u = UnitGroupCount(autoBD8023BA_g, c_unitCountAll);
    for (;; autoBD8023BA_u -= 1) {
        autoBD8023BA_var = UnitGroupUnitFromEnd(autoBD8023BA_g, autoBD8023BA_u);
        if (autoBD8023BA_var == null) { break; }
        UnitIssueOrder(autoBD8023BA_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueReplace);
        UnitIssueOrder(autoBD8023BA_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoBD8023BA_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
        UnitIssueOrder(autoBD8023BA_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
    }
    auto462BCEF1_g = UnitGroup(null, 13, RegionFromId(69), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto462BCEF1_u = UnitGroupCount(auto462BCEF1_g, c_unitCountAll);
    for (;; auto462BCEF1_u -= 1) {
        auto462BCEF1_var = UnitGroupUnitFromEnd(auto462BCEF1_g, auto462BCEF1_u);
        if (auto462BCEF1_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto462BCEF1_var, true);
        UnitSetOwner(auto462BCEF1_var, gv_p03_HUMANSENEMY, false);
        UnitIssueOrder(auto462BCEF1_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueReplace);
        UnitIssueOrder(auto462BCEF1_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto462BCEF1_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto462BCEF1_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
    }
    CinematicFade(true, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, false);
    CameraApplyInfo(gv_pLAYER_01_USER, CameraInfoFromId(208447334), 20.0, -1, 10.0, true);
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("UPLGeneratorPortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomLeft), "", "Talk", SoundLink("M9UPL22", -1), StringExternal("Param/Value/561ECABE"), StringExternal("Param/Value/60CB34FF"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    auto5C07BF7A_g = UnitGroup(null, 13, RegionFromId(69), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32))), 0);
    auto5C07BF7A_u = UnitGroupCount(auto5C07BF7A_g, c_unitCountAll);
    for (;; auto5C07BF7A_u -= 1) {
        auto5C07BF7A_var = UnitGroupUnitFromEnd(auto5C07BF7A_g, auto5C07BF7A_u);
        if (auto5C07BF7A_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto5C07BF7A_var, true);
        UnitSetOwner(auto5C07BF7A_var, gv_p03_HUMANSENEMY, false);
        UnitIssueOrder(auto5C07BF7A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueReplace);
        UnitIssueOrder(auto5C07BF7A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto5C07BF7A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
        UnitIssueOrder(auto5C07BF7A_var, OrderTargetingPoint(AbilityCommand("attack", 0), RegionRandomPoint(RegionFromId(69))), c_orderQueueAddToEnd);
    }
    TransmissionSendForPlayerSelect(PlayerGroupAll(), TransmissionSourceFromModel("InfantryRiflePortrait"), libNtve_gf_CinematicPortrait(libNtve_ge_CinematicPortraitPosition_BottomRight), "", "Talk", SoundLink("M9UPL33", -1), StringExternal("Param/Value/9799C23D"), StringExternal("Param/Value/9CF02DDE"), 0.0, c_transmissionDurationSub, true, c_maxPlayers, false);
    Wait(4.0, c_timeReal);
    SoundPlayForPlayer(SoundLink("M9UPL34", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
    Wait(1.0, c_timeReal);
    TriggerExecute(gt_EndingCinematicCleanup, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematic5_Init () {
    gt_EndingCinematic5 = TriggerCreate("gt_EndingCinematic5_Func");
    TriggerAddEventUnitDied(gt_EndingCinematic5, UnitRefFromUnit(UnitFromId(1750421352)));
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ending Cinematic Cleanup
//--------------------------------------------------------------------------------------------------
bool gt_EndingCinematicCleanup_Func (bool testConds, bool runActions) {
    // Variable Declarations
    fixed lv_fadeDuration;

    // Automatic Variable Declarations
    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    PlayerSetState(1, c_playerStateXPGain, true);
    PlayerSetState(2, c_playerStateXPGain, true);
    CinematicFade(false, 2.0, c_fadeStyleNormal, Color(0.00, 0.00, 0.00), 0.0, true);
    SoundStop(DataTableGetSound(true, "endingambience"), true);
    SoundStop(DataTableGetSound(true, "endingmusic"), true);
    libNtve_gf_CinematicMode(false, PlayerGroupAll(), 1.5);
    libNtve_gf_GlobalCinematicSetting(false);
    gv_inCinematic = false;
    TriggerExecute(gt_Victory, true, false);
    return true;
}

//--------------------------------------------------------------------------------------------------
void gt_EndingCinematicCleanup_Init () {
    gt_EndingCinematicCleanup = TriggerCreate("gt_EndingCinematicCleanup_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger Initialization
//--------------------------------------------------------------------------------------------------
void InitTriggers () {
    gt_Initialization_Init();
    gt_Init01PlayersUI_Init();
    gt_Init02Technology_Init();
    gt_Init04AbilitiesUnits_Init();
    gt_Init05MusicEnvironment_Init();
    gt_SetMortarColor_Init();
    gt_InfoChip1_Init();
    gt_InfoChip2_Init();
    gt_InfoChip3_Init();
    gt_InfoChip4_Init();
    gt_TipHarvestBiomass_Init();
    gt_TipSleepersHarvested_Init();
    gt_TipNestAttacked_Init();
    gt_Stat_HumansHarvested_Init();
    gt_Stat_NoiseMakersDestroyed_Init();
    gt_Stat_DefilersLost_Init();
    gt_DefeatColonyShip1Escaped_Init();
    gt_DefeatColonyShip2Escaped_Init();
    gt_DefeatAllUnitsKilled_Init();
    gt_DefeatAllUnitsKilledOnShips_Init();
    gt_VictorySiegeCompleted_Init();
    gt_VictorySequence_Init();
    gt_Victory_Init();
    gt_Defeat_Init();
    gt_VictoryCheat_Init();
    gt_DefeatCheat_Init();
    gt_StartingAreaEastGateTripwire_Init();
    gt_StartingAreaLeftTripwire_Init();
    gt_StartingAreaCloseRightTripwire_Init();
    gt_StartingAreaCloseMiddleRightTripwire_Init();
    gt_StartingAreaCloseFarRightTripwire_Init();
    gt_ColonyShip1AreaSlohrTripwire_Init();
    gt_ColonyShip1AreaBehemothsTripwire_Init();
    gt_ColonyShip1AreaCARRTripwire_Init();
    gt_ColonyShip2AreaAnnouncementTripwire_Init();
    gt_ColonyShip2AreaCaptainDeadTripwire_Init();
    gt_ColonyShip2AreaSecurityArrivesTripwire_Init();
    gt_ColonyShip2AreaIsThatAllYouGotTripwire_Init();
    gt_ColonyShip2AreaScreamingSoldierTripwire_Init();
    gt_SiegeAreaTripwire1_Init();
    gt_SiegeAreaTripwire2_Init();
    gt_SiegeAreaTripwire3_Init();
    gt_SiegeAreaTripwire4_Init();
    gt_SiegeAreaTripwire5_Init();
    gt_StartingAreaGate1Death_Init();
    gt_StartingAreaGateInvisible1Death_Init();
    gt_StartingAreaGate2Death_Init();
    gt_StartingAreaGateInvisible2Death_Init();
    gt_StartingAreaCivilianStopandRun_Init();
    gt_StartingAreaCivilianEscape1_Init();
    gt_StartingAreaCivilianEscape1A_Init();
    gt_StartingAreaCivilianEscape2_Init();
    gt_StartingAreaCivilianEscape2A_Init();
    gt_StartingAreaCivilianEscape3_Init();
    gt_StartingAreaLeftCiviliansRun_Init();
    gt_StartingAreaCloseRightCiviliansRun_Init();
    gt_StartingAreaMediumRightCiviliansRun_Init();
    gt_StartingAreaFarRightCiviliansRun_Init();
    gt_StartingAreaCivilianDespawn_Init();
    gt_StartingAreaKillReticle1Ping1_Init();
    gt_StartingAreaKillReticle1Ping1AlternateCondition_Init();
    gt_StartingAreaKillReticle2_Init();
    gt_StartingAreaKillPing2_Init();
    gt_StartingAreaKillPing3_Init();
    gt_StartingAreaKillPing4_Init();
    gt_StartingAreaKillPing5_Init();
    gt_StartingAreaPlagueSetting_Init();
    gt_StartingAreaBegins_Init();
    gt_StartingAreaWarning_Init();
    gt_StartingAreaCompletion_Init();
    gt_ColonyShipArea1Door2Open_Init();
    gt_ColonyShipArea1Door1Open_Init();
    gt_ColonyShipDeathCount_Init();
    gt_ColonyShipDeathCount2_Init();
    gt_ColonyShipArea1Begins_Init();
    gt_ColonyShipArea1Reinforcements_Init();
    gt_ColonyShipArea1Reinforcements2_Init();
    gt_ColonyShipArea1Alarm_Init();
    gt_ColonyShipArea1AlarmDestroyed_Init();
    gt_ColonyShipAreaLighting_Init();
    gt_ColonyShipArea1Completion_Init();
    gt_ColonyShipArea2DoorOpen1_Init();
    gt_ColonyShipArea2DoorOpen5_Init();
    gt_ColonyShipArea2DoorClose1_Init();
    gt_ColonyShipArea2DoorClose5_Init();
    gt_ColonyShipArea2DoorReinforcements1_Init();
    gt_ColonyShipArea2DoorReinforcements2_Init();
    gt_ColonyShipArea2DoorReinforcements3_Init();
    gt_ColonyShipArea2DoorReinforcements4_Init();
    gt_ColonyShipArea2ReinforcementDoorDies1_Init();
    gt_ColonyShipArea2ReinforcementDoorDies2_Init();
    gt_ColonyShipArea2ReinforcementDoorDies3_Init();
    gt_ColonyShipArea2ReinforcementDoorDies4_Init();
    gt_ColonyShipArea2Begins_Init();
    gt_ColonyShipArea2Alarm_Init();
    gt_ColonyShipArea2AlarmDestroyed_Init();
    gt_ColonyShipArea2Completion_Init();
    gt_SiegeAreaBegins_Init();
    gt_SiegeAreaReticleDestroyed_Init();
    gt_SiegeAreaComplete_Init();
    gt_IntroCinematicSetup_Init();
    gt_IntroCinematicCinematic_Init();
    gt_IntroCinematicNukes_Init();
    gt_IntroCinematicNukes2_Init();
    gt_IntroCinematicCleanup_Init();
    gt_ColonyShipCinematicSetup_Init();
    gt_ColonyShipCinematicUnits_Init();
    gt_ColonyShipCinematic_Init();
    gt_ColonyShipCinematicCleanup_Init();
    gt_VictoryQ_Init();
    gt_EndingCinematicSetup_Init();
    gt_EndingCinematicUnits_Init();
    gt_EndingCinematic1_Init();
    gt_EndingCinematic2_Init();
    gt_EndingCinematic3_Init();
    gt_EndingCinematic4_Init();
    gt_EndingCinematic5_Init();
    gt_EndingCinematicCleanup_Init();
}

//--------------------------------------------------------------------------------------------------
// Map Initialization
//--------------------------------------------------------------------------------------------------
void InitMap () {
    InitLibs();
    InitGlobals();
    InitTriggers();
}
